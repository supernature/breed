Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    EXCLAMATION
    CARET
    LCOMMENT
    SLASH
    LESS
    TOKEN_ID
    CMCOMENT
    DOT
    MCOMMENT
    NEWLINE
    FLPAREN
    BLOCK
    TILDE
    YACC_START
    PERCENT
    DASH
    AT
    FRPAREN
    AND
    NMBER
    TEST_TOKEN
    COMMA
    MORE

Grammar

Rule 0     S' -> program
Rule 1     program -> grammar_statment options_statment rule_statments
Rule 2     grammar_statment -> GRAMMAR ID SEMI
Rule 3     options_statment -> OPTIONS BLPAREN option_statments BRPAREN
Rule 4     options_statment -> empty
Rule 5     option_statments -> option_statment
Rule 6     option_statments -> option_statments option_statment
Rule 7     option_statment -> ID EQUALS ID SEMI
Rule 8     rule_statments -> rule_statment
Rule 9     rule_statments -> rule_statments rule_statment
Rule 10    rule_statment -> ID COLON rules SEMI
Rule 11    rules -> rule
Rule 12    rules -> rules rule
Rule 13    rule -> expr
Rule 14    rule -> rule expr
Rule 15    rule -> rule VERTICAL expr
Rule 16    rule -> empty
Rule 17    expr -> ptoken
Rule 18    expr -> s_expr
Rule 19    sub_expr -> LPAREN rule RPAREN
Rule 20    sub_expr -> LPAREN rule RPAREN operator
Rule 21    s_expr -> <empty>
Rule 22    s_expr -> expr operator
Rule 23    s_expr -> expr
Rule 24    s_expr -> LPAREN RPAREN
Rule 25    s_expr -> expr sub_expr
Rule 26    s_expr -> sub_expr
Rule 27    operator -> PLUS
Rule 28    operator -> MULT
Rule 29    operator -> QUES
Rule 30    ptoken -> ID
Rule 31    ptoken -> SPE_TOKEN
Rule 32    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
AT                   : 
BLOCK                : 
BLPAREN              : 3
BRPAREN              : 3
CARET                : 
CMCOMENT             : 
COLON                : 10
COMMA                : 
DASH                 : 
DOT                  : 
EQUALS               : 7
EXCLAMATION          : 
FLPAREN              : 
FRPAREN              : 
GRAMMAR              : 2
ID                   : 2 7 7 10 30
LCOMMENT             : 
LESS                 : 
LPAREN               : 19 20 24
MCOMMENT             : 
MORE                 : 
MULT                 : 28
NEWLINE              : 
NMBER                : 
OPTIONS              : 3
PERCENT              : 
PLUS                 : 27
QUES                 : 29
RPAREN               : 19 20 24
SEMI                 : 2 7 10
SLASH                : 
SPE_TOKEN            : 31
TEST_TOKEN           : 
TILDE                : 
TOKEN_ID             : 
VERTICAL             : 15
YACC_START           : 
error                : 

Nonterminals, with rules where they appear

empty                : 4 16
expr                 : 13 14 15 22 23 25
grammar_statment     : 1
operator             : 20 22
option_statment      : 5 6
option_statments     : 3 6
options_statment     : 1
program              : 0
ptoken               : 17
rule                 : 11 12 14 15 19 20
rule_statment        : 8 9
rule_statments       : 1 9
rules                : 10 12
s_expr               : 18
sub_expr             : 25 26

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . grammar_statment options_statment rule_statments
    (2) grammar_statment -> . GRAMMAR ID SEMI

    GRAMMAR         shift and go to state 1

    program                        shift and go to state 2
    grammar_statment               shift and go to state 3

state 1

    (2) grammar_statment -> GRAMMAR . ID SEMI

    ID              shift and go to state 4


state 2

    (0) S' -> program .



state 3

    (1) program -> grammar_statment . options_statment rule_statments
    (3) options_statment -> . OPTIONS BLPAREN option_statments BRPAREN
    (4) options_statment -> . empty
    (32) empty -> .

    OPTIONS         shift and go to state 6
    ID              reduce using rule 32 (empty -> .)

    options_statment               shift and go to state 5
    empty                          shift and go to state 7

state 4

    (2) grammar_statment -> GRAMMAR ID . SEMI

    SEMI            shift and go to state 8


state 5

    (1) program -> grammar_statment options_statment . rule_statments
    (8) rule_statments -> . rule_statment
    (9) rule_statments -> . rule_statments rule_statment
    (10) rule_statment -> . ID COLON rules SEMI

    ID              shift and go to state 11

    rule_statments                 shift and go to state 9
    rule_statment                  shift and go to state 10

state 6

    (3) options_statment -> OPTIONS . BLPAREN option_statments BRPAREN

    BLPAREN         shift and go to state 12


state 7

    (4) options_statment -> empty .

    ID              reduce using rule 4 (options_statment -> empty .)


state 8

    (2) grammar_statment -> GRAMMAR ID SEMI .

    OPTIONS         reduce using rule 2 (grammar_statment -> GRAMMAR ID SEMI .)
    ID              reduce using rule 2 (grammar_statment -> GRAMMAR ID SEMI .)


state 9

    (1) program -> grammar_statment options_statment rule_statments .
    (9) rule_statments -> rule_statments . rule_statment
    (10) rule_statment -> . ID COLON rules SEMI

    $end            reduce using rule 1 (program -> grammar_statment options_statment rule_statments .)
    ID              shift and go to state 11

    rule_statment                  shift and go to state 13

state 10

    (8) rule_statments -> rule_statment .

    ID              reduce using rule 8 (rule_statments -> rule_statment .)
    $end            reduce using rule 8 (rule_statments -> rule_statment .)


state 11

    (10) rule_statment -> ID . COLON rules SEMI

    COLON           shift and go to state 14


state 12

    (3) options_statment -> OPTIONS BLPAREN . option_statments BRPAREN
    (5) option_statments -> . option_statment
    (6) option_statments -> . option_statments option_statment
    (7) option_statment -> . ID EQUALS ID SEMI

    ID              shift and go to state 16

    option_statment                shift and go to state 15
    option_statments               shift and go to state 17

state 13

    (9) rule_statments -> rule_statments rule_statment .

    ID              reduce using rule 9 (rule_statments -> rule_statments rule_statment .)
    $end            reduce using rule 9 (rule_statments -> rule_statments rule_statment .)


state 14

    (10) rule_statment -> ID COLON . rules SEMI
    (11) rules -> . rule
    (12) rules -> . rules rule
    (13) rule -> . expr
    (14) rule -> . rule expr
    (15) rule -> . rule VERTICAL expr
    (16) rule -> . empty
    (17) expr -> . ptoken
    (18) expr -> . s_expr
    (32) empty -> .
    (30) ptoken -> . ID
    (31) ptoken -> . SPE_TOKEN
    (21) s_expr -> .
    (22) s_expr -> . expr operator
    (23) s_expr -> . expr
    (24) s_expr -> . LPAREN RPAREN
    (25) s_expr -> . expr sub_expr
    (26) s_expr -> . sub_expr
    (19) sub_expr -> . LPAREN rule RPAREN
    (20) sub_expr -> . LPAREN rule RPAREN operator

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SPE_TOKEN resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for MULT resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for QUES resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for VERTICAL resolved using rule 21 (s_expr -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SPE_TOKEN resolved as shift
  ! reduce/reduce conflict for SEMI resolved using rule 21 (s_expr -> .)
  ! shift/reduce conflict for LPAREN resolved as shift
    ID              shift and go to state 25
    SPE_TOKEN       shift and go to state 27
    PLUS            reduce using rule 21 (s_expr -> .)
    MULT            reduce using rule 21 (s_expr -> .)
    QUES            reduce using rule 21 (s_expr -> .)
    VERTICAL        reduce using rule 21 (s_expr -> .)
    SEMI            reduce using rule 21 (s_expr -> .)
    LPAREN          shift and go to state 23

  ! VERTICAL        [ reduce using rule 32 (empty -> .) ]
  ! ID              [ reduce using rule 32 (empty -> .) ]
  ! SPE_TOKEN       [ reduce using rule 32 (empty -> .) ]
  ! LPAREN          [ reduce using rule 32 (empty -> .) ]
  ! PLUS            [ reduce using rule 32 (empty -> .) ]
  ! MULT            [ reduce using rule 32 (empty -> .) ]
  ! QUES            [ reduce using rule 32 (empty -> .) ]
  ! SEMI            [ reduce using rule 32 (empty -> .) ]
  ! LPAREN          [ reduce using rule 21 (s_expr -> .) ]
  ! ID              [ reduce using rule 21 (s_expr -> .) ]
  ! SPE_TOKEN       [ reduce using rule 21 (s_expr -> .) ]

    s_expr                         shift and go to state 19
    sub_expr                       shift and go to state 24
    ptoken                         shift and go to state 18
    rules                          shift and go to state 20
    expr                           shift and go to state 21
    rule                           shift and go to state 22
    empty                          shift and go to state 26

state 15

    (5) option_statments -> option_statment .

    BRPAREN         reduce using rule 5 (option_statments -> option_statment .)
    ID              reduce using rule 5 (option_statments -> option_statment .)


state 16

    (7) option_statment -> ID . EQUALS ID SEMI

    EQUALS          shift and go to state 28


state 17

    (3) options_statment -> OPTIONS BLPAREN option_statments . BRPAREN
    (6) option_statments -> option_statments . option_statment
    (7) option_statment -> . ID EQUALS ID SEMI

    BRPAREN         shift and go to state 29
    ID              shift and go to state 16

    option_statment                shift and go to state 30

state 18

    (17) expr -> ptoken .

    PLUS            reduce using rule 17 (expr -> ptoken .)
    MULT            reduce using rule 17 (expr -> ptoken .)
    QUES            reduce using rule 17 (expr -> ptoken .)
    LPAREN          reduce using rule 17 (expr -> ptoken .)
    VERTICAL        reduce using rule 17 (expr -> ptoken .)
    ID              reduce using rule 17 (expr -> ptoken .)
    SPE_TOKEN       reduce using rule 17 (expr -> ptoken .)
    SEMI            reduce using rule 17 (expr -> ptoken .)
    RPAREN          reduce using rule 17 (expr -> ptoken .)


state 19

    (18) expr -> s_expr .

    PLUS            reduce using rule 18 (expr -> s_expr .)
    MULT            reduce using rule 18 (expr -> s_expr .)
    QUES            reduce using rule 18 (expr -> s_expr .)
    LPAREN          reduce using rule 18 (expr -> s_expr .)
    VERTICAL        reduce using rule 18 (expr -> s_expr .)
    ID              reduce using rule 18 (expr -> s_expr .)
    SPE_TOKEN       reduce using rule 18 (expr -> s_expr .)
    SEMI            reduce using rule 18 (expr -> s_expr .)
    RPAREN          reduce using rule 18 (expr -> s_expr .)


state 20

    (10) rule_statment -> ID COLON rules . SEMI
    (12) rules -> rules . rule
    (13) rule -> . expr
    (14) rule -> . rule expr
    (15) rule -> . rule VERTICAL expr
    (16) rule -> . empty
    (17) expr -> . ptoken
    (18) expr -> . s_expr
    (32) empty -> .
    (30) ptoken -> . ID
    (31) ptoken -> . SPE_TOKEN
    (21) s_expr -> .
    (22) s_expr -> . expr operator
    (23) s_expr -> . expr
    (24) s_expr -> . LPAREN RPAREN
    (25) s_expr -> . expr sub_expr
    (26) s_expr -> . sub_expr
    (19) sub_expr -> . LPAREN rule RPAREN
    (20) sub_expr -> . LPAREN rule RPAREN operator

  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SPE_TOKEN resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for MULT resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for QUES resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for VERTICAL resolved using rule 21 (s_expr -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SPE_TOKEN resolved as shift
  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    SEMI            shift and go to state 31
    ID              shift and go to state 25
    SPE_TOKEN       shift and go to state 27
    PLUS            reduce using rule 21 (s_expr -> .)
    MULT            reduce using rule 21 (s_expr -> .)
    QUES            reduce using rule 21 (s_expr -> .)
    VERTICAL        reduce using rule 21 (s_expr -> .)
    LPAREN          shift and go to state 23

  ! VERTICAL        [ reduce using rule 32 (empty -> .) ]
  ! ID              [ reduce using rule 32 (empty -> .) ]
  ! SPE_TOKEN       [ reduce using rule 32 (empty -> .) ]
  ! LPAREN          [ reduce using rule 32 (empty -> .) ]
  ! PLUS            [ reduce using rule 32 (empty -> .) ]
  ! MULT            [ reduce using rule 32 (empty -> .) ]
  ! QUES            [ reduce using rule 32 (empty -> .) ]
  ! SEMI            [ reduce using rule 32 (empty -> .) ]
  ! LPAREN          [ reduce using rule 21 (s_expr -> .) ]
  ! ID              [ reduce using rule 21 (s_expr -> .) ]
  ! SPE_TOKEN       [ reduce using rule 21 (s_expr -> .) ]
  ! SEMI            [ reduce using rule 21 (s_expr -> .) ]

    s_expr                         shift and go to state 19
    sub_expr                       shift and go to state 24
    ptoken                         shift and go to state 18
    expr                           shift and go to state 21
    rule                           shift and go to state 32
    empty                          shift and go to state 26

state 21

    (13) rule -> expr .
    (22) s_expr -> expr . operator
    (23) s_expr -> expr .
    (25) s_expr -> expr . sub_expr
    (27) operator -> . PLUS
    (28) operator -> . MULT
    (29) operator -> . QUES
    (19) sub_expr -> . LPAREN rule RPAREN
    (20) sub_expr -> . LPAREN rule RPAREN operator

  ! reduce/reduce conflict for PLUS resolved using rule 13 (rule -> expr .)
  ! reduce/reduce conflict for MULT resolved using rule 13 (rule -> expr .)
  ! reduce/reduce conflict for QUES resolved using rule 13 (rule -> expr .)
  ! reduce/reduce conflict for LPAREN resolved using rule 13 (rule -> expr .)
  ! reduce/reduce conflict for RPAREN resolved using rule 13 (rule -> expr .)
  ! reduce/reduce conflict for VERTICAL resolved using rule 13 (rule -> expr .)
  ! reduce/reduce conflict for ID resolved using rule 13 (rule -> expr .)
  ! reduce/reduce conflict for SPE_TOKEN resolved using rule 13 (rule -> expr .)
  ! reduce/reduce conflict for SEMI resolved using rule 13 (rule -> expr .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for QUES resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    VERTICAL        reduce using rule 13 (rule -> expr .)
    ID              reduce using rule 13 (rule -> expr .)
    SPE_TOKEN       reduce using rule 13 (rule -> expr .)
    SEMI            reduce using rule 13 (rule -> expr .)
    RPAREN          reduce using rule 13 (rule -> expr .)
    PLUS            shift and go to state 35
    MULT            shift and go to state 38
    QUES            shift and go to state 34
    LPAREN          shift and go to state 36

  ! LPAREN          [ reduce using rule 13 (rule -> expr .) ]
  ! PLUS            [ reduce using rule 13 (rule -> expr .) ]
  ! MULT            [ reduce using rule 13 (rule -> expr .) ]
  ! QUES            [ reduce using rule 13 (rule -> expr .) ]
  ! PLUS            [ reduce using rule 23 (s_expr -> expr .) ]
  ! MULT            [ reduce using rule 23 (s_expr -> expr .) ]
  ! QUES            [ reduce using rule 23 (s_expr -> expr .) ]
  ! LPAREN          [ reduce using rule 23 (s_expr -> expr .) ]
  ! RPAREN          [ reduce using rule 23 (s_expr -> expr .) ]
  ! VERTICAL        [ reduce using rule 23 (s_expr -> expr .) ]
  ! ID              [ reduce using rule 23 (s_expr -> expr .) ]
  ! SPE_TOKEN       [ reduce using rule 23 (s_expr -> expr .) ]
  ! SEMI            [ reduce using rule 23 (s_expr -> expr .) ]

    operator                       shift and go to state 37
    sub_expr                       shift and go to state 33

state 22

    (11) rules -> rule .
    (14) rule -> rule . expr
    (15) rule -> rule . VERTICAL expr
    (17) expr -> . ptoken
    (18) expr -> . s_expr
    (30) ptoken -> . ID
    (31) ptoken -> . SPE_TOKEN
    (21) s_expr -> .
    (22) s_expr -> . expr operator
    (23) s_expr -> . expr
    (24) s_expr -> . LPAREN RPAREN
    (25) s_expr -> . expr sub_expr
    (26) s_expr -> . sub_expr
    (19) sub_expr -> . LPAREN rule RPAREN
    (20) sub_expr -> . LPAREN rule RPAREN operator

  ! shift/reduce conflict for VERTICAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SPE_TOKEN resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 11 (rules -> rule .)
  ! reduce/reduce conflict for MULT resolved using rule 11 (rules -> rule .)
  ! reduce/reduce conflict for QUES resolved using rule 11 (rules -> rule .)
  ! reduce/reduce conflict for LPAREN resolved using rule 11 (rules -> rule .)
  ! shift/reduce conflict for VERTICAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SPE_TOKEN resolved as shift
  ! reduce/reduce conflict for SEMI resolved using rule 11 (rules -> rule .)
  ! shift/reduce conflict for LPAREN resolved as shift
    SEMI            reduce using rule 11 (rules -> rule .)
    PLUS            reduce using rule 11 (rules -> rule .)
    MULT            reduce using rule 11 (rules -> rule .)
    QUES            reduce using rule 11 (rules -> rule .)
    VERTICAL        shift and go to state 39
    ID              shift and go to state 25
    SPE_TOKEN       shift and go to state 27
    LPAREN          shift and go to state 23

  ! ID              [ reduce using rule 11 (rules -> rule .) ]
  ! SPE_TOKEN       [ reduce using rule 11 (rules -> rule .) ]
  ! LPAREN          [ reduce using rule 11 (rules -> rule .) ]
  ! VERTICAL        [ reduce using rule 11 (rules -> rule .) ]
  ! PLUS            [ reduce using rule 21 (s_expr -> .) ]
  ! MULT            [ reduce using rule 21 (s_expr -> .) ]
  ! QUES            [ reduce using rule 21 (s_expr -> .) ]
  ! LPAREN          [ reduce using rule 21 (s_expr -> .) ]
  ! VERTICAL        [ reduce using rule 21 (s_expr -> .) ]
  ! ID              [ reduce using rule 21 (s_expr -> .) ]
  ! SPE_TOKEN       [ reduce using rule 21 (s_expr -> .) ]
  ! SEMI            [ reduce using rule 21 (s_expr -> .) ]

    s_expr                         shift and go to state 19
    sub_expr                       shift and go to state 24
    ptoken                         shift and go to state 18
    expr                           shift and go to state 40

state 23

    (24) s_expr -> LPAREN . RPAREN
    (19) sub_expr -> LPAREN . rule RPAREN
    (20) sub_expr -> LPAREN . rule RPAREN operator
    (13) rule -> . expr
    (14) rule -> . rule expr
    (15) rule -> . rule VERTICAL expr
    (16) rule -> . empty
    (17) expr -> . ptoken
    (18) expr -> . s_expr
    (32) empty -> .
    (30) ptoken -> . ID
    (31) ptoken -> . SPE_TOKEN
    (21) s_expr -> .
    (22) s_expr -> . expr operator
    (23) s_expr -> . expr
    (24) s_expr -> . LPAREN RPAREN
    (25) s_expr -> . expr sub_expr
    (26) s_expr -> . sub_expr
    (19) sub_expr -> . LPAREN rule RPAREN
    (20) sub_expr -> . LPAREN rule RPAREN operator

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SPE_TOKEN resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for MULT resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for QUES resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 21 (s_expr -> .)
  ! shift/reduce conflict for RPAREN resolved as shift
  ! reduce/reduce conflict for VERTICAL resolved using rule 21 (s_expr -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SPE_TOKEN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    RPAREN          shift and go to state 41
    ID              shift and go to state 25
    SPE_TOKEN       shift and go to state 27
    PLUS            reduce using rule 21 (s_expr -> .)
    MULT            reduce using rule 21 (s_expr -> .)
    QUES            reduce using rule 21 (s_expr -> .)
    VERTICAL        reduce using rule 21 (s_expr -> .)
    LPAREN          shift and go to state 23

  ! RPAREN          [ reduce using rule 32 (empty -> .) ]
  ! VERTICAL        [ reduce using rule 32 (empty -> .) ]
  ! ID              [ reduce using rule 32 (empty -> .) ]
  ! SPE_TOKEN       [ reduce using rule 32 (empty -> .) ]
  ! LPAREN          [ reduce using rule 32 (empty -> .) ]
  ! PLUS            [ reduce using rule 32 (empty -> .) ]
  ! MULT            [ reduce using rule 32 (empty -> .) ]
  ! QUES            [ reduce using rule 32 (empty -> .) ]
  ! LPAREN          [ reduce using rule 21 (s_expr -> .) ]
  ! RPAREN          [ reduce using rule 21 (s_expr -> .) ]
  ! ID              [ reduce using rule 21 (s_expr -> .) ]
  ! SPE_TOKEN       [ reduce using rule 21 (s_expr -> .) ]

    s_expr                         shift and go to state 19
    sub_expr                       shift and go to state 24
    ptoken                         shift and go to state 18
    expr                           shift and go to state 21
    rule                           shift and go to state 42
    empty                          shift and go to state 26

state 24

    (26) s_expr -> sub_expr .

    PLUS            reduce using rule 26 (s_expr -> sub_expr .)
    MULT            reduce using rule 26 (s_expr -> sub_expr .)
    QUES            reduce using rule 26 (s_expr -> sub_expr .)
    LPAREN          reduce using rule 26 (s_expr -> sub_expr .)
    VERTICAL        reduce using rule 26 (s_expr -> sub_expr .)
    ID              reduce using rule 26 (s_expr -> sub_expr .)
    SPE_TOKEN       reduce using rule 26 (s_expr -> sub_expr .)
    SEMI            reduce using rule 26 (s_expr -> sub_expr .)
    RPAREN          reduce using rule 26 (s_expr -> sub_expr .)


state 25

    (30) ptoken -> ID .

    PLUS            reduce using rule 30 (ptoken -> ID .)
    MULT            reduce using rule 30 (ptoken -> ID .)
    QUES            reduce using rule 30 (ptoken -> ID .)
    LPAREN          reduce using rule 30 (ptoken -> ID .)
    VERTICAL        reduce using rule 30 (ptoken -> ID .)
    ID              reduce using rule 30 (ptoken -> ID .)
    SPE_TOKEN       reduce using rule 30 (ptoken -> ID .)
    SEMI            reduce using rule 30 (ptoken -> ID .)
    RPAREN          reduce using rule 30 (ptoken -> ID .)


state 26

    (16) rule -> empty .

    VERTICAL        reduce using rule 16 (rule -> empty .)
    ID              reduce using rule 16 (rule -> empty .)
    SPE_TOKEN       reduce using rule 16 (rule -> empty .)
    LPAREN          reduce using rule 16 (rule -> empty .)
    PLUS            reduce using rule 16 (rule -> empty .)
    MULT            reduce using rule 16 (rule -> empty .)
    QUES            reduce using rule 16 (rule -> empty .)
    SEMI            reduce using rule 16 (rule -> empty .)
    RPAREN          reduce using rule 16 (rule -> empty .)


state 27

    (31) ptoken -> SPE_TOKEN .

    PLUS            reduce using rule 31 (ptoken -> SPE_TOKEN .)
    MULT            reduce using rule 31 (ptoken -> SPE_TOKEN .)
    QUES            reduce using rule 31 (ptoken -> SPE_TOKEN .)
    LPAREN          reduce using rule 31 (ptoken -> SPE_TOKEN .)
    VERTICAL        reduce using rule 31 (ptoken -> SPE_TOKEN .)
    ID              reduce using rule 31 (ptoken -> SPE_TOKEN .)
    SPE_TOKEN       reduce using rule 31 (ptoken -> SPE_TOKEN .)
    SEMI            reduce using rule 31 (ptoken -> SPE_TOKEN .)
    RPAREN          reduce using rule 31 (ptoken -> SPE_TOKEN .)


state 28

    (7) option_statment -> ID EQUALS . ID SEMI

    ID              shift and go to state 43


state 29

    (3) options_statment -> OPTIONS BLPAREN option_statments BRPAREN .

    ID              reduce using rule 3 (options_statment -> OPTIONS BLPAREN option_statments BRPAREN .)


state 30

    (6) option_statments -> option_statments option_statment .

    BRPAREN         reduce using rule 6 (option_statments -> option_statments option_statment .)
    ID              reduce using rule 6 (option_statments -> option_statments option_statment .)


state 31

    (10) rule_statment -> ID COLON rules SEMI .

    ID              reduce using rule 10 (rule_statment -> ID COLON rules SEMI .)
    $end            reduce using rule 10 (rule_statment -> ID COLON rules SEMI .)


state 32

    (12) rules -> rules rule .
    (14) rule -> rule . expr
    (15) rule -> rule . VERTICAL expr
    (17) expr -> . ptoken
    (18) expr -> . s_expr
    (30) ptoken -> . ID
    (31) ptoken -> . SPE_TOKEN
    (21) s_expr -> .
    (22) s_expr -> . expr operator
    (23) s_expr -> . expr
    (24) s_expr -> . LPAREN RPAREN
    (25) s_expr -> . expr sub_expr
    (26) s_expr -> . sub_expr
    (19) sub_expr -> . LPAREN rule RPAREN
    (20) sub_expr -> . LPAREN rule RPAREN operator

  ! shift/reduce conflict for VERTICAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SPE_TOKEN resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 12 (rules -> rules rule .)
  ! reduce/reduce conflict for MULT resolved using rule 12 (rules -> rules rule .)
  ! reduce/reduce conflict for QUES resolved using rule 12 (rules -> rules rule .)
  ! reduce/reduce conflict for LPAREN resolved using rule 12 (rules -> rules rule .)
  ! shift/reduce conflict for VERTICAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SPE_TOKEN resolved as shift
  ! reduce/reduce conflict for SEMI resolved using rule 12 (rules -> rules rule .)
  ! shift/reduce conflict for LPAREN resolved as shift
    SEMI            reduce using rule 12 (rules -> rules rule .)
    PLUS            reduce using rule 12 (rules -> rules rule .)
    MULT            reduce using rule 12 (rules -> rules rule .)
    QUES            reduce using rule 12 (rules -> rules rule .)
    VERTICAL        shift and go to state 39
    ID              shift and go to state 25
    SPE_TOKEN       shift and go to state 27
    LPAREN          shift and go to state 23

  ! ID              [ reduce using rule 12 (rules -> rules rule .) ]
  ! SPE_TOKEN       [ reduce using rule 12 (rules -> rules rule .) ]
  ! LPAREN          [ reduce using rule 12 (rules -> rules rule .) ]
  ! VERTICAL        [ reduce using rule 12 (rules -> rules rule .) ]
  ! PLUS            [ reduce using rule 21 (s_expr -> .) ]
  ! MULT            [ reduce using rule 21 (s_expr -> .) ]
  ! QUES            [ reduce using rule 21 (s_expr -> .) ]
  ! LPAREN          [ reduce using rule 21 (s_expr -> .) ]
  ! VERTICAL        [ reduce using rule 21 (s_expr -> .) ]
  ! ID              [ reduce using rule 21 (s_expr -> .) ]
  ! SPE_TOKEN       [ reduce using rule 21 (s_expr -> .) ]
  ! SEMI            [ reduce using rule 21 (s_expr -> .) ]

    s_expr                         shift and go to state 19
    sub_expr                       shift and go to state 24
    ptoken                         shift and go to state 18
    expr                           shift and go to state 40

state 33

    (25) s_expr -> expr sub_expr .

    PLUS            reduce using rule 25 (s_expr -> expr sub_expr .)
    MULT            reduce using rule 25 (s_expr -> expr sub_expr .)
    QUES            reduce using rule 25 (s_expr -> expr sub_expr .)
    LPAREN          reduce using rule 25 (s_expr -> expr sub_expr .)
    VERTICAL        reduce using rule 25 (s_expr -> expr sub_expr .)
    ID              reduce using rule 25 (s_expr -> expr sub_expr .)
    SPE_TOKEN       reduce using rule 25 (s_expr -> expr sub_expr .)
    SEMI            reduce using rule 25 (s_expr -> expr sub_expr .)
    RPAREN          reduce using rule 25 (s_expr -> expr sub_expr .)


state 34

    (29) operator -> QUES .

    PLUS            reduce using rule 29 (operator -> QUES .)
    MULT            reduce using rule 29 (operator -> QUES .)
    QUES            reduce using rule 29 (operator -> QUES .)
    LPAREN          reduce using rule 29 (operator -> QUES .)
    VERTICAL        reduce using rule 29 (operator -> QUES .)
    ID              reduce using rule 29 (operator -> QUES .)
    SPE_TOKEN       reduce using rule 29 (operator -> QUES .)
    SEMI            reduce using rule 29 (operator -> QUES .)
    RPAREN          reduce using rule 29 (operator -> QUES .)


state 35

    (27) operator -> PLUS .

    PLUS            reduce using rule 27 (operator -> PLUS .)
    MULT            reduce using rule 27 (operator -> PLUS .)
    QUES            reduce using rule 27 (operator -> PLUS .)
    LPAREN          reduce using rule 27 (operator -> PLUS .)
    VERTICAL        reduce using rule 27 (operator -> PLUS .)
    ID              reduce using rule 27 (operator -> PLUS .)
    SPE_TOKEN       reduce using rule 27 (operator -> PLUS .)
    SEMI            reduce using rule 27 (operator -> PLUS .)
    RPAREN          reduce using rule 27 (operator -> PLUS .)


state 36

    (19) sub_expr -> LPAREN . rule RPAREN
    (20) sub_expr -> LPAREN . rule RPAREN operator
    (13) rule -> . expr
    (14) rule -> . rule expr
    (15) rule -> . rule VERTICAL expr
    (16) rule -> . empty
    (17) expr -> . ptoken
    (18) expr -> . s_expr
    (32) empty -> .
    (30) ptoken -> . ID
    (31) ptoken -> . SPE_TOKEN
    (21) s_expr -> .
    (22) s_expr -> . expr operator
    (23) s_expr -> . expr
    (24) s_expr -> . LPAREN RPAREN
    (25) s_expr -> . expr sub_expr
    (26) s_expr -> . sub_expr
    (19) sub_expr -> . LPAREN rule RPAREN
    (20) sub_expr -> . LPAREN rule RPAREN operator

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SPE_TOKEN resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for MULT resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for QUES resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 21 (s_expr -> .)
  ! reduce/reduce conflict for VERTICAL resolved using rule 21 (s_expr -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SPE_TOKEN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    ID              shift and go to state 25
    SPE_TOKEN       shift and go to state 27
    PLUS            reduce using rule 21 (s_expr -> .)
    MULT            reduce using rule 21 (s_expr -> .)
    QUES            reduce using rule 21 (s_expr -> .)
    RPAREN          reduce using rule 21 (s_expr -> .)
    VERTICAL        reduce using rule 21 (s_expr -> .)
    LPAREN          shift and go to state 23

  ! RPAREN          [ reduce using rule 32 (empty -> .) ]
  ! VERTICAL        [ reduce using rule 32 (empty -> .) ]
  ! ID              [ reduce using rule 32 (empty -> .) ]
  ! SPE_TOKEN       [ reduce using rule 32 (empty -> .) ]
  ! LPAREN          [ reduce using rule 32 (empty -> .) ]
  ! PLUS            [ reduce using rule 32 (empty -> .) ]
  ! MULT            [ reduce using rule 32 (empty -> .) ]
  ! QUES            [ reduce using rule 32 (empty -> .) ]
  ! LPAREN          [ reduce using rule 21 (s_expr -> .) ]
  ! ID              [ reduce using rule 21 (s_expr -> .) ]
  ! SPE_TOKEN       [ reduce using rule 21 (s_expr -> .) ]

    s_expr                         shift and go to state 19
    sub_expr                       shift and go to state 24
    ptoken                         shift and go to state 18
    expr                           shift and go to state 21
    rule                           shift and go to state 42
    empty                          shift and go to state 26

state 37

    (22) s_expr -> expr operator .

    PLUS            reduce using rule 22 (s_expr -> expr operator .)
    MULT            reduce using rule 22 (s_expr -> expr operator .)
    QUES            reduce using rule 22 (s_expr -> expr operator .)
    LPAREN          reduce using rule 22 (s_expr -> expr operator .)
    VERTICAL        reduce using rule 22 (s_expr -> expr operator .)
    ID              reduce using rule 22 (s_expr -> expr operator .)
    SPE_TOKEN       reduce using rule 22 (s_expr -> expr operator .)
    SEMI            reduce using rule 22 (s_expr -> expr operator .)
    RPAREN          reduce using rule 22 (s_expr -> expr operator .)


state 38

    (28) operator -> MULT .

    PLUS            reduce using rule 28 (operator -> MULT .)
    MULT            reduce using rule 28 (operator -> MULT .)
    QUES            reduce using rule 28 (operator -> MULT .)
    LPAREN          reduce using rule 28 (operator -> MULT .)
    VERTICAL        reduce using rule 28 (operator -> MULT .)
    ID              reduce using rule 28 (operator -> MULT .)
    SPE_TOKEN       reduce using rule 28 (operator -> MULT .)
    SEMI            reduce using rule 28 (operator -> MULT .)
    RPAREN          reduce using rule 28 (operator -> MULT .)


state 39

    (15) rule -> rule VERTICAL . expr
    (17) expr -> . ptoken
    (18) expr -> . s_expr
    (30) ptoken -> . ID
    (31) ptoken -> . SPE_TOKEN
    (21) s_expr -> .
    (22) s_expr -> . expr operator
    (23) s_expr -> . expr
    (24) s_expr -> . LPAREN RPAREN
    (25) s_expr -> . expr sub_expr
    (26) s_expr -> . sub_expr
    (19) sub_expr -> . LPAREN rule RPAREN
    (20) sub_expr -> . LPAREN rule RPAREN operator

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SPE_TOKEN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    ID              shift and go to state 25
    SPE_TOKEN       shift and go to state 27
    PLUS            reduce using rule 21 (s_expr -> .)
    MULT            reduce using rule 21 (s_expr -> .)
    QUES            reduce using rule 21 (s_expr -> .)
    VERTICAL        reduce using rule 21 (s_expr -> .)
    SEMI            reduce using rule 21 (s_expr -> .)
    RPAREN          reduce using rule 21 (s_expr -> .)
    LPAREN          shift and go to state 23

  ! LPAREN          [ reduce using rule 21 (s_expr -> .) ]
  ! ID              [ reduce using rule 21 (s_expr -> .) ]
  ! SPE_TOKEN       [ reduce using rule 21 (s_expr -> .) ]

    s_expr                         shift and go to state 19
    sub_expr                       shift and go to state 24
    ptoken                         shift and go to state 18
    expr                           shift and go to state 44

state 40

    (14) rule -> rule expr .
    (22) s_expr -> expr . operator
    (23) s_expr -> expr .
    (25) s_expr -> expr . sub_expr
    (27) operator -> . PLUS
    (28) operator -> . MULT
    (29) operator -> . QUES
    (19) sub_expr -> . LPAREN rule RPAREN
    (20) sub_expr -> . LPAREN rule RPAREN operator

  ! reduce/reduce conflict for PLUS resolved using rule 14 (rule -> rule expr .)
  ! reduce/reduce conflict for MULT resolved using rule 14 (rule -> rule expr .)
  ! reduce/reduce conflict for QUES resolved using rule 14 (rule -> rule expr .)
  ! reduce/reduce conflict for LPAREN resolved using rule 14 (rule -> rule expr .)
  ! reduce/reduce conflict for VERTICAL resolved using rule 14 (rule -> rule expr .)
  ! reduce/reduce conflict for ID resolved using rule 14 (rule -> rule expr .)
  ! reduce/reduce conflict for SPE_TOKEN resolved using rule 14 (rule -> rule expr .)
  ! reduce/reduce conflict for SEMI resolved using rule 14 (rule -> rule expr .)
  ! reduce/reduce conflict for RPAREN resolved using rule 14 (rule -> rule expr .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for QUES resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    VERTICAL        reduce using rule 14 (rule -> rule expr .)
    ID              reduce using rule 14 (rule -> rule expr .)
    SPE_TOKEN       reduce using rule 14 (rule -> rule expr .)
    SEMI            reduce using rule 14 (rule -> rule expr .)
    RPAREN          reduce using rule 14 (rule -> rule expr .)
    PLUS            shift and go to state 35
    MULT            shift and go to state 38
    QUES            shift and go to state 34
    LPAREN          shift and go to state 36

  ! LPAREN          [ reduce using rule 14 (rule -> rule expr .) ]
  ! PLUS            [ reduce using rule 14 (rule -> rule expr .) ]
  ! MULT            [ reduce using rule 14 (rule -> rule expr .) ]
  ! QUES            [ reduce using rule 14 (rule -> rule expr .) ]
  ! PLUS            [ reduce using rule 23 (s_expr -> expr .) ]
  ! MULT            [ reduce using rule 23 (s_expr -> expr .) ]
  ! QUES            [ reduce using rule 23 (s_expr -> expr .) ]
  ! LPAREN          [ reduce using rule 23 (s_expr -> expr .) ]
  ! VERTICAL        [ reduce using rule 23 (s_expr -> expr .) ]
  ! ID              [ reduce using rule 23 (s_expr -> expr .) ]
  ! SPE_TOKEN       [ reduce using rule 23 (s_expr -> expr .) ]
  ! SEMI            [ reduce using rule 23 (s_expr -> expr .) ]
  ! RPAREN          [ reduce using rule 23 (s_expr -> expr .) ]

    operator                       shift and go to state 37
    sub_expr                       shift and go to state 33

state 41

    (24) s_expr -> LPAREN RPAREN .

    PLUS            reduce using rule 24 (s_expr -> LPAREN RPAREN .)
    MULT            reduce using rule 24 (s_expr -> LPAREN RPAREN .)
    QUES            reduce using rule 24 (s_expr -> LPAREN RPAREN .)
    LPAREN          reduce using rule 24 (s_expr -> LPAREN RPAREN .)
    VERTICAL        reduce using rule 24 (s_expr -> LPAREN RPAREN .)
    ID              reduce using rule 24 (s_expr -> LPAREN RPAREN .)
    SPE_TOKEN       reduce using rule 24 (s_expr -> LPAREN RPAREN .)
    SEMI            reduce using rule 24 (s_expr -> LPAREN RPAREN .)
    RPAREN          reduce using rule 24 (s_expr -> LPAREN RPAREN .)


state 42

    (19) sub_expr -> LPAREN rule . RPAREN
    (20) sub_expr -> LPAREN rule . RPAREN operator
    (14) rule -> rule . expr
    (15) rule -> rule . VERTICAL expr
    (17) expr -> . ptoken
    (18) expr -> . s_expr
    (30) ptoken -> . ID
    (31) ptoken -> . SPE_TOKEN
    (21) s_expr -> .
    (22) s_expr -> . expr operator
    (23) s_expr -> . expr
    (24) s_expr -> . LPAREN RPAREN
    (25) s_expr -> . expr sub_expr
    (26) s_expr -> . sub_expr
    (19) sub_expr -> . LPAREN rule RPAREN
    (20) sub_expr -> . LPAREN rule RPAREN operator

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for VERTICAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SPE_TOKEN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    RPAREN          shift and go to state 45
    VERTICAL        shift and go to state 39
    ID              shift and go to state 25
    SPE_TOKEN       shift and go to state 27
    PLUS            reduce using rule 21 (s_expr -> .)
    MULT            reduce using rule 21 (s_expr -> .)
    QUES            reduce using rule 21 (s_expr -> .)
    LPAREN          shift and go to state 23

  ! LPAREN          [ reduce using rule 21 (s_expr -> .) ]
  ! RPAREN          [ reduce using rule 21 (s_expr -> .) ]
  ! VERTICAL        [ reduce using rule 21 (s_expr -> .) ]
  ! ID              [ reduce using rule 21 (s_expr -> .) ]
  ! SPE_TOKEN       [ reduce using rule 21 (s_expr -> .) ]

    s_expr                         shift and go to state 19
    sub_expr                       shift and go to state 24
    ptoken                         shift and go to state 18
    expr                           shift and go to state 40

state 43

    (7) option_statment -> ID EQUALS ID . SEMI

    SEMI            shift and go to state 46


state 44

    (15) rule -> rule VERTICAL expr .
    (22) s_expr -> expr . operator
    (23) s_expr -> expr .
    (25) s_expr -> expr . sub_expr
    (27) operator -> . PLUS
    (28) operator -> . MULT
    (29) operator -> . QUES
    (19) sub_expr -> . LPAREN rule RPAREN
    (20) sub_expr -> . LPAREN rule RPAREN operator

  ! reduce/reduce conflict for PLUS resolved using rule 15 (rule -> rule VERTICAL expr .)
  ! reduce/reduce conflict for MULT resolved using rule 15 (rule -> rule VERTICAL expr .)
  ! reduce/reduce conflict for QUES resolved using rule 15 (rule -> rule VERTICAL expr .)
  ! reduce/reduce conflict for LPAREN resolved using rule 15 (rule -> rule VERTICAL expr .)
  ! reduce/reduce conflict for VERTICAL resolved using rule 15 (rule -> rule VERTICAL expr .)
  ! reduce/reduce conflict for ID resolved using rule 15 (rule -> rule VERTICAL expr .)
  ! reduce/reduce conflict for SPE_TOKEN resolved using rule 15 (rule -> rule VERTICAL expr .)
  ! reduce/reduce conflict for SEMI resolved using rule 15 (rule -> rule VERTICAL expr .)
  ! reduce/reduce conflict for RPAREN resolved using rule 15 (rule -> rule VERTICAL expr .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for QUES resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    VERTICAL        reduce using rule 15 (rule -> rule VERTICAL expr .)
    ID              reduce using rule 15 (rule -> rule VERTICAL expr .)
    SPE_TOKEN       reduce using rule 15 (rule -> rule VERTICAL expr .)
    SEMI            reduce using rule 15 (rule -> rule VERTICAL expr .)
    RPAREN          reduce using rule 15 (rule -> rule VERTICAL expr .)
    PLUS            shift and go to state 35
    MULT            shift and go to state 38
    QUES            shift and go to state 34
    LPAREN          shift and go to state 36

  ! LPAREN          [ reduce using rule 15 (rule -> rule VERTICAL expr .) ]
  ! PLUS            [ reduce using rule 15 (rule -> rule VERTICAL expr .) ]
  ! MULT            [ reduce using rule 15 (rule -> rule VERTICAL expr .) ]
  ! QUES            [ reduce using rule 15 (rule -> rule VERTICAL expr .) ]
  ! PLUS            [ reduce using rule 23 (s_expr -> expr .) ]
  ! MULT            [ reduce using rule 23 (s_expr -> expr .) ]
  ! QUES            [ reduce using rule 23 (s_expr -> expr .) ]
  ! LPAREN          [ reduce using rule 23 (s_expr -> expr .) ]
  ! VERTICAL        [ reduce using rule 23 (s_expr -> expr .) ]
  ! ID              [ reduce using rule 23 (s_expr -> expr .) ]
  ! SPE_TOKEN       [ reduce using rule 23 (s_expr -> expr .) ]
  ! SEMI            [ reduce using rule 23 (s_expr -> expr .) ]
  ! RPAREN          [ reduce using rule 23 (s_expr -> expr .) ]

    operator                       shift and go to state 37
    sub_expr                       shift and go to state 33

state 45

    (19) sub_expr -> LPAREN rule RPAREN .
    (20) sub_expr -> LPAREN rule RPAREN . operator
    (27) operator -> . PLUS
    (28) operator -> . MULT
    (29) operator -> . QUES

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for QUES resolved as shift
    LPAREN          reduce using rule 19 (sub_expr -> LPAREN rule RPAREN .)
    RPAREN          reduce using rule 19 (sub_expr -> LPAREN rule RPAREN .)
    VERTICAL        reduce using rule 19 (sub_expr -> LPAREN rule RPAREN .)
    ID              reduce using rule 19 (sub_expr -> LPAREN rule RPAREN .)
    SPE_TOKEN       reduce using rule 19 (sub_expr -> LPAREN rule RPAREN .)
    SEMI            reduce using rule 19 (sub_expr -> LPAREN rule RPAREN .)
    PLUS            shift and go to state 35
    MULT            shift and go to state 38
    QUES            shift and go to state 34

  ! PLUS            [ reduce using rule 19 (sub_expr -> LPAREN rule RPAREN .) ]
  ! MULT            [ reduce using rule 19 (sub_expr -> LPAREN rule RPAREN .) ]
  ! QUES            [ reduce using rule 19 (sub_expr -> LPAREN rule RPAREN .) ]

    operator                       shift and go to state 47

state 46

    (7) option_statment -> ID EQUALS ID SEMI .

    BRPAREN         reduce using rule 7 (option_statment -> ID EQUALS ID SEMI .)
    ID              reduce using rule 7 (option_statment -> ID EQUALS ID SEMI .)


state 47

    (20) sub_expr -> LPAREN rule RPAREN operator .

    PLUS            reduce using rule 20 (sub_expr -> LPAREN rule RPAREN operator .)
    MULT            reduce using rule 20 (sub_expr -> LPAREN rule RPAREN operator .)
    QUES            reduce using rule 20 (sub_expr -> LPAREN rule RPAREN operator .)
    LPAREN          reduce using rule 20 (sub_expr -> LPAREN rule RPAREN operator .)
    RPAREN          reduce using rule 20 (sub_expr -> LPAREN rule RPAREN operator .)
    VERTICAL        reduce using rule 20 (sub_expr -> LPAREN rule RPAREN operator .)
    ID              reduce using rule 20 (sub_expr -> LPAREN rule RPAREN operator .)
    SPE_TOKEN       reduce using rule 20 (sub_expr -> LPAREN rule RPAREN operator .)
    SEMI            reduce using rule 20 (sub_expr -> LPAREN rule RPAREN operator .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 14 resolved as shift
WARNING: shift/reduce conflict for SPE_TOKEN in state 14 resolved as shift
WARNING: shift/reduce conflict for ID in state 14 resolved as shift
WARNING: shift/reduce conflict for SPE_TOKEN in state 14 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 14 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 20 resolved as shift
WARNING: shift/reduce conflict for ID in state 20 resolved as shift
WARNING: shift/reduce conflict for SPE_TOKEN in state 20 resolved as shift
WARNING: shift/reduce conflict for ID in state 20 resolved as shift
WARNING: shift/reduce conflict for SPE_TOKEN in state 20 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 20 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 20 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 21 resolved as shift
WARNING: shift/reduce conflict for MULT in state 21 resolved as shift
WARNING: shift/reduce conflict for QUES in state 21 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 21 resolved as shift
WARNING: shift/reduce conflict for VERTICAL in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for SPE_TOKEN in state 22 resolved as shift
WARNING: shift/reduce conflict for VERTICAL in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for SPE_TOKEN in state 22 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 22 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 23 resolved as shift
WARNING: shift/reduce conflict for ID in state 23 resolved as shift
WARNING: shift/reduce conflict for SPE_TOKEN in state 23 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 23 resolved as shift
WARNING: shift/reduce conflict for ID in state 23 resolved as shift
WARNING: shift/reduce conflict for SPE_TOKEN in state 23 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 23 resolved as shift
WARNING: shift/reduce conflict for VERTICAL in state 32 resolved as shift
WARNING: shift/reduce conflict for ID in state 32 resolved as shift
WARNING: shift/reduce conflict for SPE_TOKEN in state 32 resolved as shift
WARNING: shift/reduce conflict for VERTICAL in state 32 resolved as shift
WARNING: shift/reduce conflict for ID in state 32 resolved as shift
WARNING: shift/reduce conflict for SPE_TOKEN in state 32 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 32 resolved as shift
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for SPE_TOKEN in state 36 resolved as shift
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for SPE_TOKEN in state 36 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 36 resolved as shift
WARNING: shift/reduce conflict for ID in state 39 resolved as shift
WARNING: shift/reduce conflict for SPE_TOKEN in state 39 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 40 resolved as shift
WARNING: shift/reduce conflict for MULT in state 40 resolved as shift
WARNING: shift/reduce conflict for QUES in state 40 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 40 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 42 resolved as shift
WARNING: shift/reduce conflict for VERTICAL in state 42 resolved as shift
WARNING: shift/reduce conflict for ID in state 42 resolved as shift
WARNING: shift/reduce conflict for SPE_TOKEN in state 42 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MULT in state 44 resolved as shift
WARNING: shift/reduce conflict for QUES in state 44 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 44 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MULT in state 45 resolved as shift
WARNING: shift/reduce conflict for QUES in state 45 resolved as shift
WARNING: reduce/reduce conflict in state 14 resolved using rule (s_expr -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 14
WARNING: reduce/reduce conflict in state 20 resolved using rule (s_expr -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 20
WARNING: reduce/reduce conflict in state 21 resolved using rule (rule -> expr)
WARNING: rejected rule (s_expr -> expr) in state 21
WARNING: reduce/reduce conflict in state 22 resolved using rule (rules -> rule)
WARNING: rejected rule (s_expr -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 23 resolved using rule (s_expr -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 23
WARNING: reduce/reduce conflict in state 32 resolved using rule (rules -> rules rule)
WARNING: rejected rule (s_expr -> <empty>) in state 32
WARNING: reduce/reduce conflict in state 36 resolved using rule (s_expr -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 36
WARNING: reduce/reduce conflict in state 40 resolved using rule (rule -> rule expr)
WARNING: rejected rule (s_expr -> expr) in state 40
WARNING: reduce/reduce conflict in state 44 resolved using rule (rule -> rule VERTICAL expr)
WARNING: rejected rule (s_expr -> expr) in state 44
WARNING: Rule (s_expr -> expr) is never reduced
