Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    GENERIC
    NEWLINE
    GOTO
    VAR
    LCOMMENT
    FUTURE
    REST
    OPERATOR
    INNER
    CAST
    MCOMMENT
    CONST
    OUTER

Grammar

Rule 0     S' -> compilationUnit
Rule 1     compilationUnit -> expt_2 expt_0 expt_1
Rule 2     compilationUnit -> expt_2 expt_0 empty
Rule 3     compilationUnit -> expt_2 empty expt_1
Rule 4     compilationUnit -> expt_2 empty empty
Rule 5     compilationUnit -> empty expt_0 expt_1
Rule 6     compilationUnit -> empty expt_0 empty
Rule 7     compilationUnit -> empty empty expt_1
Rule 8     compilationUnit -> empty empty empty
Rule 9     compilationUnit -> annotations expr_0
Rule 10    packageDeclaration -> PACKAGE qualifiedName SEMI
Rule 11    importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI
Rule 12    importDeclaration -> IMPORT expt_3 qualifiedName SEMI
Rule 13    importDeclaration -> IMPORT qualifiedName expt_4 SEMI
Rule 14    importDeclaration -> IMPORT qualifiedName SEMI
Rule 15    typeDeclaration -> classOrInterfaceDeclaration
Rule 16    typeDeclaration -> SEMI
Rule 17    classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1
Rule 18    classOrInterfaceDeclaration -> expr_1
Rule 19    classOrInterfaceModifiers -> expt_5
Rule 20    classOrInterfaceModifiers -> empty
Rule 21    classOrInterfaceModifier -> annotation
Rule 22    classOrInterfaceModifier -> PUBLIC
Rule 23    classOrInterfaceModifier -> PROTECTED
Rule 24    classOrInterfaceModifier -> PRIVATE
Rule 25    classOrInterfaceModifier -> ABSTRACT
Rule 26    classOrInterfaceModifier -> STATIC
Rule 27    classOrInterfaceModifier -> FINAL
Rule 28    classOrInterfaceModifier -> STRICTFP
Rule 29    modifiers -> expt_6
Rule 30    modifiers -> empty
Rule 31    classDeclaration -> normalClassDeclaration
Rule 32    classDeclaration -> enumDeclaration
Rule 33    normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody
Rule 34    normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody
Rule 35    normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody
Rule 36    normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody
Rule 37    normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody
Rule 38    normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody
Rule 39    normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody
Rule 40    normalClassDeclaration -> CLASS Identifier empty empty empty classBody
Rule 41    typeParameters -> LESS typeParameter expt_10 MORE
Rule 42    typeParameters -> LESS typeParameter empty MORE
Rule 43    typeParameter -> Identifier expt_11
Rule 44    typeParameter -> Identifier empty
Rule 45    typeBound -> type expt_12
Rule 46    typeBound -> type empty
Rule 47    enumDeclaration -> ENUM Identifier expt_9 enumBody
Rule 48    enumDeclaration -> ENUM Identifier empty enumBody
Rule 49    enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN
Rule 50    enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN
Rule 51    enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN
Rule 52    enumBody -> BLPAREN expt_13 empty empty BRPAREN
Rule 53    enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN
Rule 54    enumBody -> BLPAREN empty expt_14 empty BRPAREN
Rule 55    enumBody -> BLPAREN empty empty expt_15 BRPAREN
Rule 56    enumBody -> BLPAREN empty empty empty BRPAREN
Rule 57    enumConstants -> enumConstant expt_16
Rule 58    enumConstants -> enumConstant empty
Rule 59    enumConstant -> expt_17 Identifier expt_18 classBody
Rule 60    enumConstant -> expt_17 Identifier expt_18
Rule 61    enumConstant -> expt_17 Identifier classBody
Rule 62    enumConstant -> expt_17 Identifier
Rule 63    enumConstant -> Identifier expt_18 classBody
Rule 64    enumConstant -> Identifier expt_18
Rule 65    enumConstant -> Identifier classBody
Rule 66    enumConstant -> Identifier
Rule 67    enumBodyDeclarations -> SEMI classBodyDeclarations
Rule 68    enumBodyDeclarations -> SEMI
Rule 69    interfaceDeclaration -> normalInterfaceDeclaration
Rule 70    interfaceDeclaration -> annotationTypeDeclaration
Rule 71    normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody
Rule 72    normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody
Rule 73    normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody
Rule 74    normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody
Rule 75    typeList -> type expt_22
Rule 76    typeList -> type empty
Rule 77    classBody -> BLPAREN classBodyDeclarations BRPAREN
Rule 78    classBody -> BLPAREN BRPAREN
Rule 79    interfaceBody -> BLPAREN expt_23 BRPAREN
Rule 80    interfaceBody -> BLPAREN empty BRPAREN
Rule 81    classBodyDeclaration -> modifiers memberDecl
Rule 82    classBodyDeclaration -> expt_3 block
Rule 83    classBodyDeclaration -> empty block
Rule 84    classBodyDeclaration -> SEMI
Rule 85    memberDecl -> genericMethodOrConstructorDecl
Rule 86    memberDecl -> memberDeclaration
Rule 87    memberDecl -> VOID Identifier voidMethodDeclaratorRest
Rule 88    memberDecl -> Identifier constructorDeclaratorRest
Rule 89    memberDecl -> interfaceDeclaration
Rule 90    memberDecl -> classDeclaration
Rule 91    memberDeclaration -> type expr_2
Rule 92    genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest
Rule 93    genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest
Rule 94    genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest
Rule 95    methodDeclaration -> Identifier methodDeclaratorRest
Rule 96    fieldDeclaration -> variableDeclarators SEMI
Rule 97    interfaceBodyDeclaration -> modifiers interfaceMemberDecl
Rule 98    interfaceBodyDeclaration -> SEMI
Rule 99    interfaceMemberDecl -> interfaceMethodOrFieldDecl
Rule 100   interfaceMemberDecl -> interfaceGenericMethodDecl
Rule 101   interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest
Rule 102   interfaceMemberDecl -> interfaceDeclaration
Rule 103   interfaceMemberDecl -> classDeclaration
Rule 104   interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest
Rule 105   interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI
Rule 106   interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest
Rule 107   methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4
Rule 108   methodDeclaratorRest -> formalParameters expt_24 empty expr_4
Rule 109   methodDeclaratorRest -> formalParameters empty expt_25 expr_4
Rule 110   methodDeclaratorRest -> formalParameters empty empty expr_4
Rule 111   voidMethodDeclaratorRest -> formalParameters expt_25 expr_4
Rule 112   voidMethodDeclaratorRest -> formalParameters empty expr_4
Rule 113   interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI
Rule 114   interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI
Rule 115   interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI
Rule 116   interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI
Rule 117   interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest
Rule 118   voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI
Rule 119   voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI
Rule 120   constructorDeclaratorRest -> formalParameters expt_25 constructorBody
Rule 121   constructorDeclaratorRest -> formalParameters empty constructorBody
Rule 122   constantDeclarator -> Identifier constantDeclaratorRest
Rule 123   variableDeclarators -> variableDeclarator expt_26
Rule 124   variableDeclarators -> variableDeclarator empty
Rule 125   variableDeclarator -> variableDeclaratorId expt_27
Rule 126   variableDeclarator -> variableDeclaratorId empty
Rule 127   constantDeclaratorsRest -> constantDeclaratorRest expt_28
Rule 128   constantDeclaratorsRest -> constantDeclaratorRest empty
Rule 129   constantDeclaratorRest -> expt_24 EQUALS variableInitializer
Rule 130   constantDeclaratorRest -> empty EQUALS variableInitializer
Rule 131   variableDeclaratorId -> Identifier expt_24
Rule 132   variableDeclaratorId -> Identifier empty
Rule 133   variableInitializer -> arrayInitializer
Rule 134   variableInitializer -> expression
Rule 135   arrayInitializer -> BLPAREN expt_31 BRPAREN
Rule 136   arrayInitializer -> BLPAREN empty BRPAREN
Rule 137   modifier -> annotation
Rule 138   modifier -> PUBLIC
Rule 139   modifier -> PROTECTED
Rule 140   modifier -> PRIVATE
Rule 141   modifier -> STATIC
Rule 142   modifier -> ABSTRACT
Rule 143   modifier -> FINAL
Rule 144   modifier -> NATIVE
Rule 145   modifier -> SYNCHRONIZED
Rule 146   modifier -> TRANSIENT
Rule 147   modifier -> VOLATILE
Rule 148   modifier -> STRICTFP
Rule 149   enumConstantName -> Identifier
Rule 150   type -> primitiveType expt_24
Rule 151   type -> primitiveType empty
Rule 152   type -> classOrInterfaceType expt_24
Rule 153   type -> classOrInterfaceType empty
Rule 154   classOrInterfaceType -> Identifier expt_32 expt_33
Rule 155   classOrInterfaceType -> Identifier expt_32 empty
Rule 156   classOrInterfaceType -> Identifier empty expt_33
Rule 157   classOrInterfaceType -> Identifier empty empty
Rule 158   primitiveType -> BOOLEAN
Rule 159   primitiveType -> CHAR
Rule 160   primitiveType -> BYTE
Rule 161   primitiveType -> SHORT
Rule 162   primitiveType -> INT
Rule 163   primitiveType -> LONG
Rule 164   primitiveType -> FLOAT
Rule 165   primitiveType -> DOUBLE
Rule 166   variableModifier -> FINAL
Rule 167   variableModifier -> annotation
Rule 168   typeArguments -> LESS typeArgument expt_34 MORE
Rule 169   typeArguments -> LESS typeArgument MORE
Rule 170   typeArgument -> QUES expt_35
Rule 171   typeArgument -> QUES empty
Rule 172   typeArgument -> type
Rule 173   qualifiedNameList -> qualifiedName expt_36
Rule 174   qualifiedNameList -> qualifiedName empty
Rule 175   formalParameters -> LPAREN expt_37 RPAREN
Rule 176   formalParameters -> LPAREN empty RPAREN
Rule 177   formalParameterDecls -> variableModifiers type formalParameterDeclsRest
Rule 178   formalParameterDecls -> type formalParameterDeclsRest
Rule 179   formalParameterDeclsRest -> OP_ARRAY variableDeclaratorId
Rule 180   formalParameterDeclsRest -> variableDeclaratorId expt_38
Rule 181   formalParameterDeclsRest -> variableDeclaratorId empty
Rule 182   methodBody -> block
Rule 183   constructorBody -> BLPAREN expt_39 expt_40 BRPAREN
Rule 184   constructorBody -> BLPAREN expt_39 empty BRPAREN
Rule 185   constructorBody -> BLPAREN empty expt_40 BRPAREN
Rule 186   constructorBody -> BLPAREN empty empty BRPAREN
Rule 187   explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI
Rule 188   explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI
Rule 189   explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI
Rule 190   explicitConstructorInvocation -> empty expr_6 arguments SEMI
Rule 191   qualifiedName -> Identifier expt_42
Rule 192   qualifiedName -> Identifier empty
Rule 193   literal -> integerLiteral
Rule 194   literal -> FloatingPointLiteral
Rule 195   literal -> CharacterLiteral
Rule 196   literal -> StringLiteral
Rule 197   literal -> booleanLiteral
Rule 198   literal -> NULL
Rule 199   booleanLiteral -> TRUE
Rule 200   booleanLiteral -> FALSE
Rule 201   annotations -> annotation
Rule 202   annotations -> annotations annotation
Rule 203   annotation -> AT annotationName LPAREN elementValuePairs RPAREN
Rule 204   annotation -> AT annotationName LPAREN elementValue RPAREN
Rule 205   annotation -> AT annotationName LPAREN RPAREN
Rule 206   annotation -> AT annotationName
Rule 207   annotationName -> Identifier expt_42
Rule 208   annotationName -> Identifier empty
Rule 209   elementValuePairs -> elementValuePair expt_44
Rule 210   elementValuePairs -> elementValuePair empty
Rule 211   elementValuePair -> Identifier EQUALS elementValue
Rule 212   elementValue -> conditionalExpression
Rule 213   elementValue -> annotation
Rule 214   elementValue -> elementValueArrayInitializer
Rule 215   elementValueArrayInitializer -> BLPAREN expt_46 expt_30 BRPAREN
Rule 216   elementValueArrayInitializer -> BLPAREN expt_46 empty BRPAREN
Rule 217   elementValueArrayInitializer -> BLPAREN empty expt_30 BRPAREN
Rule 218   elementValueArrayInitializer -> BLPAREN empty empty BRPAREN
Rule 219   annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody
Rule 220   annotationTypeBody -> BLPAREN expt_47 BRPAREN
Rule 221   annotationTypeBody -> BLPAREN empty BRPAREN
Rule 222   annotationTypeElementDeclaration -> modifiers annotationTypeElementRest
Rule 223   annotationTypeElementRest -> annotationTypeDeclaration expt_48
Rule 224   annotationTypeElementRest -> annotationTypeDeclaration empty
Rule 225   annotationTypeElementRest -> enumDeclaration expt_48
Rule 226   annotationTypeElementRest -> enumDeclaration empty
Rule 227   annotationTypeElementRest -> normalInterfaceDeclaration expt_48
Rule 228   annotationTypeElementRest -> normalInterfaceDeclaration empty
Rule 229   annotationTypeElementRest -> normalClassDeclaration expt_48
Rule 230   annotationTypeElementRest -> normalClassDeclaration empty
Rule 231   annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI
Rule 232   annotationMethodOrConstantRest -> annotationMethodRest
Rule 233   annotationMethodOrConstantRest -> annotationConstantRest
Rule 234   annotationMethodRest -> Identifier LPAREN RPAREN expt_49
Rule 235   annotationMethodRest -> Identifier LPAREN RPAREN empty
Rule 236   annotationConstantRest -> variableDeclarators
Rule 237   defaultValue -> DEFAULT elementValue
Rule 238   block -> BLPAREN expt_40 BRPAREN
Rule 239   block -> BLPAREN empty BRPAREN
Rule 240   blockStatement -> localVariableDeclarationStatement
Rule 241   blockStatement -> classOrInterfaceDeclaration
Rule 242   blockStatement -> statement
Rule 243   localVariableDeclarationStatement -> localVariableDeclaration SEMI
Rule 244   localVariableDeclarationStatement -> SEMI
Rule 245   localVariableDeclaration -> variableModifiers type variableDeclarators
Rule 246   localVariableDeclaration -> type variableDeclarators
Rule 247   variableModifiers -> expt_50
Rule 248   statement -> Identifier COLON statement
Rule 249   statement -> statementExpression SEMI
Rule 250   statement -> SEMI
Rule 251   statement -> CONTINUE Identifier SEMI
Rule 252   statement -> CONTINUE SEMI
Rule 253   statement -> BREAK Identifier SEMI
Rule 254   statement -> BREAK SEMI
Rule 255   statement -> THROW expression SEMI
Rule 256   statement -> RETURN expt_53 SEMI
Rule 257   statement -> RETURN SEMI
Rule 258   statement -> SYNCHRONIZED parExpression block
Rule 259   statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
Rule 260   statement -> TRY block expr_9
Rule 261   statement -> DO statement WHILE parExpression SEMI
Rule 262   statement -> WHILE parExpression statement
Rule 263   statement -> FOR LPAREN forControl RPAREN statement
Rule 264   statement -> IF parExpression statement ELSE statement
Rule 265   statement -> IF parExpression statement
Rule 266   statement -> ASSERT expression expt_51 SEMI
Rule 267   statement -> ASSERT expression SEMI
Rule 268   statement -> block
Rule 269   catches -> catchClause expt_55
Rule 270   catches -> catchClause empty
Rule 271   catchClause -> CATCH LPAREN formalParameter RPAREN block
Rule 272   formalParameter -> variableModifiers type variableDeclaratorId
Rule 273   switchBlockStatementGroups -> expt_56
Rule 274   switchBlockStatementGroups -> empty
Rule 275   switchBlockStatementGroup -> expr_10 expt_40
Rule 276   switchBlockStatementGroup -> expr_10 empty
Rule 277   switchLabel -> CASE constantExpression COLON
Rule 278   switchLabel -> CASE enumConstantName COLON
Rule 279   switchLabel -> DEFAULT COLON
Rule 280   forControl -> expt_57 SEMI expt_58 SEMI expt_59
Rule 281   forControl -> expt_57 SEMI expt_58 SEMI empty
Rule 282   forControl -> expt_57 SEMI empty SEMI expt_59
Rule 283   forControl -> expt_57 SEMI empty SEMI empty
Rule 284   forControl -> empty SEMI expt_58 SEMI expt_59
Rule 285   forControl -> empty SEMI expt_58 SEMI empty
Rule 286   forControl -> empty SEMI empty SEMI expt_59
Rule 287   forControl -> empty SEMI empty SEMI empty
Rule 288   forControl -> enhancedForControl
Rule 289   forInit -> localVariableDeclaration
Rule 290   forInit -> expressionList
Rule 291   enhancedForControl -> variableModifiers type Identifier COLON expression
Rule 292   forUpdate -> expressionList
Rule 293   parExpression -> LPAREN expression RPAREN
Rule 294   expressionList -> expression expt_60
Rule 295   expressionList -> expression
Rule 296   statementExpression -> expression
Rule 297   constantExpression -> expression
Rule 298   expression -> conditionalExpression assignmentOperator expression
Rule 299   expression -> conditionalExpression
Rule 300   assignmentOperator -> EQUALS
Rule 301   assignmentOperator -> ASS_ADD
Rule 302   assignmentOperator -> ASS_SUB
Rule 303   assignmentOperator -> ASS_MUL
Rule 304   assignmentOperator -> ASS_DIV
Rule 305   assignmentOperator -> ASS_AND
Rule 306   assignmentOperator -> ASS_OR
Rule 307   assignmentOperator -> ASS_XOR
Rule 308   assignmentOperator -> ASS_MOD
Rule 309   assignmentOperator -> ASS_SHL
Rule 310   assignmentOperator -> ASS_SHRR
Rule 311   assignmentOperator -> ASS_SHR
Rule 312   conditionalExpression -> conditionalOrExpression QUES expression COLON expression
Rule 313   conditionalExpression -> conditionalOrExpression
Rule 314   conditionalOrExpression -> conditionalAndExpression expt_63
Rule 315   conditionalOrExpression -> conditionalAndExpression
Rule 316   conditionalAndExpression -> inclusiveOrExpression expt_64
Rule 317   conditionalAndExpression -> inclusiveOrExpression
Rule 318   inclusiveOrExpression -> exclusiveOrExpression expt_65
Rule 319   inclusiveOrExpression -> exclusiveOrExpression
Rule 320   exclusiveOrExpression -> andExpression expt_66
Rule 321   exclusiveOrExpression -> andExpression
Rule 322   andExpression -> equalityExpression expt_67
Rule 323   andExpression -> equalityExpression
Rule 324   equalityExpression -> instanceOfExpression expt_68
Rule 325   equalityExpression -> instanceOfExpression
Rule 326   instanceOfExpression -> relationalExpression INSTANCEOF type
Rule 327   instanceOfExpression -> relationalExpression
Rule 328   relationalExpression -> shiftExpression expt_70
Rule 329   relationalExpression -> shiftExpression
Rule 330   relationalOp -> OP_LE
Rule 331   relationalOp -> OP_GE
Rule 332   relationalOp -> LESS
Rule 333   relationalOp -> MORE
Rule 334   shiftExpression -> additiveExpression expt_71
Rule 335   shiftExpression -> additiveExpression
Rule 336   shiftOp -> OP_SHR
Rule 337   shiftOp -> OP_SHL
Rule 338   shiftOp -> OP_SHRR
Rule 339   additiveExpression -> multiplicativeExpression expt_72
Rule 340   additiveExpression -> multiplicativeExpression
Rule 341   multiplicativeExpression -> unaryExpression expt_73
Rule 342   multiplicativeExpression -> unaryExpression
Rule 343   unaryExpression -> PLUS unaryExpression
Rule 344   unaryExpression -> DASH unaryExpression
Rule 345   unaryExpression -> OP_INC unaryExpression
Rule 346   unaryExpression -> OP_DEC unaryExpression
Rule 347   unaryExpression -> unaryExpressionNotPlusMinus
Rule 348   unaryExpressionNotPlusMinus -> primary expt_74 expr_14
Rule 349   unaryExpressionNotPlusMinus -> primary expr_14
Rule 350   unaryExpressionNotPlusMinus -> primary expt_74
Rule 351   unaryExpressionNotPlusMinus -> primary
Rule 352   unaryExpressionNotPlusMinus -> castExpression
Rule 353   unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression
Rule 354   unaryExpressionNotPlusMinus -> TILDE unaryExpression
Rule 355   castExpression -> LPAREN primitiveType RPAREN unaryExpression
Rule 356   castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
Rule 357   primary -> VOID DOT CLASS
Rule 358   primary -> primitiveType expt_24 DOT CLASS
Rule 359   primary -> primitiveType DOT CLASS
Rule 360   primary -> Identifier expt_42 identifierSuffix
Rule 361   primary -> Identifier expt_42
Rule 362   primary -> Identifier identifierSuffix
Rule 363   primary -> Identifier
Rule 364   primary -> NEW creator
Rule 365   primary -> literal
Rule 366   primary -> SUPER superSuffix
Rule 367   primary -> THIS expt_42 identifierSuffix
Rule 368   primary -> THIS expt_42
Rule 369   primary -> THIS identifierSuffix
Rule 370   primary -> THIS
Rule 371   primary -> parExpression
Rule 372   identifierSuffix -> suffixStatements DOT CLASS
Rule 373   identifierSuffix -> suffixExprStatements
Rule 374   identifierSuffix -> arguments
Rule 375   identifierSuffix -> DOT CLASS
Rule 376   identifierSuffix -> DOT explicitGenericInvocation
Rule 377   identifierSuffix -> DOT THIS
Rule 378   identifierSuffix -> DOT SUPER arguments
Rule 379   identifierSuffix -> DOT NEW innerCreator
Rule 380   creator -> nonWildcardTypeArguments createdName classCreatorRest
Rule 381   creator -> createdName classCreatorRest
Rule 382   creator -> createdName arrayCreatorRest
Rule 383   createdName -> classOrInterfaceType
Rule 384   createdName -> primitiveType
Rule 385   innerCreator -> expt_41 Identifier classCreatorRest
Rule 386   innerCreator -> empty Identifier classCreatorRest
Rule 387   arrayCreatorRest -> FLPAREN expr_19
Rule 388   classCreatorRest -> arguments
Rule 389   classCreatorRest -> arguments classBody
Rule 390   explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments
Rule 391   nonWildcardTypeArguments -> LESS typeList MORE
Rule 392   selector -> FLPAREN expression FRPAREN
Rule 393   selector -> DOT NEW innerCreator
Rule 394   selector -> DOT SUPER superSuffix
Rule 395   selector -> DOT THIS
Rule 396   selector -> DOT Identifier expt_18
Rule 397   selector -> DOT Identifier empty
Rule 398   superSuffix -> DOT Identifier expt_18
Rule 399   superSuffix -> DOT Identifier empty
Rule 400   superSuffix -> arguments
Rule 401   arguments -> LPAREN expressionList RPAREN
Rule 402   arguments -> LPAREN RPAREN
Rule 403   expr_0 -> packageDeclaration expt_0 expt_1
Rule 404   expr_0 -> classOrInterfaceDeclaration expt_1
Rule 405   expr_1 -> classDeclaration
Rule 406   expr_1 -> interfaceDeclaration
Rule 407   expr_2 -> methodDeclaration
Rule 408   expr_2 -> fieldDeclaration
Rule 409   expr_3 -> type
Rule 410   expr_3 -> VOID
Rule 411   expr_4 -> methodBody
Rule 412   expr_4 -> SEMI
Rule 413   expr_5 -> EXTENDS
Rule 414   expr_5 -> SUPER
Rule 415   expr_6 -> THIS
Rule 416   expr_6 -> SUPER
Rule 417   expr_9 -> catches FINALLY block
Rule 418   expr_9 -> catches
Rule 419   expr_9 -> FINALLY block
Rule 420   expr_10 -> switchLabel
Rule 421   expr_10 -> expr_10 switchLabel
Rule 422   expr_11 -> OP_EQ
Rule 423   expr_11 -> OP_NE
Rule 424   expr_12 -> PLUS
Rule 425   expr_12 -> DASH
Rule 426   expr_13 -> MULT
Rule 427   expr_13 -> SLASH
Rule 428   expr_13 -> PERCENT
Rule 429   expr_14 -> OP_INC
Rule 430   expr_14 -> OP_DEC
Rule 431   expr_15 -> type
Rule 432   expr_15 -> expression
Rule 433   suffixStatements -> FLPAREN FRPAREN
Rule 434   suffixStatements -> suffixStatements FLPAREN FRPAREN
Rule 435   suffixExprStatements -> FLPAREN expression FRPAREN
Rule 436   suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN
Rule 437   expr_19 -> FRPAREN expt_24 arrayInitializer
Rule 438   expr_19 -> expression FRPAREN expt_76 expt_24
Rule 439   expt_0 -> importDeclaration
Rule 440   expt_0 -> expt_0 importDeclaration
Rule 441   expt_1 -> typeDeclaration
Rule 442   expt_1 -> expt_1 typeDeclaration
Rule 443   expt_2 -> packageDeclaration
Rule 444   expt_2 -> empty
Rule 445   expt_3 -> STATIC
Rule 446   expt_3 -> empty
Rule 447   expt_4 -> DOT MULT
Rule 448   expt_4 -> empty
Rule 449   expt_5 -> classOrInterfaceModifier
Rule 450   expt_5 -> expt_5 classOrInterfaceModifier
Rule 451   expt_6 -> modifier
Rule 452   expt_6 -> expt_6 modifier
Rule 453   expt_7 -> typeParameters
Rule 454   expt_7 -> empty
Rule 455   expt_8 -> EXTENDS type
Rule 456   expt_9 -> IMPLEMENTS typeList
Rule 457   expt_9 -> empty
Rule 458   expt_10 -> COMMA typeParameter
Rule 459   expt_10 -> expt_10 COMMA typeParameter
Rule 460   expt_11 -> EXTENDS typeBound
Rule 461   expt_11 -> empty
Rule 462   expt_12 -> AND type
Rule 463   expt_12 -> expt_12 AND type
Rule 464   expt_13 -> enumConstants
Rule 465   expt_13 -> empty
Rule 466   expt_14 -> COMMA
Rule 467   expt_14 -> empty
Rule 468   expt_15 -> enumBodyDeclarations
Rule 469   expt_15 -> empty
Rule 470   expt_16 -> COMMA enumConstant
Rule 471   expt_16 -> expt_16 COMMA enumConstant
Rule 472   expt_17 -> annotations
Rule 473   expt_17 -> empty
Rule 474   expt_18 -> arguments
Rule 475   expt_18 -> empty
Rule 476   classBodyDeclarations -> classBodyDeclaration
Rule 477   classBodyDeclarations -> classBodyDeclarations classBodyDeclaration
Rule 478   expt_21 -> EXTENDS typeList
Rule 479   expt_21 -> empty
Rule 480   expt_22 -> COMMA type
Rule 481   expt_22 -> expt_22 COMMA type
Rule 482   expt_23 -> interfaceBodyDeclaration
Rule 483   expt_23 -> expt_23 interfaceBodyDeclaration
Rule 484   expt_24 -> FLPAREN FRPAREN
Rule 485   expt_24 -> expt_24 FLPAREN FRPAREN
Rule 486   expt_25 -> THROWS qualifiedNameList
Rule 487   expt_25 -> empty
Rule 488   expt_26 -> COMMA variableDeclarator
Rule 489   expt_26 -> expt_26 COMMA variableDeclarator
Rule 490   expt_27 -> EQUALS variableInitializer
Rule 491   expt_27 -> empty
Rule 492   expt_28 -> COMMA constantDeclarator
Rule 493   expt_28 -> expt_28 COMMA constantDeclarator
Rule 494   expt_29 -> COMMA variableInitializer
Rule 495   expt_29 -> expt_29 COMMA variableInitializer
Rule 496   expt_30 -> COMMA
Rule 497   expt_30 -> empty
Rule 498   expt_31 -> variableInitializer expt_29 expt_30
Rule 499   expt_31 -> empty
Rule 500   expt_32 -> typeArguments
Rule 501   expt_32 -> empty
Rule 502   expt_33 -> DOT Identifier expt_32
Rule 503   expt_33 -> expt_33 DOT Identifier expt_32
Rule 504   expt_34 -> COMMA typeArgument
Rule 505   expt_34 -> expt_34 COMMA typeArgument
Rule 506   expt_35 -> expr_5 type
Rule 507   expt_35 -> empty
Rule 508   expt_36 -> COMMA qualifiedName
Rule 509   expt_36 -> expt_36 COMMA qualifiedName
Rule 510   expt_37 -> formalParameterDecls
Rule 511   expt_37 -> empty
Rule 512   expt_38 -> COMMA formalParameterDecls
Rule 513   expt_38 -> empty
Rule 514   expt_39 -> explicitConstructorInvocation
Rule 515   expt_39 -> empty
Rule 516   expt_40 -> blockStatement
Rule 517   expt_40 -> expt_40 blockStatement
Rule 518   expt_41 -> nonWildcardTypeArguments
Rule 519   expt_41 -> empty
Rule 520   expt_42 -> DOT Identifier
Rule 521   expt_42 -> expt_42 DOT Identifier
Rule 522   expt_44 -> COMMA elementValuePair
Rule 523   expt_44 -> expt_44 COMMA elementValuePair
Rule 524   expt_45 -> COMMA elementValue
Rule 525   expt_45 -> expt_45 COMMA elementValue
Rule 526   expt_45 -> empty
Rule 527   expt_46 -> elementValue expt_45
Rule 528   expt_47 -> annotationTypeElementDeclaration
Rule 529   expt_47 -> expt_47 annotationTypeElementDeclaration
Rule 530   expt_48 -> SEMI
Rule 531   expt_48 -> empty
Rule 532   expt_49 -> defaultValue
Rule 533   expt_49 -> empty
Rule 534   expt_50 -> variableModifier
Rule 535   expt_50 -> expt_50 variableModifier
Rule 536   expt_51 -> COLON expression
Rule 537   expt_51 -> empty
Rule 538   expt_53 -> expression
Rule 539   expt_53 -> empty
Rule 540   expt_55 -> catchClause
Rule 541   expt_55 -> expt_55 catchClause
Rule 542   expt_56 -> switchBlockStatementGroup
Rule 543   expt_56 -> expt_56 switchBlockStatementGroup
Rule 544   expt_57 -> forInit
Rule 545   expt_57 -> empty
Rule 546   expt_58 -> expression
Rule 547   expt_58 -> empty
Rule 548   expt_59 -> forUpdate
Rule 549   expt_59 -> empty
Rule 550   expt_60 -> COMMA expression
Rule 551   expt_60 -> expt_60 COMMA expression
Rule 552   expt_63 -> OP_LOR conditionalAndExpression
Rule 553   expt_63 -> expt_63 OP_LOR conditionalAndExpression
Rule 554   expt_64 -> OP_LAND inclusiveOrExpression
Rule 555   expt_64 -> expt_64 OP_LAND inclusiveOrExpression
Rule 556   expt_65 -> VERTICAL exclusiveOrExpression
Rule 557   expt_65 -> expt_65 VERTICAL exclusiveOrExpression
Rule 558   expt_66 -> CARET andExpression
Rule 559   expt_66 -> expt_66 CARET andExpression
Rule 560   expt_67 -> AND equalityExpression
Rule 561   expt_67 -> expt_67 AND equalityExpression
Rule 562   expt_68 -> expr_11 instanceOfExpression
Rule 563   expt_68 -> expt_68 expr_11 instanceOfExpression
Rule 564   expt_70 -> relationalOp shiftExpression
Rule 565   expt_70 -> expt_70 relationalOp shiftExpression
Rule 566   expt_71 -> shiftOp additiveExpression
Rule 567   expt_71 -> expt_71 shiftOp additiveExpression
Rule 568   expt_72 -> expr_12 multiplicativeExpression
Rule 569   expt_72 -> expt_72 expr_12 multiplicativeExpression
Rule 570   sub_expt_73 -> expr_13 unaryExpression
Rule 571   expt_73 -> sub_expt_73
Rule 572   expt_73 -> expt_73 sub_expt_73
Rule 573   expt_74 -> selector
Rule 574   expt_74 -> expt_74 selector
Rule 575   expt_76 -> FLPAREN expression FRPAREN
Rule 576   expt_76 -> expt_76 FLPAREN expression FRPAREN
Rule 577   FloatingPointLiteral -> NON_INTEGER_1
Rule 578   FloatingPointLiteral -> NON_INTEGER_2
Rule 579   FloatingPointLiteral -> NON_INTEGER_3
Rule 580   integerLiteral -> NUMBER
Rule 581   integerLiteral -> HEX_NUMBER
Rule 582   integerLiteral -> LONG_NUMBER
Rule 583   integerLiteral -> LONG_HEX_NUMBER
Rule 584   empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 25 142
AND                  : 462 463 560 561
ASSERT               : 266 267
ASS_ADD              : 301
ASS_AND              : 305
ASS_DIV              : 304
ASS_MOD              : 308
ASS_MUL              : 303
ASS_OR               : 306
ASS_SHL              : 309
ASS_SHR              : 311
ASS_SHRR             : 310
ASS_SUB              : 302
ASS_XOR              : 307
AT                   : 203 204 205 206 219
BLPAREN              : 49 50 51 52 53 54 55 56 77 78 79 80 135 136 183 184 185 186 215 216 217 218 220 221 238 239 259
BOOLEAN              : 158
BREAK                : 253 254
BRPAREN              : 49 50 51 52 53 54 55 56 77 78 79 80 135 136 183 184 185 186 215 216 217 218 220 221 238 239 259
BYTE                 : 160
CARET                : 558 559
CASE                 : 277 278
CAST                 : 
CATCH                : 271
CHAR                 : 159
CLASS                : 33 34 35 36 37 38 39 40 357 358 359 372 375
COLON                : 248 277 278 279 291 312 536
COMMA                : 458 459 466 470 471 480 481 488 489 492 493 494 495 496 504 505 508 509 512 522 523 524 525 550 551
CONST                : 
CONTINUE             : 251 252
CharacterLiteral     : 195
DASH                 : 344 425
DEFAULT              : 237 279
DO                   : 261
DOT                  : 187 188 357 358 359 372 375 376 377 378 379 393 394 395 396 397 398 399 447 502 503 520 521
DOUBLE               : 165
ELSE                 : 264
ENUM                 : 47 48
EQUALS               : 129 130 211 300 490
EXCLAMATION          : 353
EXTENDS              : 413 455 460 478
FALSE                : 200
FINAL                : 27 143 166
FINALLY              : 417 419
FLOAT                : 164
FLPAREN              : 387 392 433 434 435 436 484 485 575 576
FOR                  : 263
FRPAREN              : 392 433 434 435 436 437 438 484 485 575 576
FUTURE               : 
GENERIC              : 
GOTO                 : 
HEX_NUMBER           : 581
IF                   : 264 265
IMPLEMENTS           : 456
IMPORT               : 11 12 13 14
INNER                : 
INSTANCEOF           : 326
INT                  : 162
INTERFACE            : 71 72 73 74 219
Identifier           : 33 34 35 36 37 38 39 40 43 44 47 48 59 60 61 62 63 64 65 66 71 72 73 74 87 88 93 94 95 101 104 117 122 131 132 149 154 155 156 157 191 192 207 208 211 219 234 235 248 251 253 291 360 361 362 363 385 386 390 396 397 398 399 502 503 520 521
LCOMMENT             : 
LESS                 : 41 42 168 169 332 391
LONG                 : 163
LONG_HEX_NUMBER      : 583
LONG_NUMBER          : 582
LPAREN               : 175 176 203 204 205 234 235 263 271 293 355 356 401 402
MCOMMENT             : 
MORE                 : 41 42 168 169 333 391
MULT                 : 426 447
NATIVE               : 144
NEW                  : 364 379 393
NEWLINE              : 
NON_INTEGER_1        : 577
NON_INTEGER_2        : 578
NON_INTEGER_3        : 579
NULL                 : 198
NUMBER               : 580
OPERATOR             : 
OP_ARRAY             : 179
OP_DEC               : 346 430
OP_EQ                : 422
OP_GE                : 331
OP_INC               : 345 429
OP_LAND              : 554 555
OP_LE                : 330
OP_LOR               : 552 553
OP_NE                : 423
OP_SHL               : 337
OP_SHR               : 336
OP_SHRR              : 338
OUTER                : 
PACKAGE              : 10
PERCENT              : 428
PLUS                 : 343 424
PRIVATE              : 24 140
PROTECTED            : 23 139
PUBLIC               : 22 138
QUES                 : 170 171 312
REST                 : 
RETURN               : 256 257
RPAREN               : 175 176 203 204 205 234 235 263 271 293 355 356 401 402
SEMI                 : 10 11 12 13 14 16 67 68 84 96 98 105 113 114 115 116 118 119 187 188 189 190 231 243 244 249 250 251 252 253 254 255 256 257 261 266 267 280 280 281 281 282 282 283 283 284 284 285 285 286 286 287 287 412 530
SHORT                : 161
SLASH                : 427
STATIC               : 26 141 445
STRICTFP             : 28 148
SUPER                : 187 188 366 378 394 414 416
SWITCH               : 259
SYNCHRONIZED         : 145 258
StringLiteral        : 196
THIS                 : 367 368 369 370 377 395 415
THROW                : 255
THROWS               : 486
TILDE                : 354
TRANSIENT            : 146
TRUE                 : 199
TRY                  : 260
VAR                  : 
VERTICAL             : 556 557
VOID                 : 87 101 357 410
VOLATILE             : 147
WHILE                : 261 262
error                : 

Nonterminals, with rules where they appear

FloatingPointLiteral : 194
additiveExpression   : 334 335 566 567
andExpression        : 320 321 558 559
annotation           : 21 137 167 201 202 213
annotationConstantRest : 233
annotationMethodOrConstantRest : 231
annotationMethodRest : 232
annotationName       : 203 204 205 206
annotationTypeBody   : 219
annotationTypeDeclaration : 70 223 224
annotationTypeElementDeclaration : 528 529
annotationTypeElementRest : 222
annotations          : 9 202 472
arguments            : 187 188 189 190 374 378 388 389 390 400 474
arrayCreatorRest     : 382
arrayInitializer     : 133 437
assignmentOperator   : 298
block                : 82 83 182 258 260 268 271 417 419
blockStatement       : 516 517
booleanLiteral       : 197
castExpression       : 352
catchClause          : 269 270 540 541
catches              : 417 418
classBody            : 33 34 35 36 37 38 39 40 59 61 63 65 389
classBodyDeclaration : 476 477
classBodyDeclarations : 67 77 477
classCreatorRest     : 380 381 385 386
classDeclaration     : 90 103 405
classOrInterfaceDeclaration : 15 241 404
classOrInterfaceModifier : 449 450
classOrInterfaceModifiers : 17
classOrInterfaceType : 152 153 383
compilationUnit      : 0
conditionalAndExpression : 314 315 552 553
conditionalExpression : 212 298 299
conditionalOrExpression : 312 313
constantDeclarator   : 492 493
constantDeclaratorRest : 122 127 128
constantDeclaratorsRest : 105
constantExpression   : 277
constructorBody      : 120 121
constructorDeclaratorRest : 88 94
createdName          : 380 381 382
creator              : 364
defaultValue         : 532
elementValue         : 204 211 237 524 525 527
elementValueArrayInitializer : 214
elementValuePair     : 209 210 522 523
elementValuePairs    : 203
empty                : 2 3 4 4 5 6 6 7 7 8 8 8 20 30 34 35 36 36 37 38 38 39 39 40 40 40 42 44 46 48 50 51 52 52 53 54 54 55 55 56 56 56 58 72 73 74 74 76 80 83 108 109 110 110 112 114 115 116 116 119 121 124 126 128 130 132 136 151 153 155 156 157 157 171 174 176 181 184 185 186 186 188 190 192 208 210 216 217 218 218 221 224 226 228 230 235 239 270 274 276 281 282 283 283 284 285 285 286 286 287 287 287 386 397 399 444 446 448 454 457 461 465 467 469 473 475 479 487 491 497 499 501 507 511 513 515 519 526 531 533 537 539 545 547 549
enhancedForControl   : 288
enumBody             : 47 48
enumBodyDeclarations : 468
enumConstant         : 57 58 470 471
enumConstantName     : 278
enumConstants        : 464
enumDeclaration      : 32 225 226
equalityExpression   : 322 323 560 561
exclusiveOrExpression : 318 319 556 557
explicitConstructorInvocation : 514
explicitGenericInvocation : 376
expr_0               : 9
expr_1               : 17 18
expr_10              : 275 276 421
expr_11              : 562 563
expr_12              : 568 569
expr_13              : 570
expr_14              : 348 349
expr_15              : 356
expr_19              : 387
expr_2               : 91
expr_3               : 93 117
expr_4               : 107 108 109 110 111 112
expr_5               : 506
expr_6               : 189 190
expr_9               : 260
expression           : 134 255 266 267 291 293 294 295 296 297 298 312 312 392 432 435 436 438 536 538 546 550 551 575 576
expressionList       : 290 292 401
expt_0               : 1 2 5 6 403 440
expt_1               : 1 3 5 7 403 404 442
expt_10              : 41 459
expt_11              : 43
expt_12              : 45 463
expt_13              : 49 50 51 52
expt_14              : 49 50 53 54
expt_15              : 49 51 53 55
expt_16              : 57 471
expt_17              : 59 60 61 62
expt_18              : 59 60 63 64 396 398
expt_2               : 1 2 3 4
expt_21              : 71 73
expt_22              : 75 481
expt_23              : 79 483
expt_24              : 107 108 113 114 129 131 150 152 358 437 438 485
expt_25              : 107 109 111 113 115 118 120
expt_26              : 123 489
expt_27              : 125
expt_28              : 127 493
expt_29              : 495 498
expt_3               : 11 12 82
expt_30              : 215 217 498
expt_31              : 135
expt_32              : 154 155 502 503
expt_33              : 154 156 503
expt_34              : 168 505
expt_35              : 170
expt_36              : 173 509
expt_37              : 175
expt_38              : 180
expt_39              : 183 184
expt_4               : 11 13
expt_40              : 183 185 238 275 517
expt_41              : 187 189 385
expt_42              : 191 207 360 361 367 368 521
expt_44              : 209 523
expt_45              : 525 527
expt_46              : 215 216
expt_47              : 220 529
expt_48              : 223 225 227 229
expt_49              : 234
expt_5               : 19 450
expt_50              : 247 535
expt_51              : 266
expt_53              : 256
expt_55              : 269 541
expt_56              : 273 543
expt_57              : 280 281 282 283
expt_58              : 280 281 284 285
expt_59              : 280 282 284 286
expt_6               : 29 452
expt_60              : 294 551
expt_63              : 314 553
expt_64              : 316 555
expt_65              : 318 557
expt_66              : 320 559
expt_67              : 322 561
expt_68              : 324 563
expt_7               : 
expt_70              : 328 565
expt_71              : 334 567
expt_72              : 339 569
expt_73              : 341 572
expt_74              : 348 350 574
expt_76              : 438 576
expt_8               : 33 34 37 38
expt_9               : 33 35 37 39 47
fieldDeclaration     : 408
forControl           : 263
forInit              : 544
forUpdate            : 548
formalParameter      : 271
formalParameterDecls : 510 512
formalParameterDeclsRest : 177 178
formalParameters     : 107 108 109 110 111 112 113 114 115 116 118 119 120 121
genericMethodOrConstructorDecl : 85
genericMethodOrConstructorRest : 92
identifierSuffix     : 360 362 367 369
importDeclaration    : 439 440
inclusiveOrExpression : 316 317 554 555
innerCreator         : 379 393
instanceOfExpression : 324 325 562 563
integerLiteral       : 193
interfaceBody        : 71 72 73 74
interfaceBodyDeclaration : 482 483
interfaceDeclaration : 89 102 406
interfaceGenericMethodDecl : 100
interfaceMemberDecl  : 97
interfaceMethodDeclaratorRest : 106 117
interfaceMethodOrFieldDecl : 99
interfaceMethodOrFieldRest : 104
literal              : 365
localVariableDeclaration : 243 289
localVariableDeclarationStatement : 240
memberDecl           : 81
memberDeclaration    : 86
methodBody           : 411
methodDeclaration    : 407
methodDeclaratorRest : 93 95
modifier             : 451 452
modifiers            : 81 97 222
multiplicativeExpression : 339 340 568 569
nonWildcardTypeArguments : 380 390 518
normalClassDeclaration : 31 229 230
normalInterfaceDeclaration : 69 227 228
packageDeclaration   : 403 443
parExpression        : 258 259 261 262 264 265 371
primary              : 187 188 348 349 350 351
primitiveType        : 150 151 355 358 359 384
qualifiedName        : 10 11 12 13 14 173 174 508 509
qualifiedNameList    : 486
relationalExpression : 326 327
relationalOp         : 564 565
selector             : 573 574
shiftExpression      : 328 329 564 565
shiftOp              : 566 567
statement            : 242 248 261 262 263 264 264 265
statementExpression  : 249
sub_expt_73          : 571 572
suffixExprStatements : 373 436
suffixStatements     : 372 434
superSuffix          : 366 394
switchBlockStatementGroup : 542 543
switchBlockStatementGroups : 259
switchLabel          : 420 421
type                 : 45 46 75 76 91 104 172 177 178 231 245 246 272 291 326 409 431 455 462 463 480 481 506
typeArgument         : 168 169 504 505
typeArguments        : 500
typeBound            : 460
typeDeclaration      : 441 442
typeList             : 391 456 478
typeParameter        : 41 42 458 459
typeParameters       : 33 34 35 36 71 72 92 117 453
unaryExpression      : 341 342 343 344 345 346 353 354 355 570
unaryExpressionNotPlusMinus : 347 356
variableDeclarator   : 123 124 488 489
variableDeclaratorId : 125 126 179 180 181 272
variableDeclarators  : 96 236 245 246
variableInitializer  : 129 130 490 494 495 498
variableModifier     : 534 535
variableModifiers    : 177 245 272 291
voidInterfaceMethodDeclaratorRest : 101
voidMethodDeclaratorRest : 87

Parsing method: LALR

state 0

    (0) S' -> . compilationUnit
    (1) compilationUnit -> . expt_2 expt_0 expt_1
    (2) compilationUnit -> . expt_2 expt_0 empty
    (3) compilationUnit -> . expt_2 empty expt_1
    (4) compilationUnit -> . expt_2 empty empty
    (5) compilationUnit -> . empty expt_0 expt_1
    (6) compilationUnit -> . empty expt_0 empty
    (7) compilationUnit -> . empty empty expt_1
    (8) compilationUnit -> . empty empty empty
    (9) compilationUnit -> . annotations expr_0
    (443) expt_2 -> . packageDeclaration
    (444) expt_2 -> . empty
    (584) empty -> .
    (201) annotations -> . annotation
    (202) annotations -> . annotations annotation
    (10) packageDeclaration -> . PACKAGE qualifiedName SEMI
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for AT resolved as shift
    IMPORT          reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)
    PUBLIC          reduce using rule 584 (empty -> .)
    PROTECTED       reduce using rule 584 (empty -> .)
    PRIVATE         reduce using rule 584 (empty -> .)
    ABSTRACT        reduce using rule 584 (empty -> .)
    STATIC          reduce using rule 584 (empty -> .)
    FINAL           reduce using rule 584 (empty -> .)
    STRICTFP        reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    $end            reduce using rule 584 (empty -> .)
    PACKAGE         shift and go to state 1
    AT              shift and go to state 8

  ! AT              [ reduce using rule 584 (empty -> .) ]

    packageDeclaration             shift and go to state 2
    expt_2                         shift and go to state 3
    annotation                     shift and go to state 4
    compilationUnit                shift and go to state 5
    annotations                    shift and go to state 6
    empty                          shift and go to state 7

state 1

    (10) packageDeclaration -> PACKAGE . qualifiedName SEMI
    (191) qualifiedName -> . Identifier expt_42
    (192) qualifiedName -> . Identifier empty

    Identifier      shift and go to state 10

    qualifiedName                  shift and go to state 9

state 2

    (443) expt_2 -> packageDeclaration .

    IMPORT          reduce using rule 443 (expt_2 -> packageDeclaration .)
    SEMI            reduce using rule 443 (expt_2 -> packageDeclaration .)
    PUBLIC          reduce using rule 443 (expt_2 -> packageDeclaration .)
    PROTECTED       reduce using rule 443 (expt_2 -> packageDeclaration .)
    PRIVATE         reduce using rule 443 (expt_2 -> packageDeclaration .)
    ABSTRACT        reduce using rule 443 (expt_2 -> packageDeclaration .)
    STATIC          reduce using rule 443 (expt_2 -> packageDeclaration .)
    FINAL           reduce using rule 443 (expt_2 -> packageDeclaration .)
    STRICTFP        reduce using rule 443 (expt_2 -> packageDeclaration .)
    CLASS           reduce using rule 443 (expt_2 -> packageDeclaration .)
    ENUM            reduce using rule 443 (expt_2 -> packageDeclaration .)
    INTERFACE       reduce using rule 443 (expt_2 -> packageDeclaration .)
    AT              reduce using rule 443 (expt_2 -> packageDeclaration .)
    $end            reduce using rule 443 (expt_2 -> packageDeclaration .)


state 3

    (1) compilationUnit -> expt_2 . expt_0 expt_1
    (2) compilationUnit -> expt_2 . expt_0 empty
    (3) compilationUnit -> expt_2 . empty expt_1
    (4) compilationUnit -> expt_2 . empty empty
    (439) expt_0 -> . importDeclaration
    (440) expt_0 -> . expt_0 importDeclaration
    (584) empty -> .
    (11) importDeclaration -> . IMPORT expt_3 qualifiedName expt_4 SEMI
    (12) importDeclaration -> . IMPORT expt_3 qualifiedName SEMI
    (13) importDeclaration -> . IMPORT qualifiedName expt_4 SEMI
    (14) importDeclaration -> . IMPORT qualifiedName SEMI

    SEMI            reduce using rule 584 (empty -> .)
    PUBLIC          reduce using rule 584 (empty -> .)
    PROTECTED       reduce using rule 584 (empty -> .)
    PRIVATE         reduce using rule 584 (empty -> .)
    ABSTRACT        reduce using rule 584 (empty -> .)
    STATIC          reduce using rule 584 (empty -> .)
    FINAL           reduce using rule 584 (empty -> .)
    STRICTFP        reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    AT              reduce using rule 584 (empty -> .)
    $end            reduce using rule 584 (empty -> .)
    IMPORT          shift and go to state 13

    importDeclaration              shift and go to state 11
    expt_0                         shift and go to state 12
    empty                          shift and go to state 14

state 4

    (201) annotations -> annotation .

    AT              reduce using rule 201 (annotations -> annotation .)
    Identifier      reduce using rule 201 (annotations -> annotation .)
    PACKAGE         reduce using rule 201 (annotations -> annotation .)
    PUBLIC          reduce using rule 201 (annotations -> annotation .)
    PROTECTED       reduce using rule 201 (annotations -> annotation .)
    PRIVATE         reduce using rule 201 (annotations -> annotation .)
    ABSTRACT        reduce using rule 201 (annotations -> annotation .)
    STATIC          reduce using rule 201 (annotations -> annotation .)
    FINAL           reduce using rule 201 (annotations -> annotation .)
    STRICTFP        reduce using rule 201 (annotations -> annotation .)
    CLASS           reduce using rule 201 (annotations -> annotation .)
    ENUM            reduce using rule 201 (annotations -> annotation .)
    INTERFACE       reduce using rule 201 (annotations -> annotation .)


state 5

    (0) S' -> compilationUnit .



state 6

    (9) compilationUnit -> annotations . expr_0
    (202) annotations -> annotations . annotation
    (403) expr_0 -> . packageDeclaration expt_0 expt_1
    (404) expr_0 -> . classOrInterfaceDeclaration expt_1
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (10) packageDeclaration -> . PACKAGE qualifiedName SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (584) empty -> .
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody

  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
    AT              shift and go to state 32
    PACKAGE         shift and go to state 1
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 19
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    normalInterfaceDeclaration     shift and go to state 18
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    interfaceDeclaration           shift and go to state 24
    empty                          shift and go to state 25
    expr_1                         shift and go to state 26
    enumDeclaration                shift and go to state 27
    classOrInterfaceDeclaration    shift and go to state 28
    packageDeclaration             shift and go to state 30
    classDeclaration               shift and go to state 31
    annotation                     shift and go to state 33
    classOrInterfaceModifier       shift and go to state 34
    annotationTypeDeclaration      shift and go to state 36
    classOrInterfaceModifiers      shift and go to state 37
    expr_0                         shift and go to state 38

state 7

    (5) compilationUnit -> empty . expt_0 expt_1
    (6) compilationUnit -> empty . expt_0 empty
    (7) compilationUnit -> empty . empty expt_1
    (8) compilationUnit -> empty . empty empty
    (444) expt_2 -> empty .
    (439) expt_0 -> . importDeclaration
    (440) expt_0 -> . expt_0 importDeclaration
    (584) empty -> .
    (11) importDeclaration -> . IMPORT expt_3 qualifiedName expt_4 SEMI
    (12) importDeclaration -> . IMPORT expt_3 qualifiedName SEMI
    (13) importDeclaration -> . IMPORT qualifiedName expt_4 SEMI
    (14) importDeclaration -> . IMPORT qualifiedName SEMI

  ! reduce/reduce conflict for SEMI resolved using rule 444 (expt_2 -> empty .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 444 (expt_2 -> empty .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 444 (expt_2 -> empty .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 444 (expt_2 -> empty .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 444 (expt_2 -> empty .)
  ! reduce/reduce conflict for STATIC resolved using rule 444 (expt_2 -> empty .)
  ! reduce/reduce conflict for FINAL resolved using rule 444 (expt_2 -> empty .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 444 (expt_2 -> empty .)
  ! reduce/reduce conflict for CLASS resolved using rule 444 (expt_2 -> empty .)
  ! reduce/reduce conflict for ENUM resolved using rule 444 (expt_2 -> empty .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 444 (expt_2 -> empty .)
  ! reduce/reduce conflict for AT resolved using rule 444 (expt_2 -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 444 (expt_2 -> empty .)
  ! shift/reduce conflict for IMPORT resolved as shift
    SEMI            reduce using rule 444 (expt_2 -> empty .)
    PUBLIC          reduce using rule 444 (expt_2 -> empty .)
    PROTECTED       reduce using rule 444 (expt_2 -> empty .)
    PRIVATE         reduce using rule 444 (expt_2 -> empty .)
    ABSTRACT        reduce using rule 444 (expt_2 -> empty .)
    STATIC          reduce using rule 444 (expt_2 -> empty .)
    FINAL           reduce using rule 444 (expt_2 -> empty .)
    STRICTFP        reduce using rule 444 (expt_2 -> empty .)
    CLASS           reduce using rule 444 (expt_2 -> empty .)
    ENUM            reduce using rule 444 (expt_2 -> empty .)
    INTERFACE       reduce using rule 444 (expt_2 -> empty .)
    AT              reduce using rule 444 (expt_2 -> empty .)
    $end            reduce using rule 444 (expt_2 -> empty .)
    IMPORT          shift and go to state 13

  ! IMPORT          [ reduce using rule 444 (expt_2 -> empty .) ]
  ! SEMI            [ reduce using rule 584 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 584 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 584 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 584 (empty -> .) ]
  ! ABSTRACT        [ reduce using rule 584 (empty -> .) ]
  ! STATIC          [ reduce using rule 584 (empty -> .) ]
  ! FINAL           [ reduce using rule 584 (empty -> .) ]
  ! STRICTFP        [ reduce using rule 584 (empty -> .) ]
  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]
  ! $end            [ reduce using rule 584 (empty -> .) ]

    importDeclaration              shift and go to state 11
    expt_0                         shift and go to state 41
    empty                          shift and go to state 42

state 8

    (203) annotation -> AT . annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> AT . annotationName LPAREN elementValue RPAREN
    (205) annotation -> AT . annotationName LPAREN RPAREN
    (206) annotation -> AT . annotationName
    (207) annotationName -> . Identifier expt_42
    (208) annotationName -> . Identifier empty

    Identifier      shift and go to state 44

    annotationName                 shift and go to state 43

state 9

    (10) packageDeclaration -> PACKAGE qualifiedName . SEMI

    SEMI            shift and go to state 45


state 10

    (191) qualifiedName -> Identifier . expt_42
    (192) qualifiedName -> Identifier . empty
    (520) expt_42 -> . DOT Identifier
    (521) expt_42 -> . expt_42 DOT Identifier
    (584) empty -> .

  ! shift/reduce conflict for DOT resolved as shift
    DOT             shift and go to state 46
    SEMI            reduce using rule 584 (empty -> .)
    COMMA           reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)

  ! DOT             [ reduce using rule 584 (empty -> .) ]

    empty                          shift and go to state 47
    expt_42                        shift and go to state 48

state 11

    (439) expt_0 -> importDeclaration .

    IMPORT          reduce using rule 439 (expt_0 -> importDeclaration .)
    SEMI            reduce using rule 439 (expt_0 -> importDeclaration .)
    PUBLIC          reduce using rule 439 (expt_0 -> importDeclaration .)
    PROTECTED       reduce using rule 439 (expt_0 -> importDeclaration .)
    PRIVATE         reduce using rule 439 (expt_0 -> importDeclaration .)
    ABSTRACT        reduce using rule 439 (expt_0 -> importDeclaration .)
    STATIC          reduce using rule 439 (expt_0 -> importDeclaration .)
    FINAL           reduce using rule 439 (expt_0 -> importDeclaration .)
    STRICTFP        reduce using rule 439 (expt_0 -> importDeclaration .)
    CLASS           reduce using rule 439 (expt_0 -> importDeclaration .)
    ENUM            reduce using rule 439 (expt_0 -> importDeclaration .)
    INTERFACE       reduce using rule 439 (expt_0 -> importDeclaration .)
    AT              reduce using rule 439 (expt_0 -> importDeclaration .)
    $end            reduce using rule 439 (expt_0 -> importDeclaration .)


state 12

    (1) compilationUnit -> expt_2 expt_0 . expt_1
    (2) compilationUnit -> expt_2 expt_0 . empty
    (440) expt_0 -> expt_0 . importDeclaration
    (441) expt_1 -> . typeDeclaration
    (442) expt_1 -> . expt_1 typeDeclaration
    (584) empty -> .
    (11) importDeclaration -> . IMPORT expt_3 qualifiedName expt_4 SEMI
    (12) importDeclaration -> . IMPORT expt_3 qualifiedName SEMI
    (13) importDeclaration -> . IMPORT qualifiedName expt_4 SEMI
    (14) importDeclaration -> . IMPORT qualifiedName SEMI
    (15) typeDeclaration -> . classOrInterfaceDeclaration
    (16) typeDeclaration -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    $end            reduce using rule 584 (empty -> .)
    IMPORT          shift and go to state 13
    SEMI            shift and go to state 51
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 19
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    typeDeclaration                shift and go to state 49
    importDeclaration              shift and go to state 50
    normalInterfaceDeclaration     shift and go to state 18
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    expt_1                         shift and go to state 52
    interfaceDeclaration           shift and go to state 24
    empty                          shift and go to state 53
    expr_1                         shift and go to state 26
    enumDeclaration                shift and go to state 27
    classOrInterfaceDeclaration    shift and go to state 54
    classDeclaration               shift and go to state 31
    annotation                     shift and go to state 56
    classOrInterfaceModifier       shift and go to state 34
    annotationTypeDeclaration      shift and go to state 36
    classOrInterfaceModifiers      shift and go to state 37

state 13

    (11) importDeclaration -> IMPORT . expt_3 qualifiedName expt_4 SEMI
    (12) importDeclaration -> IMPORT . expt_3 qualifiedName SEMI
    (13) importDeclaration -> IMPORT . qualifiedName expt_4 SEMI
    (14) importDeclaration -> IMPORT . qualifiedName SEMI
    (445) expt_3 -> . STATIC
    (446) expt_3 -> . empty
    (191) qualifiedName -> . Identifier expt_42
    (192) qualifiedName -> . Identifier empty
    (584) empty -> .

  ! shift/reduce conflict for Identifier resolved as shift
    STATIC          shift and go to state 59
    Identifier      shift and go to state 10

  ! Identifier      [ reduce using rule 584 (empty -> .) ]

    qualifiedName                  shift and go to state 57
    empty                          shift and go to state 60
    expt_3                         shift and go to state 58

state 14

    (3) compilationUnit -> expt_2 empty . expt_1
    (4) compilationUnit -> expt_2 empty . empty
    (441) expt_1 -> . typeDeclaration
    (442) expt_1 -> . expt_1 typeDeclaration
    (584) empty -> .
    (15) typeDeclaration -> . classOrInterfaceDeclaration
    (16) typeDeclaration -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    $end            reduce using rule 584 (empty -> .)
    SEMI            shift and go to state 51
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 19
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    typeDeclaration                shift and go to state 49
    normalInterfaceDeclaration     shift and go to state 18
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    expt_1                         shift and go to state 61
    interfaceDeclaration           shift and go to state 24
    empty                          shift and go to state 62
    expr_1                         shift and go to state 26
    enumDeclaration                shift and go to state 27
    classOrInterfaceDeclaration    shift and go to state 54
    classDeclaration               shift and go to state 31
    annotation                     shift and go to state 56
    classOrInterfaceModifier       shift and go to state 34
    annotationTypeDeclaration      shift and go to state 36
    classOrInterfaceModifiers      shift and go to state 37

state 15

    (25) classOrInterfaceModifier -> ABSTRACT .

    PUBLIC          reduce using rule 25 (classOrInterfaceModifier -> ABSTRACT .)
    PROTECTED       reduce using rule 25 (classOrInterfaceModifier -> ABSTRACT .)
    PRIVATE         reduce using rule 25 (classOrInterfaceModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 25 (classOrInterfaceModifier -> ABSTRACT .)
    STATIC          reduce using rule 25 (classOrInterfaceModifier -> ABSTRACT .)
    FINAL           reduce using rule 25 (classOrInterfaceModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 25 (classOrInterfaceModifier -> ABSTRACT .)
    AT              reduce using rule 25 (classOrInterfaceModifier -> ABSTRACT .)
    CLASS           reduce using rule 25 (classOrInterfaceModifier -> ABSTRACT .)
    ENUM            reduce using rule 25 (classOrInterfaceModifier -> ABSTRACT .)
    INTERFACE       reduce using rule 25 (classOrInterfaceModifier -> ABSTRACT .)


state 16

    (23) classOrInterfaceModifier -> PROTECTED .

    PUBLIC          reduce using rule 23 (classOrInterfaceModifier -> PROTECTED .)
    PROTECTED       reduce using rule 23 (classOrInterfaceModifier -> PROTECTED .)
    PRIVATE         reduce using rule 23 (classOrInterfaceModifier -> PROTECTED .)
    ABSTRACT        reduce using rule 23 (classOrInterfaceModifier -> PROTECTED .)
    STATIC          reduce using rule 23 (classOrInterfaceModifier -> PROTECTED .)
    FINAL           reduce using rule 23 (classOrInterfaceModifier -> PROTECTED .)
    STRICTFP        reduce using rule 23 (classOrInterfaceModifier -> PROTECTED .)
    AT              reduce using rule 23 (classOrInterfaceModifier -> PROTECTED .)
    CLASS           reduce using rule 23 (classOrInterfaceModifier -> PROTECTED .)
    ENUM            reduce using rule 23 (classOrInterfaceModifier -> PROTECTED .)
    INTERFACE       reduce using rule 23 (classOrInterfaceModifier -> PROTECTED .)


state 17

    (26) classOrInterfaceModifier -> STATIC .

    PUBLIC          reduce using rule 26 (classOrInterfaceModifier -> STATIC .)
    PROTECTED       reduce using rule 26 (classOrInterfaceModifier -> STATIC .)
    PRIVATE         reduce using rule 26 (classOrInterfaceModifier -> STATIC .)
    ABSTRACT        reduce using rule 26 (classOrInterfaceModifier -> STATIC .)
    STATIC          reduce using rule 26 (classOrInterfaceModifier -> STATIC .)
    FINAL           reduce using rule 26 (classOrInterfaceModifier -> STATIC .)
    STRICTFP        reduce using rule 26 (classOrInterfaceModifier -> STATIC .)
    AT              reduce using rule 26 (classOrInterfaceModifier -> STATIC .)
    CLASS           reduce using rule 26 (classOrInterfaceModifier -> STATIC .)
    ENUM            reduce using rule 26 (classOrInterfaceModifier -> STATIC .)
    INTERFACE       reduce using rule 26 (classOrInterfaceModifier -> STATIC .)


state 18

    (69) interfaceDeclaration -> normalInterfaceDeclaration .

    BRPAREN         reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    SEMI            reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    Identifier      reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    CONTINUE        reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    BREAK           reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    THROW           reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    RETURN          reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    SWITCH          reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    TRY             reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    DO              reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    WHILE           reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    FOR             reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    IF              reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    ASSERT          reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    BLPAREN         reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    BOOLEAN         reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    CHAR            reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    BYTE            reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    SHORT           reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    INT             reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    LONG            reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    FLOAT           reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    DOUBLE          reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    PUBLIC          reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    PROTECTED       reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    PRIVATE         reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    ABSTRACT        reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    STATIC          reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    FINAL           reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    STRICTFP        reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    CLASS           reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    ENUM            reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    INTERFACE       reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    AT              reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    PLUS            reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    DASH            reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    OP_INC          reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    OP_DEC          reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    EXCLAMATION     reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    TILDE           reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    VOID            reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    NEW             reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    SUPER           reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    THIS            reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    LPAREN          reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    CharacterLiteral reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    StringLiteral   reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    NULL            reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    NUMBER          reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    HEX_NUMBER      reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    LONG_NUMBER     reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    LONG_HEX_NUMBER reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    NON_INTEGER_1   reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    NON_INTEGER_2   reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    NON_INTEGER_3   reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    TRUE            reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    FALSE           reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    $end            reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    CASE            reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    DEFAULT         reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    NATIVE          reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    TRANSIENT       reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    VOLATILE        reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)
    LESS            reduce using rule 69 (interfaceDeclaration -> normalInterfaceDeclaration .)


state 19

    (27) classOrInterfaceModifier -> FINAL .

    PUBLIC          reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    PROTECTED       reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    PRIVATE         reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    ABSTRACT        reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    STATIC          reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    FINAL           reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    STRICTFP        reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    AT              reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    CLASS           reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    ENUM            reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    INTERFACE       reduce using rule 27 (classOrInterfaceModifier -> FINAL .)


state 20

    (31) classDeclaration -> normalClassDeclaration .

    SEMI            reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    PUBLIC          reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    PROTECTED       reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    PRIVATE         reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    ABSTRACT        reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    STATIC          reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    FINAL           reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    STRICTFP        reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    CLASS           reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    ENUM            reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    INTERFACE       reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    AT              reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    $end            reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    BRPAREN         reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    Identifier      reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    CONTINUE        reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    BREAK           reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    THROW           reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    RETURN          reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    SYNCHRONIZED    reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    SWITCH          reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    TRY             reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    DO              reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    WHILE           reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    FOR             reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    IF              reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    ASSERT          reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    BLPAREN         reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    BOOLEAN         reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    CHAR            reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    BYTE            reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    SHORT           reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    INT             reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    LONG            reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    FLOAT           reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    DOUBLE          reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    PLUS            reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    DASH            reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    OP_INC          reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    OP_DEC          reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    EXCLAMATION     reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    TILDE           reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    VOID            reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    NEW             reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    SUPER           reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    THIS            reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    LPAREN          reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    CharacterLiteral reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    StringLiteral   reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    NULL            reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    NUMBER          reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    HEX_NUMBER      reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    LONG_NUMBER     reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    LONG_HEX_NUMBER reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    NON_INTEGER_1   reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    NON_INTEGER_2   reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    NON_INTEGER_3   reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    TRUE            reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    FALSE           reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    CASE            reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    DEFAULT         reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    NATIVE          reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    TRANSIENT       reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    VOLATILE        reduce using rule 31 (classDeclaration -> normalClassDeclaration .)
    LESS            reduce using rule 31 (classDeclaration -> normalClassDeclaration .)


state 21

    (19) classOrInterfaceModifiers -> expt_5 .
    (450) expt_5 -> expt_5 . classOrInterfaceModifier
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for AT resolved as shift
    CLASS           reduce using rule 19 (classOrInterfaceModifiers -> expt_5 .)
    ENUM            reduce using rule 19 (classOrInterfaceModifiers -> expt_5 .)
    INTERFACE       reduce using rule 19 (classOrInterfaceModifiers -> expt_5 .)
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 19
    STRICTFP        shift and go to state 23
    AT              shift and go to state 8

  ! AT              [ reduce using rule 19 (classOrInterfaceModifiers -> expt_5 .) ]

    classOrInterfaceModifier       shift and go to state 63
    annotation                     shift and go to state 56

state 22

    (24) classOrInterfaceModifier -> PRIVATE .

    PUBLIC          reduce using rule 24 (classOrInterfaceModifier -> PRIVATE .)
    PROTECTED       reduce using rule 24 (classOrInterfaceModifier -> PRIVATE .)
    PRIVATE         reduce using rule 24 (classOrInterfaceModifier -> PRIVATE .)
    ABSTRACT        reduce using rule 24 (classOrInterfaceModifier -> PRIVATE .)
    STATIC          reduce using rule 24 (classOrInterfaceModifier -> PRIVATE .)
    FINAL           reduce using rule 24 (classOrInterfaceModifier -> PRIVATE .)
    STRICTFP        reduce using rule 24 (classOrInterfaceModifier -> PRIVATE .)
    AT              reduce using rule 24 (classOrInterfaceModifier -> PRIVATE .)
    CLASS           reduce using rule 24 (classOrInterfaceModifier -> PRIVATE .)
    ENUM            reduce using rule 24 (classOrInterfaceModifier -> PRIVATE .)
    INTERFACE       reduce using rule 24 (classOrInterfaceModifier -> PRIVATE .)


state 23

    (28) classOrInterfaceModifier -> STRICTFP .

    PUBLIC          reduce using rule 28 (classOrInterfaceModifier -> STRICTFP .)
    PROTECTED       reduce using rule 28 (classOrInterfaceModifier -> STRICTFP .)
    PRIVATE         reduce using rule 28 (classOrInterfaceModifier -> STRICTFP .)
    ABSTRACT        reduce using rule 28 (classOrInterfaceModifier -> STRICTFP .)
    STATIC          reduce using rule 28 (classOrInterfaceModifier -> STRICTFP .)
    FINAL           reduce using rule 28 (classOrInterfaceModifier -> STRICTFP .)
    STRICTFP        reduce using rule 28 (classOrInterfaceModifier -> STRICTFP .)
    AT              reduce using rule 28 (classOrInterfaceModifier -> STRICTFP .)
    CLASS           reduce using rule 28 (classOrInterfaceModifier -> STRICTFP .)
    ENUM            reduce using rule 28 (classOrInterfaceModifier -> STRICTFP .)
    INTERFACE       reduce using rule 28 (classOrInterfaceModifier -> STRICTFP .)


state 24

    (406) expr_1 -> interfaceDeclaration .

    SEMI            reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    PUBLIC          reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    PROTECTED       reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    PRIVATE         reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    ABSTRACT        reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    STATIC          reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    FINAL           reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    STRICTFP        reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    CLASS           reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    ENUM            reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    INTERFACE       reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    AT              reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    $end            reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    BRPAREN         reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    Identifier      reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    CONTINUE        reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    BREAK           reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    THROW           reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    RETURN          reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    SWITCH          reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    TRY             reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    DO              reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    WHILE           reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    FOR             reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    IF              reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    ASSERT          reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    BLPAREN         reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    BOOLEAN         reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    CHAR            reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    BYTE            reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    SHORT           reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    INT             reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    LONG            reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    FLOAT           reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    DOUBLE          reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    PLUS            reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    DASH            reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    OP_INC          reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    OP_DEC          reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    EXCLAMATION     reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    TILDE           reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    VOID            reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    NEW             reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    SUPER           reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    THIS            reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    LPAREN          reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    CharacterLiteral reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    StringLiteral   reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    NULL            reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    NUMBER          reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    HEX_NUMBER      reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    LONG_NUMBER     reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    LONG_HEX_NUMBER reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    NON_INTEGER_1   reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    NON_INTEGER_2   reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    NON_INTEGER_3   reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    TRUE            reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    FALSE           reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    CASE            reduce using rule 406 (expr_1 -> interfaceDeclaration .)
    DEFAULT         reduce using rule 406 (expr_1 -> interfaceDeclaration .)


state 25

    (20) classOrInterfaceModifiers -> empty .

    CLASS           reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    ENUM            reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    INTERFACE       reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    AT              reduce using rule 20 (classOrInterfaceModifiers -> empty .)


state 26

    (18) classOrInterfaceDeclaration -> expr_1 .

    SEMI            reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    PUBLIC          reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    PROTECTED       reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    PRIVATE         reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    ABSTRACT        reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    STATIC          reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    FINAL           reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    STRICTFP        reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    CLASS           reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    ENUM            reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    INTERFACE       reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    AT              reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    $end            reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    Identifier      reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    CONTINUE        reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    BREAK           reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    THROW           reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    RETURN          reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    SYNCHRONIZED    reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    SWITCH          reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    TRY             reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    DO              reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    WHILE           reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    FOR             reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    IF              reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    ASSERT          reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    BLPAREN         reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    BOOLEAN         reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    CHAR            reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    BYTE            reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    SHORT           reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    INT             reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    LONG            reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    FLOAT           reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    DOUBLE          reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    PLUS            reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    DASH            reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    OP_INC          reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    OP_DEC          reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    EXCLAMATION     reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    TILDE           reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    VOID            reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    NEW             reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    SUPER           reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    THIS            reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    LPAREN          reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    CharacterLiteral reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    StringLiteral   reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    NULL            reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    NUMBER          reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    HEX_NUMBER      reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    LONG_NUMBER     reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    LONG_HEX_NUMBER reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    NON_INTEGER_1   reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    NON_INTEGER_2   reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    NON_INTEGER_3   reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    TRUE            reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    FALSE           reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    CASE            reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    DEFAULT         reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)
    BRPAREN         reduce using rule 18 (classOrInterfaceDeclaration -> expr_1 .)


state 27

    (32) classDeclaration -> enumDeclaration .

    SEMI            reduce using rule 32 (classDeclaration -> enumDeclaration .)
    PUBLIC          reduce using rule 32 (classDeclaration -> enumDeclaration .)
    PROTECTED       reduce using rule 32 (classDeclaration -> enumDeclaration .)
    PRIVATE         reduce using rule 32 (classDeclaration -> enumDeclaration .)
    ABSTRACT        reduce using rule 32 (classDeclaration -> enumDeclaration .)
    STATIC          reduce using rule 32 (classDeclaration -> enumDeclaration .)
    FINAL           reduce using rule 32 (classDeclaration -> enumDeclaration .)
    STRICTFP        reduce using rule 32 (classDeclaration -> enumDeclaration .)
    CLASS           reduce using rule 32 (classDeclaration -> enumDeclaration .)
    ENUM            reduce using rule 32 (classDeclaration -> enumDeclaration .)
    INTERFACE       reduce using rule 32 (classDeclaration -> enumDeclaration .)
    AT              reduce using rule 32 (classDeclaration -> enumDeclaration .)
    $end            reduce using rule 32 (classDeclaration -> enumDeclaration .)
    BRPAREN         reduce using rule 32 (classDeclaration -> enumDeclaration .)
    Identifier      reduce using rule 32 (classDeclaration -> enumDeclaration .)
    CONTINUE        reduce using rule 32 (classDeclaration -> enumDeclaration .)
    BREAK           reduce using rule 32 (classDeclaration -> enumDeclaration .)
    THROW           reduce using rule 32 (classDeclaration -> enumDeclaration .)
    RETURN          reduce using rule 32 (classDeclaration -> enumDeclaration .)
    SYNCHRONIZED    reduce using rule 32 (classDeclaration -> enumDeclaration .)
    SWITCH          reduce using rule 32 (classDeclaration -> enumDeclaration .)
    TRY             reduce using rule 32 (classDeclaration -> enumDeclaration .)
    DO              reduce using rule 32 (classDeclaration -> enumDeclaration .)
    WHILE           reduce using rule 32 (classDeclaration -> enumDeclaration .)
    FOR             reduce using rule 32 (classDeclaration -> enumDeclaration .)
    IF              reduce using rule 32 (classDeclaration -> enumDeclaration .)
    ASSERT          reduce using rule 32 (classDeclaration -> enumDeclaration .)
    BLPAREN         reduce using rule 32 (classDeclaration -> enumDeclaration .)
    BOOLEAN         reduce using rule 32 (classDeclaration -> enumDeclaration .)
    CHAR            reduce using rule 32 (classDeclaration -> enumDeclaration .)
    BYTE            reduce using rule 32 (classDeclaration -> enumDeclaration .)
    SHORT           reduce using rule 32 (classDeclaration -> enumDeclaration .)
    INT             reduce using rule 32 (classDeclaration -> enumDeclaration .)
    LONG            reduce using rule 32 (classDeclaration -> enumDeclaration .)
    FLOAT           reduce using rule 32 (classDeclaration -> enumDeclaration .)
    DOUBLE          reduce using rule 32 (classDeclaration -> enumDeclaration .)
    PLUS            reduce using rule 32 (classDeclaration -> enumDeclaration .)
    DASH            reduce using rule 32 (classDeclaration -> enumDeclaration .)
    OP_INC          reduce using rule 32 (classDeclaration -> enumDeclaration .)
    OP_DEC          reduce using rule 32 (classDeclaration -> enumDeclaration .)
    EXCLAMATION     reduce using rule 32 (classDeclaration -> enumDeclaration .)
    TILDE           reduce using rule 32 (classDeclaration -> enumDeclaration .)
    VOID            reduce using rule 32 (classDeclaration -> enumDeclaration .)
    NEW             reduce using rule 32 (classDeclaration -> enumDeclaration .)
    SUPER           reduce using rule 32 (classDeclaration -> enumDeclaration .)
    THIS            reduce using rule 32 (classDeclaration -> enumDeclaration .)
    LPAREN          reduce using rule 32 (classDeclaration -> enumDeclaration .)
    CharacterLiteral reduce using rule 32 (classDeclaration -> enumDeclaration .)
    StringLiteral   reduce using rule 32 (classDeclaration -> enumDeclaration .)
    NULL            reduce using rule 32 (classDeclaration -> enumDeclaration .)
    NUMBER          reduce using rule 32 (classDeclaration -> enumDeclaration .)
    HEX_NUMBER      reduce using rule 32 (classDeclaration -> enumDeclaration .)
    LONG_NUMBER     reduce using rule 32 (classDeclaration -> enumDeclaration .)
    LONG_HEX_NUMBER reduce using rule 32 (classDeclaration -> enumDeclaration .)
    NON_INTEGER_1   reduce using rule 32 (classDeclaration -> enumDeclaration .)
    NON_INTEGER_2   reduce using rule 32 (classDeclaration -> enumDeclaration .)
    NON_INTEGER_3   reduce using rule 32 (classDeclaration -> enumDeclaration .)
    TRUE            reduce using rule 32 (classDeclaration -> enumDeclaration .)
    FALSE           reduce using rule 32 (classDeclaration -> enumDeclaration .)
    CASE            reduce using rule 32 (classDeclaration -> enumDeclaration .)
    DEFAULT         reduce using rule 32 (classDeclaration -> enumDeclaration .)
    NATIVE          reduce using rule 32 (classDeclaration -> enumDeclaration .)
    TRANSIENT       reduce using rule 32 (classDeclaration -> enumDeclaration .)
    VOLATILE        reduce using rule 32 (classDeclaration -> enumDeclaration .)
    LESS            reduce using rule 32 (classDeclaration -> enumDeclaration .)


state 28

    (404) expr_0 -> classOrInterfaceDeclaration . expt_1
    (441) expt_1 -> . typeDeclaration
    (442) expt_1 -> . expt_1 typeDeclaration
    (15) typeDeclaration -> . classOrInterfaceDeclaration
    (16) typeDeclaration -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (584) empty -> .
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    SEMI            shift and go to state 51
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 19
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    typeDeclaration                shift and go to state 49
    normalInterfaceDeclaration     shift and go to state 18
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    expt_1                         shift and go to state 64
    interfaceDeclaration           shift and go to state 24
    empty                          shift and go to state 25
    expr_1                         shift and go to state 26
    enumDeclaration                shift and go to state 27
    classOrInterfaceDeclaration    shift and go to state 54
    classDeclaration               shift and go to state 31
    annotation                     shift and go to state 56
    classOrInterfaceModifier       shift and go to state 34
    annotationTypeDeclaration      shift and go to state 36
    classOrInterfaceModifiers      shift and go to state 37

state 29

    (47) enumDeclaration -> ENUM . Identifier expt_9 enumBody
    (48) enumDeclaration -> ENUM . Identifier empty enumBody

    Identifier      shift and go to state 65


state 30

    (403) expr_0 -> packageDeclaration . expt_0 expt_1
    (439) expt_0 -> . importDeclaration
    (440) expt_0 -> . expt_0 importDeclaration
    (11) importDeclaration -> . IMPORT expt_3 qualifiedName expt_4 SEMI
    (12) importDeclaration -> . IMPORT expt_3 qualifiedName SEMI
    (13) importDeclaration -> . IMPORT qualifiedName expt_4 SEMI
    (14) importDeclaration -> . IMPORT qualifiedName SEMI

    IMPORT          shift and go to state 13

    importDeclaration              shift and go to state 11
    expt_0                         shift and go to state 66

state 31

    (405) expr_1 -> classDeclaration .

    SEMI            reduce using rule 405 (expr_1 -> classDeclaration .)
    PUBLIC          reduce using rule 405 (expr_1 -> classDeclaration .)
    PROTECTED       reduce using rule 405 (expr_1 -> classDeclaration .)
    PRIVATE         reduce using rule 405 (expr_1 -> classDeclaration .)
    ABSTRACT        reduce using rule 405 (expr_1 -> classDeclaration .)
    STATIC          reduce using rule 405 (expr_1 -> classDeclaration .)
    FINAL           reduce using rule 405 (expr_1 -> classDeclaration .)
    STRICTFP        reduce using rule 405 (expr_1 -> classDeclaration .)
    CLASS           reduce using rule 405 (expr_1 -> classDeclaration .)
    ENUM            reduce using rule 405 (expr_1 -> classDeclaration .)
    INTERFACE       reduce using rule 405 (expr_1 -> classDeclaration .)
    AT              reduce using rule 405 (expr_1 -> classDeclaration .)
    $end            reduce using rule 405 (expr_1 -> classDeclaration .)
    BRPAREN         reduce using rule 405 (expr_1 -> classDeclaration .)
    Identifier      reduce using rule 405 (expr_1 -> classDeclaration .)
    CONTINUE        reduce using rule 405 (expr_1 -> classDeclaration .)
    BREAK           reduce using rule 405 (expr_1 -> classDeclaration .)
    THROW           reduce using rule 405 (expr_1 -> classDeclaration .)
    RETURN          reduce using rule 405 (expr_1 -> classDeclaration .)
    SYNCHRONIZED    reduce using rule 405 (expr_1 -> classDeclaration .)
    SWITCH          reduce using rule 405 (expr_1 -> classDeclaration .)
    TRY             reduce using rule 405 (expr_1 -> classDeclaration .)
    DO              reduce using rule 405 (expr_1 -> classDeclaration .)
    WHILE           reduce using rule 405 (expr_1 -> classDeclaration .)
    FOR             reduce using rule 405 (expr_1 -> classDeclaration .)
    IF              reduce using rule 405 (expr_1 -> classDeclaration .)
    ASSERT          reduce using rule 405 (expr_1 -> classDeclaration .)
    BLPAREN         reduce using rule 405 (expr_1 -> classDeclaration .)
    BOOLEAN         reduce using rule 405 (expr_1 -> classDeclaration .)
    CHAR            reduce using rule 405 (expr_1 -> classDeclaration .)
    BYTE            reduce using rule 405 (expr_1 -> classDeclaration .)
    SHORT           reduce using rule 405 (expr_1 -> classDeclaration .)
    INT             reduce using rule 405 (expr_1 -> classDeclaration .)
    LONG            reduce using rule 405 (expr_1 -> classDeclaration .)
    FLOAT           reduce using rule 405 (expr_1 -> classDeclaration .)
    DOUBLE          reduce using rule 405 (expr_1 -> classDeclaration .)
    PLUS            reduce using rule 405 (expr_1 -> classDeclaration .)
    DASH            reduce using rule 405 (expr_1 -> classDeclaration .)
    OP_INC          reduce using rule 405 (expr_1 -> classDeclaration .)
    OP_DEC          reduce using rule 405 (expr_1 -> classDeclaration .)
    EXCLAMATION     reduce using rule 405 (expr_1 -> classDeclaration .)
    TILDE           reduce using rule 405 (expr_1 -> classDeclaration .)
    VOID            reduce using rule 405 (expr_1 -> classDeclaration .)
    NEW             reduce using rule 405 (expr_1 -> classDeclaration .)
    SUPER           reduce using rule 405 (expr_1 -> classDeclaration .)
    THIS            reduce using rule 405 (expr_1 -> classDeclaration .)
    LPAREN          reduce using rule 405 (expr_1 -> classDeclaration .)
    CharacterLiteral reduce using rule 405 (expr_1 -> classDeclaration .)
    StringLiteral   reduce using rule 405 (expr_1 -> classDeclaration .)
    NULL            reduce using rule 405 (expr_1 -> classDeclaration .)
    NUMBER          reduce using rule 405 (expr_1 -> classDeclaration .)
    HEX_NUMBER      reduce using rule 405 (expr_1 -> classDeclaration .)
    LONG_NUMBER     reduce using rule 405 (expr_1 -> classDeclaration .)
    LONG_HEX_NUMBER reduce using rule 405 (expr_1 -> classDeclaration .)
    NON_INTEGER_1   reduce using rule 405 (expr_1 -> classDeclaration .)
    NON_INTEGER_2   reduce using rule 405 (expr_1 -> classDeclaration .)
    NON_INTEGER_3   reduce using rule 405 (expr_1 -> classDeclaration .)
    TRUE            reduce using rule 405 (expr_1 -> classDeclaration .)
    FALSE           reduce using rule 405 (expr_1 -> classDeclaration .)
    CASE            reduce using rule 405 (expr_1 -> classDeclaration .)
    DEFAULT         reduce using rule 405 (expr_1 -> classDeclaration .)


state 32

    (203) annotation -> AT . annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> AT . annotationName LPAREN elementValue RPAREN
    (205) annotation -> AT . annotationName LPAREN RPAREN
    (206) annotation -> AT . annotationName
    (219) annotationTypeDeclaration -> AT . INTERFACE Identifier annotationTypeBody
    (207) annotationName -> . Identifier expt_42
    (208) annotationName -> . Identifier empty

    INTERFACE       shift and go to state 67
    Identifier      shift and go to state 44

    annotationName                 shift and go to state 43

state 33

    (202) annotations -> annotations annotation .
    (21) classOrInterfaceModifier -> annotation .

  ! reduce/reduce conflict for PUBLIC resolved using rule 21 (classOrInterfaceModifier -> annotation .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 21 (classOrInterfaceModifier -> annotation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 21 (classOrInterfaceModifier -> annotation .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 21 (classOrInterfaceModifier -> annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 21 (classOrInterfaceModifier -> annotation .)
  ! reduce/reduce conflict for FINAL resolved using rule 21 (classOrInterfaceModifier -> annotation .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 21 (classOrInterfaceModifier -> annotation .)
  ! reduce/reduce conflict for AT resolved using rule 21 (classOrInterfaceModifier -> annotation .)
  ! reduce/reduce conflict for CLASS resolved using rule 21 (classOrInterfaceModifier -> annotation .)
  ! reduce/reduce conflict for ENUM resolved using rule 21 (classOrInterfaceModifier -> annotation .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 21 (classOrInterfaceModifier -> annotation .)
    PACKAGE         reduce using rule 202 (annotations -> annotations annotation .)
    PUBLIC          reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    PROTECTED       reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    PRIVATE         reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    ABSTRACT        reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    STATIC          reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    FINAL           reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    STRICTFP        reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    AT              reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    CLASS           reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    ENUM            reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    INTERFACE       reduce using rule 21 (classOrInterfaceModifier -> annotation .)

  ! AT              [ reduce using rule 202 (annotations -> annotations annotation .) ]
  ! PUBLIC          [ reduce using rule 202 (annotations -> annotations annotation .) ]
  ! PROTECTED       [ reduce using rule 202 (annotations -> annotations annotation .) ]
  ! PRIVATE         [ reduce using rule 202 (annotations -> annotations annotation .) ]
  ! ABSTRACT        [ reduce using rule 202 (annotations -> annotations annotation .) ]
  ! STATIC          [ reduce using rule 202 (annotations -> annotations annotation .) ]
  ! FINAL           [ reduce using rule 202 (annotations -> annotations annotation .) ]
  ! STRICTFP        [ reduce using rule 202 (annotations -> annotations annotation .) ]
  ! CLASS           [ reduce using rule 202 (annotations -> annotations annotation .) ]
  ! ENUM            [ reduce using rule 202 (annotations -> annotations annotation .) ]
  ! INTERFACE       [ reduce using rule 202 (annotations -> annotations annotation .) ]


state 34

    (449) expt_5 -> classOrInterfaceModifier .

    PUBLIC          reduce using rule 449 (expt_5 -> classOrInterfaceModifier .)
    PROTECTED       reduce using rule 449 (expt_5 -> classOrInterfaceModifier .)
    PRIVATE         reduce using rule 449 (expt_5 -> classOrInterfaceModifier .)
    ABSTRACT        reduce using rule 449 (expt_5 -> classOrInterfaceModifier .)
    STATIC          reduce using rule 449 (expt_5 -> classOrInterfaceModifier .)
    FINAL           reduce using rule 449 (expt_5 -> classOrInterfaceModifier .)
    STRICTFP        reduce using rule 449 (expt_5 -> classOrInterfaceModifier .)
    AT              reduce using rule 449 (expt_5 -> classOrInterfaceModifier .)
    CLASS           reduce using rule 449 (expt_5 -> classOrInterfaceModifier .)
    ENUM            reduce using rule 449 (expt_5 -> classOrInterfaceModifier .)
    INTERFACE       reduce using rule 449 (expt_5 -> classOrInterfaceModifier .)


state 35

    (33) normalClassDeclaration -> CLASS . Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> CLASS . Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> CLASS . Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> CLASS . Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> CLASS . Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> CLASS . Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> CLASS . Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> CLASS . Identifier empty empty empty classBody

    Identifier      shift and go to state 68


state 36

    (70) interfaceDeclaration -> annotationTypeDeclaration .

    BRPAREN         reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    SEMI            reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    Identifier      reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    CONTINUE        reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    BREAK           reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    THROW           reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    RETURN          reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    SYNCHRONIZED    reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    SWITCH          reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    TRY             reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    DO              reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    WHILE           reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    FOR             reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    IF              reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    ASSERT          reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    BLPAREN         reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    BOOLEAN         reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    CHAR            reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    BYTE            reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    SHORT           reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    INT             reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    LONG            reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    FLOAT           reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    DOUBLE          reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    PUBLIC          reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    PROTECTED       reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    PRIVATE         reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    ABSTRACT        reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    STATIC          reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    FINAL           reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    STRICTFP        reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    CLASS           reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    ENUM            reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    INTERFACE       reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    AT              reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    PLUS            reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    DASH            reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    OP_INC          reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    OP_DEC          reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    EXCLAMATION     reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    TILDE           reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    VOID            reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    NEW             reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    SUPER           reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    THIS            reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    LPAREN          reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    CharacterLiteral reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    StringLiteral   reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    NULL            reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    NUMBER          reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    HEX_NUMBER      reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    LONG_NUMBER     reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    LONG_HEX_NUMBER reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    NON_INTEGER_1   reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    NON_INTEGER_2   reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    NON_INTEGER_3   reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    TRUE            reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    FALSE           reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    $end            reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    CASE            reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    DEFAULT         reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    NATIVE          reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    TRANSIENT       reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    VOLATILE        reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)
    LESS            reduce using rule 70 (interfaceDeclaration -> annotationTypeDeclaration .)


state 37

    (17) classOrInterfaceDeclaration -> classOrInterfaceModifiers . expr_1
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody

    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 70

    enumDeclaration                shift and go to state 27
    normalClassDeclaration         shift and go to state 20
    annotationTypeDeclaration      shift and go to state 36
    interfaceDeclaration           shift and go to state 24
    classDeclaration               shift and go to state 31
    normalInterfaceDeclaration     shift and go to state 18
    expr_1                         shift and go to state 69

state 38

    (9) compilationUnit -> annotations expr_0 .

    $end            reduce using rule 9 (compilationUnit -> annotations expr_0 .)


state 39

    (71) normalInterfaceDeclaration -> INTERFACE . Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> INTERFACE . Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> INTERFACE . Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> INTERFACE . Identifier empty empty interfaceBody

    Identifier      shift and go to state 71


state 40

    (22) classOrInterfaceModifier -> PUBLIC .

    PUBLIC          reduce using rule 22 (classOrInterfaceModifier -> PUBLIC .)
    PROTECTED       reduce using rule 22 (classOrInterfaceModifier -> PUBLIC .)
    PRIVATE         reduce using rule 22 (classOrInterfaceModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 22 (classOrInterfaceModifier -> PUBLIC .)
    STATIC          reduce using rule 22 (classOrInterfaceModifier -> PUBLIC .)
    FINAL           reduce using rule 22 (classOrInterfaceModifier -> PUBLIC .)
    STRICTFP        reduce using rule 22 (classOrInterfaceModifier -> PUBLIC .)
    AT              reduce using rule 22 (classOrInterfaceModifier -> PUBLIC .)
    CLASS           reduce using rule 22 (classOrInterfaceModifier -> PUBLIC .)
    ENUM            reduce using rule 22 (classOrInterfaceModifier -> PUBLIC .)
    INTERFACE       reduce using rule 22 (classOrInterfaceModifier -> PUBLIC .)


state 41

    (5) compilationUnit -> empty expt_0 . expt_1
    (6) compilationUnit -> empty expt_0 . empty
    (440) expt_0 -> expt_0 . importDeclaration
    (441) expt_1 -> . typeDeclaration
    (442) expt_1 -> . expt_1 typeDeclaration
    (584) empty -> .
    (11) importDeclaration -> . IMPORT expt_3 qualifiedName expt_4 SEMI
    (12) importDeclaration -> . IMPORT expt_3 qualifiedName SEMI
    (13) importDeclaration -> . IMPORT qualifiedName expt_4 SEMI
    (14) importDeclaration -> . IMPORT qualifiedName SEMI
    (15) typeDeclaration -> . classOrInterfaceDeclaration
    (16) typeDeclaration -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    $end            reduce using rule 584 (empty -> .)
    IMPORT          shift and go to state 13
    SEMI            shift and go to state 51
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 19
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    typeDeclaration                shift and go to state 49
    importDeclaration              shift and go to state 50
    normalInterfaceDeclaration     shift and go to state 18
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    expt_1                         shift and go to state 72
    interfaceDeclaration           shift and go to state 24
    empty                          shift and go to state 73
    expr_1                         shift and go to state 26
    enumDeclaration                shift and go to state 27
    classOrInterfaceDeclaration    shift and go to state 54
    classDeclaration               shift and go to state 31
    annotation                     shift and go to state 56
    classOrInterfaceModifier       shift and go to state 34
    annotationTypeDeclaration      shift and go to state 36
    classOrInterfaceModifiers      shift and go to state 37

state 42

    (7) compilationUnit -> empty empty . expt_1
    (8) compilationUnit -> empty empty . empty
    (441) expt_1 -> . typeDeclaration
    (442) expt_1 -> . expt_1 typeDeclaration
    (584) empty -> .
    (15) typeDeclaration -> . classOrInterfaceDeclaration
    (16) typeDeclaration -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    $end            reduce using rule 584 (empty -> .)
    SEMI            shift and go to state 51
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 19
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    typeDeclaration                shift and go to state 49
    normalInterfaceDeclaration     shift and go to state 18
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    expt_1                         shift and go to state 74
    interfaceDeclaration           shift and go to state 24
    empty                          shift and go to state 75
    expr_1                         shift and go to state 26
    enumDeclaration                shift and go to state 27
    classOrInterfaceDeclaration    shift and go to state 54
    classDeclaration               shift and go to state 31
    annotation                     shift and go to state 56
    classOrInterfaceModifier       shift and go to state 34
    annotationTypeDeclaration      shift and go to state 36
    classOrInterfaceModifiers      shift and go to state 37

state 43

    (203) annotation -> AT annotationName . LPAREN elementValuePairs RPAREN
    (204) annotation -> AT annotationName . LPAREN elementValue RPAREN
    (205) annotation -> AT annotationName . LPAREN RPAREN
    (206) annotation -> AT annotationName .

    LPAREN          shift and go to state 76
    PUBLIC          reduce using rule 206 (annotation -> AT annotationName .)
    PROTECTED       reduce using rule 206 (annotation -> AT annotationName .)
    PRIVATE         reduce using rule 206 (annotation -> AT annotationName .)
    STATIC          reduce using rule 206 (annotation -> AT annotationName .)
    ABSTRACT        reduce using rule 206 (annotation -> AT annotationName .)
    FINAL           reduce using rule 206 (annotation -> AT annotationName .)
    NATIVE          reduce using rule 206 (annotation -> AT annotationName .)
    SYNCHRONIZED    reduce using rule 206 (annotation -> AT annotationName .)
    TRANSIENT       reduce using rule 206 (annotation -> AT annotationName .)
    VOLATILE        reduce using rule 206 (annotation -> AT annotationName .)
    STRICTFP        reduce using rule 206 (annotation -> AT annotationName .)
    AT              reduce using rule 206 (annotation -> AT annotationName .)
    VOID            reduce using rule 206 (annotation -> AT annotationName .)
    Identifier      reduce using rule 206 (annotation -> AT annotationName .)
    LESS            reduce using rule 206 (annotation -> AT annotationName .)
    INTERFACE       reduce using rule 206 (annotation -> AT annotationName .)
    CLASS           reduce using rule 206 (annotation -> AT annotationName .)
    ENUM            reduce using rule 206 (annotation -> AT annotationName .)
    BOOLEAN         reduce using rule 206 (annotation -> AT annotationName .)
    CHAR            reduce using rule 206 (annotation -> AT annotationName .)
    BYTE            reduce using rule 206 (annotation -> AT annotationName .)
    SHORT           reduce using rule 206 (annotation -> AT annotationName .)
    INT             reduce using rule 206 (annotation -> AT annotationName .)
    LONG            reduce using rule 206 (annotation -> AT annotationName .)
    FLOAT           reduce using rule 206 (annotation -> AT annotationName .)
    DOUBLE          reduce using rule 206 (annotation -> AT annotationName .)
    COMMA           reduce using rule 206 (annotation -> AT annotationName .)
    BRPAREN         reduce using rule 206 (annotation -> AT annotationName .)
    PACKAGE         reduce using rule 206 (annotation -> AT annotationName .)
    RPAREN          reduce using rule 206 (annotation -> AT annotationName .)
    SEMI            reduce using rule 206 (annotation -> AT annotationName .)


state 44

    (207) annotationName -> Identifier . expt_42
    (208) annotationName -> Identifier . empty
    (520) expt_42 -> . DOT Identifier
    (521) expt_42 -> . expt_42 DOT Identifier
    (584) empty -> .

    DOT             shift and go to state 46
    LPAREN          reduce using rule 584 (empty -> .)
    AT              reduce using rule 584 (empty -> .)
    PACKAGE         reduce using rule 584 (empty -> .)
    PUBLIC          reduce using rule 584 (empty -> .)
    PROTECTED       reduce using rule 584 (empty -> .)
    PRIVATE         reduce using rule 584 (empty -> .)
    ABSTRACT        reduce using rule 584 (empty -> .)
    STATIC          reduce using rule 584 (empty -> .)
    FINAL           reduce using rule 584 (empty -> .)
    STRICTFP        reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    RPAREN          reduce using rule 584 (empty -> .)
    COMMA           reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    NATIVE          reduce using rule 584 (empty -> .)
    SYNCHRONIZED    reduce using rule 584 (empty -> .)
    TRANSIENT       reduce using rule 584 (empty -> .)
    VOLATILE        reduce using rule 584 (empty -> .)
    BOOLEAN         reduce using rule 584 (empty -> .)
    CHAR            reduce using rule 584 (empty -> .)
    BYTE            reduce using rule 584 (empty -> .)
    SHORT           reduce using rule 584 (empty -> .)
    INT             reduce using rule 584 (empty -> .)
    LONG            reduce using rule 584 (empty -> .)
    FLOAT           reduce using rule 584 (empty -> .)
    DOUBLE          reduce using rule 584 (empty -> .)
    VOID            reduce using rule 584 (empty -> .)
    LESS            reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)

    empty                          shift and go to state 77
    expt_42                        shift and go to state 78

state 45

    (10) packageDeclaration -> PACKAGE qualifiedName SEMI .

    IMPORT          reduce using rule 10 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    SEMI            reduce using rule 10 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    PUBLIC          reduce using rule 10 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    PROTECTED       reduce using rule 10 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    PRIVATE         reduce using rule 10 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    ABSTRACT        reduce using rule 10 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    STATIC          reduce using rule 10 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    FINAL           reduce using rule 10 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    STRICTFP        reduce using rule 10 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    CLASS           reduce using rule 10 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    ENUM            reduce using rule 10 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    INTERFACE       reduce using rule 10 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    AT              reduce using rule 10 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    $end            reduce using rule 10 (packageDeclaration -> PACKAGE qualifiedName SEMI .)


state 46

    (520) expt_42 -> DOT . Identifier

    Identifier      shift and go to state 79


state 47

    (192) qualifiedName -> Identifier empty .

    SEMI            reduce using rule 192 (qualifiedName -> Identifier empty .)
    DOT             reduce using rule 192 (qualifiedName -> Identifier empty .)
    COMMA           reduce using rule 192 (qualifiedName -> Identifier empty .)
    BLPAREN         reduce using rule 192 (qualifiedName -> Identifier empty .)


state 48

    (191) qualifiedName -> Identifier expt_42 .
    (521) expt_42 -> expt_42 . DOT Identifier

  ! shift/reduce conflict for DOT resolved as shift
    SEMI            reduce using rule 191 (qualifiedName -> Identifier expt_42 .)
    COMMA           reduce using rule 191 (qualifiedName -> Identifier expt_42 .)
    BLPAREN         reduce using rule 191 (qualifiedName -> Identifier expt_42 .)
    DOT             shift and go to state 80

  ! DOT             [ reduce using rule 191 (qualifiedName -> Identifier expt_42 .) ]


state 49

    (441) expt_1 -> typeDeclaration .

    SEMI            reduce using rule 441 (expt_1 -> typeDeclaration .)
    PUBLIC          reduce using rule 441 (expt_1 -> typeDeclaration .)
    PROTECTED       reduce using rule 441 (expt_1 -> typeDeclaration .)
    PRIVATE         reduce using rule 441 (expt_1 -> typeDeclaration .)
    ABSTRACT        reduce using rule 441 (expt_1 -> typeDeclaration .)
    STATIC          reduce using rule 441 (expt_1 -> typeDeclaration .)
    FINAL           reduce using rule 441 (expt_1 -> typeDeclaration .)
    STRICTFP        reduce using rule 441 (expt_1 -> typeDeclaration .)
    CLASS           reduce using rule 441 (expt_1 -> typeDeclaration .)
    ENUM            reduce using rule 441 (expt_1 -> typeDeclaration .)
    INTERFACE       reduce using rule 441 (expt_1 -> typeDeclaration .)
    AT              reduce using rule 441 (expt_1 -> typeDeclaration .)
    $end            reduce using rule 441 (expt_1 -> typeDeclaration .)


state 50

    (440) expt_0 -> expt_0 importDeclaration .

    IMPORT          reduce using rule 440 (expt_0 -> expt_0 importDeclaration .)
    SEMI            reduce using rule 440 (expt_0 -> expt_0 importDeclaration .)
    PUBLIC          reduce using rule 440 (expt_0 -> expt_0 importDeclaration .)
    PROTECTED       reduce using rule 440 (expt_0 -> expt_0 importDeclaration .)
    PRIVATE         reduce using rule 440 (expt_0 -> expt_0 importDeclaration .)
    ABSTRACT        reduce using rule 440 (expt_0 -> expt_0 importDeclaration .)
    STATIC          reduce using rule 440 (expt_0 -> expt_0 importDeclaration .)
    FINAL           reduce using rule 440 (expt_0 -> expt_0 importDeclaration .)
    STRICTFP        reduce using rule 440 (expt_0 -> expt_0 importDeclaration .)
    CLASS           reduce using rule 440 (expt_0 -> expt_0 importDeclaration .)
    ENUM            reduce using rule 440 (expt_0 -> expt_0 importDeclaration .)
    INTERFACE       reduce using rule 440 (expt_0 -> expt_0 importDeclaration .)
    AT              reduce using rule 440 (expt_0 -> expt_0 importDeclaration .)
    $end            reduce using rule 440 (expt_0 -> expt_0 importDeclaration .)


state 51

    (16) typeDeclaration -> SEMI .

    SEMI            reduce using rule 16 (typeDeclaration -> SEMI .)
    PUBLIC          reduce using rule 16 (typeDeclaration -> SEMI .)
    PROTECTED       reduce using rule 16 (typeDeclaration -> SEMI .)
    PRIVATE         reduce using rule 16 (typeDeclaration -> SEMI .)
    ABSTRACT        reduce using rule 16 (typeDeclaration -> SEMI .)
    STATIC          reduce using rule 16 (typeDeclaration -> SEMI .)
    FINAL           reduce using rule 16 (typeDeclaration -> SEMI .)
    STRICTFP        reduce using rule 16 (typeDeclaration -> SEMI .)
    CLASS           reduce using rule 16 (typeDeclaration -> SEMI .)
    ENUM            reduce using rule 16 (typeDeclaration -> SEMI .)
    INTERFACE       reduce using rule 16 (typeDeclaration -> SEMI .)
    AT              reduce using rule 16 (typeDeclaration -> SEMI .)
    $end            reduce using rule 16 (typeDeclaration -> SEMI .)


state 52

    (1) compilationUnit -> expt_2 expt_0 expt_1 .
    (442) expt_1 -> expt_1 . typeDeclaration
    (15) typeDeclaration -> . classOrInterfaceDeclaration
    (16) typeDeclaration -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (584) empty -> .
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    $end            reduce using rule 1 (compilationUnit -> expt_2 expt_0 expt_1 .)
    SEMI            shift and go to state 51
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 19
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    typeDeclaration                shift and go to state 81
    normalInterfaceDeclaration     shift and go to state 18
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    interfaceDeclaration           shift and go to state 24
    empty                          shift and go to state 25
    expr_1                         shift and go to state 26
    enumDeclaration                shift and go to state 27
    classOrInterfaceDeclaration    shift and go to state 54
    classDeclaration               shift and go to state 31
    annotation                     shift and go to state 56
    classOrInterfaceModifier       shift and go to state 34
    annotationTypeDeclaration      shift and go to state 36
    classOrInterfaceModifiers      shift and go to state 37

state 53

    (2) compilationUnit -> expt_2 expt_0 empty .
    (20) classOrInterfaceModifiers -> empty .

    $end            reduce using rule 2 (compilationUnit -> expt_2 expt_0 empty .)
    CLASS           reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    ENUM            reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    INTERFACE       reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    AT              reduce using rule 20 (classOrInterfaceModifiers -> empty .)


state 54

    (15) typeDeclaration -> classOrInterfaceDeclaration .

    SEMI            reduce using rule 15 (typeDeclaration -> classOrInterfaceDeclaration .)
    PUBLIC          reduce using rule 15 (typeDeclaration -> classOrInterfaceDeclaration .)
    PROTECTED       reduce using rule 15 (typeDeclaration -> classOrInterfaceDeclaration .)
    PRIVATE         reduce using rule 15 (typeDeclaration -> classOrInterfaceDeclaration .)
    ABSTRACT        reduce using rule 15 (typeDeclaration -> classOrInterfaceDeclaration .)
    STATIC          reduce using rule 15 (typeDeclaration -> classOrInterfaceDeclaration .)
    FINAL           reduce using rule 15 (typeDeclaration -> classOrInterfaceDeclaration .)
    STRICTFP        reduce using rule 15 (typeDeclaration -> classOrInterfaceDeclaration .)
    CLASS           reduce using rule 15 (typeDeclaration -> classOrInterfaceDeclaration .)
    ENUM            reduce using rule 15 (typeDeclaration -> classOrInterfaceDeclaration .)
    INTERFACE       reduce using rule 15 (typeDeclaration -> classOrInterfaceDeclaration .)
    AT              reduce using rule 15 (typeDeclaration -> classOrInterfaceDeclaration .)
    $end            reduce using rule 15 (typeDeclaration -> classOrInterfaceDeclaration .)


state 55

    (219) annotationTypeDeclaration -> AT . INTERFACE Identifier annotationTypeBody
    (203) annotation -> AT . annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> AT . annotationName LPAREN elementValue RPAREN
    (205) annotation -> AT . annotationName LPAREN RPAREN
    (206) annotation -> AT . annotationName
    (207) annotationName -> . Identifier expt_42
    (208) annotationName -> . Identifier empty

    INTERFACE       shift and go to state 67
    Identifier      shift and go to state 44

    annotationName                 shift and go to state 43

state 56

    (21) classOrInterfaceModifier -> annotation .

    PUBLIC          reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    PROTECTED       reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    PRIVATE         reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    ABSTRACT        reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    STATIC          reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    FINAL           reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    STRICTFP        reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    AT              reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    CLASS           reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    ENUM            reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    INTERFACE       reduce using rule 21 (classOrInterfaceModifier -> annotation .)


state 57

    (13) importDeclaration -> IMPORT qualifiedName . expt_4 SEMI
    (14) importDeclaration -> IMPORT qualifiedName . SEMI
    (447) expt_4 -> . DOT MULT
    (448) expt_4 -> . empty
    (584) empty -> .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 82
    DOT             shift and go to state 85

  ! SEMI            [ reduce using rule 584 (empty -> .) ]

    expt_4                         shift and go to state 83
    empty                          shift and go to state 84

state 58

    (11) importDeclaration -> IMPORT expt_3 . qualifiedName expt_4 SEMI
    (12) importDeclaration -> IMPORT expt_3 . qualifiedName SEMI
    (191) qualifiedName -> . Identifier expt_42
    (192) qualifiedName -> . Identifier empty

    Identifier      shift and go to state 10

    qualifiedName                  shift and go to state 86

state 59

    (445) expt_3 -> STATIC .

    Identifier      reduce using rule 445 (expt_3 -> STATIC .)


state 60

    (446) expt_3 -> empty .

    Identifier      reduce using rule 446 (expt_3 -> empty .)


state 61

    (3) compilationUnit -> expt_2 empty expt_1 .
    (442) expt_1 -> expt_1 . typeDeclaration
    (15) typeDeclaration -> . classOrInterfaceDeclaration
    (16) typeDeclaration -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (584) empty -> .
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    $end            reduce using rule 3 (compilationUnit -> expt_2 empty expt_1 .)
    SEMI            shift and go to state 51
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 19
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    typeDeclaration                shift and go to state 81
    normalInterfaceDeclaration     shift and go to state 18
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    interfaceDeclaration           shift and go to state 24
    empty                          shift and go to state 25
    expr_1                         shift and go to state 26
    enumDeclaration                shift and go to state 27
    classOrInterfaceDeclaration    shift and go to state 54
    classDeclaration               shift and go to state 31
    annotation                     shift and go to state 56
    classOrInterfaceModifier       shift and go to state 34
    annotationTypeDeclaration      shift and go to state 36
    classOrInterfaceModifiers      shift and go to state 37

state 62

    (4) compilationUnit -> expt_2 empty empty .
    (20) classOrInterfaceModifiers -> empty .

    $end            reduce using rule 4 (compilationUnit -> expt_2 empty empty .)
    CLASS           reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    ENUM            reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    INTERFACE       reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    AT              reduce using rule 20 (classOrInterfaceModifiers -> empty .)


state 63

    (450) expt_5 -> expt_5 classOrInterfaceModifier .

    PUBLIC          reduce using rule 450 (expt_5 -> expt_5 classOrInterfaceModifier .)
    PROTECTED       reduce using rule 450 (expt_5 -> expt_5 classOrInterfaceModifier .)
    PRIVATE         reduce using rule 450 (expt_5 -> expt_5 classOrInterfaceModifier .)
    ABSTRACT        reduce using rule 450 (expt_5 -> expt_5 classOrInterfaceModifier .)
    STATIC          reduce using rule 450 (expt_5 -> expt_5 classOrInterfaceModifier .)
    FINAL           reduce using rule 450 (expt_5 -> expt_5 classOrInterfaceModifier .)
    STRICTFP        reduce using rule 450 (expt_5 -> expt_5 classOrInterfaceModifier .)
    AT              reduce using rule 450 (expt_5 -> expt_5 classOrInterfaceModifier .)
    CLASS           reduce using rule 450 (expt_5 -> expt_5 classOrInterfaceModifier .)
    ENUM            reduce using rule 450 (expt_5 -> expt_5 classOrInterfaceModifier .)
    INTERFACE       reduce using rule 450 (expt_5 -> expt_5 classOrInterfaceModifier .)


state 64

    (404) expr_0 -> classOrInterfaceDeclaration expt_1 .
    (442) expt_1 -> expt_1 . typeDeclaration
    (15) typeDeclaration -> . classOrInterfaceDeclaration
    (16) typeDeclaration -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (584) empty -> .
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    $end            reduce using rule 404 (expr_0 -> classOrInterfaceDeclaration expt_1 .)
    SEMI            shift and go to state 51
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 19
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    typeDeclaration                shift and go to state 81
    normalInterfaceDeclaration     shift and go to state 18
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    interfaceDeclaration           shift and go to state 24
    empty                          shift and go to state 25
    expr_1                         shift and go to state 26
    enumDeclaration                shift and go to state 27
    classOrInterfaceDeclaration    shift and go to state 54
    classDeclaration               shift and go to state 31
    annotation                     shift and go to state 56
    classOrInterfaceModifier       shift and go to state 34
    annotationTypeDeclaration      shift and go to state 36
    classOrInterfaceModifiers      shift and go to state 37

state 65

    (47) enumDeclaration -> ENUM Identifier . expt_9 enumBody
    (48) enumDeclaration -> ENUM Identifier . empty enumBody
    (456) expt_9 -> . IMPLEMENTS typeList
    (457) expt_9 -> . empty
    (584) empty -> .

    IMPLEMENTS      shift and go to state 87
    BLPAREN         reduce using rule 584 (empty -> .)

    expt_9                         shift and go to state 88
    empty                          shift and go to state 89

state 66

    (403) expr_0 -> packageDeclaration expt_0 . expt_1
    (440) expt_0 -> expt_0 . importDeclaration
    (441) expt_1 -> . typeDeclaration
    (442) expt_1 -> . expt_1 typeDeclaration
    (11) importDeclaration -> . IMPORT expt_3 qualifiedName expt_4 SEMI
    (12) importDeclaration -> . IMPORT expt_3 qualifiedName SEMI
    (13) importDeclaration -> . IMPORT qualifiedName expt_4 SEMI
    (14) importDeclaration -> . IMPORT qualifiedName SEMI
    (15) typeDeclaration -> . classOrInterfaceDeclaration
    (16) typeDeclaration -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (584) empty -> .
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    IMPORT          shift and go to state 13
    SEMI            shift and go to state 51
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 19
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    typeDeclaration                shift and go to state 49
    importDeclaration              shift and go to state 50
    normalInterfaceDeclaration     shift and go to state 18
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    expt_1                         shift and go to state 90
    interfaceDeclaration           shift and go to state 24
    empty                          shift and go to state 25
    expr_1                         shift and go to state 26
    enumDeclaration                shift and go to state 27
    classOrInterfaceDeclaration    shift and go to state 54
    classDeclaration               shift and go to state 31
    annotation                     shift and go to state 56
    classOrInterfaceModifier       shift and go to state 34
    annotationTypeDeclaration      shift and go to state 36
    classOrInterfaceModifiers      shift and go to state 37

state 67

    (219) annotationTypeDeclaration -> AT INTERFACE . Identifier annotationTypeBody

    Identifier      shift and go to state 91


state 68

    (33) normalClassDeclaration -> CLASS Identifier . typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> CLASS Identifier . typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> CLASS Identifier . typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> CLASS Identifier . typeParameters empty empty classBody
    (37) normalClassDeclaration -> CLASS Identifier . empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> CLASS Identifier . empty expt_8 empty classBody
    (39) normalClassDeclaration -> CLASS Identifier . empty empty expt_9 classBody
    (40) normalClassDeclaration -> CLASS Identifier . empty empty empty classBody
    (41) typeParameters -> . LESS typeParameter expt_10 MORE
    (42) typeParameters -> . LESS typeParameter empty MORE
    (584) empty -> .

    LESS            shift and go to state 92
    EXTENDS         reduce using rule 584 (empty -> .)
    IMPLEMENTS      reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)

    typeParameters                 shift and go to state 93
    empty                          shift and go to state 94

state 69

    (17) classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .

    SEMI            reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    PUBLIC          reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    PROTECTED       reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    PRIVATE         reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    ABSTRACT        reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    STATIC          reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    FINAL           reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    STRICTFP        reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    CLASS           reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    ENUM            reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    INTERFACE       reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    AT              reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    $end            reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    Identifier      reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    CONTINUE        reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    BREAK           reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    THROW           reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    RETURN          reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    SYNCHRONIZED    reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    SWITCH          reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    TRY             reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    DO              reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    WHILE           reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    FOR             reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    IF              reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    ASSERT          reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    BLPAREN         reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    BOOLEAN         reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    CHAR            reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    BYTE            reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    SHORT           reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    INT             reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    LONG            reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    FLOAT           reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    DOUBLE          reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    PLUS            reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    DASH            reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    OP_INC          reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    OP_DEC          reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    EXCLAMATION     reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    TILDE           reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    VOID            reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    NEW             reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    SUPER           reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    THIS            reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    LPAREN          reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    CharacterLiteral reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    StringLiteral   reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    NULL            reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    NUMBER          reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    HEX_NUMBER      reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    LONG_NUMBER     reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    LONG_HEX_NUMBER reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    NON_INTEGER_1   reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    NON_INTEGER_2   reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    NON_INTEGER_3   reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    TRUE            reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    FALSE           reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    CASE            reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    DEFAULT         reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)
    BRPAREN         reduce using rule 17 (classOrInterfaceDeclaration -> classOrInterfaceModifiers expr_1 .)


state 70

    (219) annotationTypeDeclaration -> AT . INTERFACE Identifier annotationTypeBody

    INTERFACE       shift and go to state 67


state 71

    (71) normalInterfaceDeclaration -> INTERFACE Identifier . typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> INTERFACE Identifier . typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> INTERFACE Identifier . empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> INTERFACE Identifier . empty empty interfaceBody
    (41) typeParameters -> . LESS typeParameter expt_10 MORE
    (42) typeParameters -> . LESS typeParameter empty MORE
    (584) empty -> .

    LESS            shift and go to state 92
    EXTENDS         reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)

    typeParameters                 shift and go to state 95
    empty                          shift and go to state 96

state 72

    (5) compilationUnit -> empty expt_0 expt_1 .
    (442) expt_1 -> expt_1 . typeDeclaration
    (15) typeDeclaration -> . classOrInterfaceDeclaration
    (16) typeDeclaration -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (584) empty -> .
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    $end            reduce using rule 5 (compilationUnit -> empty expt_0 expt_1 .)
    SEMI            shift and go to state 51
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 19
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    typeDeclaration                shift and go to state 81
    normalInterfaceDeclaration     shift and go to state 18
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    interfaceDeclaration           shift and go to state 24
    empty                          shift and go to state 25
    expr_1                         shift and go to state 26
    enumDeclaration                shift and go to state 27
    classOrInterfaceDeclaration    shift and go to state 54
    classDeclaration               shift and go to state 31
    annotation                     shift and go to state 56
    classOrInterfaceModifier       shift and go to state 34
    annotationTypeDeclaration      shift and go to state 36
    classOrInterfaceModifiers      shift and go to state 37

state 73

    (6) compilationUnit -> empty expt_0 empty .
    (20) classOrInterfaceModifiers -> empty .

    $end            reduce using rule 6 (compilationUnit -> empty expt_0 empty .)
    CLASS           reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    ENUM            reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    INTERFACE       reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    AT              reduce using rule 20 (classOrInterfaceModifiers -> empty .)


state 74

    (7) compilationUnit -> empty empty expt_1 .
    (442) expt_1 -> expt_1 . typeDeclaration
    (15) typeDeclaration -> . classOrInterfaceDeclaration
    (16) typeDeclaration -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (584) empty -> .
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    $end            reduce using rule 7 (compilationUnit -> empty empty expt_1 .)
    SEMI            shift and go to state 51
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 19
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    typeDeclaration                shift and go to state 81
    normalInterfaceDeclaration     shift and go to state 18
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    interfaceDeclaration           shift and go to state 24
    empty                          shift and go to state 25
    expr_1                         shift and go to state 26
    enumDeclaration                shift and go to state 27
    classOrInterfaceDeclaration    shift and go to state 54
    classDeclaration               shift and go to state 31
    annotation                     shift and go to state 56
    classOrInterfaceModifier       shift and go to state 34
    annotationTypeDeclaration      shift and go to state 36
    classOrInterfaceModifiers      shift and go to state 37

state 75

    (8) compilationUnit -> empty empty empty .
    (20) classOrInterfaceModifiers -> empty .

    $end            reduce using rule 8 (compilationUnit -> empty empty empty .)
    CLASS           reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    ENUM            reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    INTERFACE       reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    AT              reduce using rule 20 (classOrInterfaceModifiers -> empty .)


state 76

    (203) annotation -> AT annotationName LPAREN . elementValuePairs RPAREN
    (204) annotation -> AT annotationName LPAREN . elementValue RPAREN
    (205) annotation -> AT annotationName LPAREN . RPAREN
    (209) elementValuePairs -> . elementValuePair expt_44
    (210) elementValuePairs -> . elementValuePair empty
    (212) elementValue -> . conditionalExpression
    (213) elementValue -> . annotation
    (214) elementValue -> . elementValueArrayInitializer
    (211) elementValuePair -> . Identifier EQUALS elementValue
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (215) elementValueArrayInitializer -> . BLPAREN expt_46 expt_30 BRPAREN
    (216) elementValueArrayInitializer -> . BLPAREN expt_46 empty BRPAREN
    (217) elementValueArrayInitializer -> . BLPAREN empty expt_30 BRPAREN
    (218) elementValueArrayInitializer -> . BLPAREN empty empty BRPAREN
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    RPAREN          shift and go to state 101
    Identifier      shift and go to state 117
    AT              shift and go to state 8
    BLPAREN         shift and go to state 122
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 133
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    elementValuePair               shift and go to state 115
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    elementValuePairs              shift and go to state 152
    annotation                     shift and go to state 153
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    elementValueArrayInitializer   shift and go to state 140
    andExpression                  shift and go to state 121
    elementValue                   shift and go to state 157

state 77

    (208) annotationName -> Identifier empty .

    LPAREN          reduce using rule 208 (annotationName -> Identifier empty .)
    PUBLIC          reduce using rule 208 (annotationName -> Identifier empty .)
    PROTECTED       reduce using rule 208 (annotationName -> Identifier empty .)
    PRIVATE         reduce using rule 208 (annotationName -> Identifier empty .)
    ABSTRACT        reduce using rule 208 (annotationName -> Identifier empty .)
    STATIC          reduce using rule 208 (annotationName -> Identifier empty .)
    FINAL           reduce using rule 208 (annotationName -> Identifier empty .)
    STRICTFP        reduce using rule 208 (annotationName -> Identifier empty .)
    AT              reduce using rule 208 (annotationName -> Identifier empty .)
    CLASS           reduce using rule 208 (annotationName -> Identifier empty .)
    ENUM            reduce using rule 208 (annotationName -> Identifier empty .)
    INTERFACE       reduce using rule 208 (annotationName -> Identifier empty .)
    BOOLEAN         reduce using rule 208 (annotationName -> Identifier empty .)
    CHAR            reduce using rule 208 (annotationName -> Identifier empty .)
    BYTE            reduce using rule 208 (annotationName -> Identifier empty .)
    SHORT           reduce using rule 208 (annotationName -> Identifier empty .)
    INT             reduce using rule 208 (annotationName -> Identifier empty .)
    LONG            reduce using rule 208 (annotationName -> Identifier empty .)
    FLOAT           reduce using rule 208 (annotationName -> Identifier empty .)
    DOUBLE          reduce using rule 208 (annotationName -> Identifier empty .)
    Identifier      reduce using rule 208 (annotationName -> Identifier empty .)
    PACKAGE         reduce using rule 208 (annotationName -> Identifier empty .)
    RPAREN          reduce using rule 208 (annotationName -> Identifier empty .)
    COMMA           reduce using rule 208 (annotationName -> Identifier empty .)
    BRPAREN         reduce using rule 208 (annotationName -> Identifier empty .)
    NATIVE          reduce using rule 208 (annotationName -> Identifier empty .)
    SYNCHRONIZED    reduce using rule 208 (annotationName -> Identifier empty .)
    TRANSIENT       reduce using rule 208 (annotationName -> Identifier empty .)
    VOLATILE        reduce using rule 208 (annotationName -> Identifier empty .)
    VOID            reduce using rule 208 (annotationName -> Identifier empty .)
    LESS            reduce using rule 208 (annotationName -> Identifier empty .)
    SEMI            reduce using rule 208 (annotationName -> Identifier empty .)


state 78

    (207) annotationName -> Identifier expt_42 .
    (521) expt_42 -> expt_42 . DOT Identifier

    LPAREN          reduce using rule 207 (annotationName -> Identifier expt_42 .)
    PUBLIC          reduce using rule 207 (annotationName -> Identifier expt_42 .)
    PROTECTED       reduce using rule 207 (annotationName -> Identifier expt_42 .)
    PRIVATE         reduce using rule 207 (annotationName -> Identifier expt_42 .)
    ABSTRACT        reduce using rule 207 (annotationName -> Identifier expt_42 .)
    STATIC          reduce using rule 207 (annotationName -> Identifier expt_42 .)
    FINAL           reduce using rule 207 (annotationName -> Identifier expt_42 .)
    STRICTFP        reduce using rule 207 (annotationName -> Identifier expt_42 .)
    AT              reduce using rule 207 (annotationName -> Identifier expt_42 .)
    CLASS           reduce using rule 207 (annotationName -> Identifier expt_42 .)
    ENUM            reduce using rule 207 (annotationName -> Identifier expt_42 .)
    INTERFACE       reduce using rule 207 (annotationName -> Identifier expt_42 .)
    BOOLEAN         reduce using rule 207 (annotationName -> Identifier expt_42 .)
    CHAR            reduce using rule 207 (annotationName -> Identifier expt_42 .)
    BYTE            reduce using rule 207 (annotationName -> Identifier expt_42 .)
    SHORT           reduce using rule 207 (annotationName -> Identifier expt_42 .)
    INT             reduce using rule 207 (annotationName -> Identifier expt_42 .)
    LONG            reduce using rule 207 (annotationName -> Identifier expt_42 .)
    FLOAT           reduce using rule 207 (annotationName -> Identifier expt_42 .)
    DOUBLE          reduce using rule 207 (annotationName -> Identifier expt_42 .)
    Identifier      reduce using rule 207 (annotationName -> Identifier expt_42 .)
    PACKAGE         reduce using rule 207 (annotationName -> Identifier expt_42 .)
    RPAREN          reduce using rule 207 (annotationName -> Identifier expt_42 .)
    COMMA           reduce using rule 207 (annotationName -> Identifier expt_42 .)
    BRPAREN         reduce using rule 207 (annotationName -> Identifier expt_42 .)
    NATIVE          reduce using rule 207 (annotationName -> Identifier expt_42 .)
    SYNCHRONIZED    reduce using rule 207 (annotationName -> Identifier expt_42 .)
    TRANSIENT       reduce using rule 207 (annotationName -> Identifier expt_42 .)
    VOLATILE        reduce using rule 207 (annotationName -> Identifier expt_42 .)
    VOID            reduce using rule 207 (annotationName -> Identifier expt_42 .)
    LESS            reduce using rule 207 (annotationName -> Identifier expt_42 .)
    SEMI            reduce using rule 207 (annotationName -> Identifier expt_42 .)
    DOT             shift and go to state 80


state 79

    (520) expt_42 -> DOT Identifier .

    DOT             reduce using rule 520 (expt_42 -> DOT Identifier .)
    FLPAREN         reduce using rule 520 (expt_42 -> DOT Identifier .)
    LPAREN          reduce using rule 520 (expt_42 -> DOT Identifier .)
    OP_INC          reduce using rule 520 (expt_42 -> DOT Identifier .)
    OP_DEC          reduce using rule 520 (expt_42 -> DOT Identifier .)
    MULT            reduce using rule 520 (expt_42 -> DOT Identifier .)
    SLASH           reduce using rule 520 (expt_42 -> DOT Identifier .)
    PERCENT         reduce using rule 520 (expt_42 -> DOT Identifier .)
    PLUS            reduce using rule 520 (expt_42 -> DOT Identifier .)
    DASH            reduce using rule 520 (expt_42 -> DOT Identifier .)
    OP_SHR          reduce using rule 520 (expt_42 -> DOT Identifier .)
    OP_SHL          reduce using rule 520 (expt_42 -> DOT Identifier .)
    OP_SHRR         reduce using rule 520 (expt_42 -> DOT Identifier .)
    OP_LE           reduce using rule 520 (expt_42 -> DOT Identifier .)
    OP_GE           reduce using rule 520 (expt_42 -> DOT Identifier .)
    LESS            reduce using rule 520 (expt_42 -> DOT Identifier .)
    MORE            reduce using rule 520 (expt_42 -> DOT Identifier .)
    INSTANCEOF      reduce using rule 520 (expt_42 -> DOT Identifier .)
    OP_EQ           reduce using rule 520 (expt_42 -> DOT Identifier .)
    OP_NE           reduce using rule 520 (expt_42 -> DOT Identifier .)
    AND             reduce using rule 520 (expt_42 -> DOT Identifier .)
    CARET           reduce using rule 520 (expt_42 -> DOT Identifier .)
    VERTICAL        reduce using rule 520 (expt_42 -> DOT Identifier .)
    OP_LAND         reduce using rule 520 (expt_42 -> DOT Identifier .)
    OP_LOR          reduce using rule 520 (expt_42 -> DOT Identifier .)
    QUES            reduce using rule 520 (expt_42 -> DOT Identifier .)
    EQUALS          reduce using rule 520 (expt_42 -> DOT Identifier .)
    ASS_ADD         reduce using rule 520 (expt_42 -> DOT Identifier .)
    ASS_SUB         reduce using rule 520 (expt_42 -> DOT Identifier .)
    ASS_MUL         reduce using rule 520 (expt_42 -> DOT Identifier .)
    ASS_DIV         reduce using rule 520 (expt_42 -> DOT Identifier .)
    ASS_AND         reduce using rule 520 (expt_42 -> DOT Identifier .)
    ASS_OR          reduce using rule 520 (expt_42 -> DOT Identifier .)
    ASS_XOR         reduce using rule 520 (expt_42 -> DOT Identifier .)
    ASS_MOD         reduce using rule 520 (expt_42 -> DOT Identifier .)
    ASS_SHL         reduce using rule 520 (expt_42 -> DOT Identifier .)
    ASS_SHRR        reduce using rule 520 (expt_42 -> DOT Identifier .)
    ASS_SHR         reduce using rule 520 (expt_42 -> DOT Identifier .)
    COLON           reduce using rule 520 (expt_42 -> DOT Identifier .)
    SEMI            reduce using rule 520 (expt_42 -> DOT Identifier .)
    COMMA           reduce using rule 520 (expt_42 -> DOT Identifier .)
    BLPAREN         reduce using rule 520 (expt_42 -> DOT Identifier .)
    RPAREN          reduce using rule 520 (expt_42 -> DOT Identifier .)
    BRPAREN         reduce using rule 520 (expt_42 -> DOT Identifier .)
    FRPAREN         reduce using rule 520 (expt_42 -> DOT Identifier .)
    AT              reduce using rule 520 (expt_42 -> DOT Identifier .)
    PACKAGE         reduce using rule 520 (expt_42 -> DOT Identifier .)
    PUBLIC          reduce using rule 520 (expt_42 -> DOT Identifier .)
    PROTECTED       reduce using rule 520 (expt_42 -> DOT Identifier .)
    PRIVATE         reduce using rule 520 (expt_42 -> DOT Identifier .)
    ABSTRACT        reduce using rule 520 (expt_42 -> DOT Identifier .)
    STATIC          reduce using rule 520 (expt_42 -> DOT Identifier .)
    FINAL           reduce using rule 520 (expt_42 -> DOT Identifier .)
    STRICTFP        reduce using rule 520 (expt_42 -> DOT Identifier .)
    CLASS           reduce using rule 520 (expt_42 -> DOT Identifier .)
    ENUM            reduce using rule 520 (expt_42 -> DOT Identifier .)
    INTERFACE       reduce using rule 520 (expt_42 -> DOT Identifier .)
    Identifier      reduce using rule 520 (expt_42 -> DOT Identifier .)
    NATIVE          reduce using rule 520 (expt_42 -> DOT Identifier .)
    SYNCHRONIZED    reduce using rule 520 (expt_42 -> DOT Identifier .)
    TRANSIENT       reduce using rule 520 (expt_42 -> DOT Identifier .)
    VOLATILE        reduce using rule 520 (expt_42 -> DOT Identifier .)
    BOOLEAN         reduce using rule 520 (expt_42 -> DOT Identifier .)
    CHAR            reduce using rule 520 (expt_42 -> DOT Identifier .)
    BYTE            reduce using rule 520 (expt_42 -> DOT Identifier .)
    SHORT           reduce using rule 520 (expt_42 -> DOT Identifier .)
    INT             reduce using rule 520 (expt_42 -> DOT Identifier .)
    LONG            reduce using rule 520 (expt_42 -> DOT Identifier .)
    FLOAT           reduce using rule 520 (expt_42 -> DOT Identifier .)
    DOUBLE          reduce using rule 520 (expt_42 -> DOT Identifier .)
    VOID            reduce using rule 520 (expt_42 -> DOT Identifier .)


state 80

    (521) expt_42 -> expt_42 DOT . Identifier

    Identifier      shift and go to state 158


state 81

    (442) expt_1 -> expt_1 typeDeclaration .

    SEMI            reduce using rule 442 (expt_1 -> expt_1 typeDeclaration .)
    PUBLIC          reduce using rule 442 (expt_1 -> expt_1 typeDeclaration .)
    PROTECTED       reduce using rule 442 (expt_1 -> expt_1 typeDeclaration .)
    PRIVATE         reduce using rule 442 (expt_1 -> expt_1 typeDeclaration .)
    ABSTRACT        reduce using rule 442 (expt_1 -> expt_1 typeDeclaration .)
    STATIC          reduce using rule 442 (expt_1 -> expt_1 typeDeclaration .)
    FINAL           reduce using rule 442 (expt_1 -> expt_1 typeDeclaration .)
    STRICTFP        reduce using rule 442 (expt_1 -> expt_1 typeDeclaration .)
    CLASS           reduce using rule 442 (expt_1 -> expt_1 typeDeclaration .)
    ENUM            reduce using rule 442 (expt_1 -> expt_1 typeDeclaration .)
    INTERFACE       reduce using rule 442 (expt_1 -> expt_1 typeDeclaration .)
    AT              reduce using rule 442 (expt_1 -> expt_1 typeDeclaration .)
    $end            reduce using rule 442 (expt_1 -> expt_1 typeDeclaration .)


state 82

    (14) importDeclaration -> IMPORT qualifiedName SEMI .

    IMPORT          reduce using rule 14 (importDeclaration -> IMPORT qualifiedName SEMI .)
    SEMI            reduce using rule 14 (importDeclaration -> IMPORT qualifiedName SEMI .)
    PUBLIC          reduce using rule 14 (importDeclaration -> IMPORT qualifiedName SEMI .)
    PROTECTED       reduce using rule 14 (importDeclaration -> IMPORT qualifiedName SEMI .)
    PRIVATE         reduce using rule 14 (importDeclaration -> IMPORT qualifiedName SEMI .)
    ABSTRACT        reduce using rule 14 (importDeclaration -> IMPORT qualifiedName SEMI .)
    STATIC          reduce using rule 14 (importDeclaration -> IMPORT qualifiedName SEMI .)
    FINAL           reduce using rule 14 (importDeclaration -> IMPORT qualifiedName SEMI .)
    STRICTFP        reduce using rule 14 (importDeclaration -> IMPORT qualifiedName SEMI .)
    CLASS           reduce using rule 14 (importDeclaration -> IMPORT qualifiedName SEMI .)
    ENUM            reduce using rule 14 (importDeclaration -> IMPORT qualifiedName SEMI .)
    INTERFACE       reduce using rule 14 (importDeclaration -> IMPORT qualifiedName SEMI .)
    AT              reduce using rule 14 (importDeclaration -> IMPORT qualifiedName SEMI .)
    $end            reduce using rule 14 (importDeclaration -> IMPORT qualifiedName SEMI .)


state 83

    (13) importDeclaration -> IMPORT qualifiedName expt_4 . SEMI

    SEMI            shift and go to state 159


state 84

    (448) expt_4 -> empty .

    SEMI            reduce using rule 448 (expt_4 -> empty .)


state 85

    (447) expt_4 -> DOT . MULT

    MULT            shift and go to state 160


state 86

    (11) importDeclaration -> IMPORT expt_3 qualifiedName . expt_4 SEMI
    (12) importDeclaration -> IMPORT expt_3 qualifiedName . SEMI
    (447) expt_4 -> . DOT MULT
    (448) expt_4 -> . empty
    (584) empty -> .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 161
    DOT             shift and go to state 85

  ! SEMI            [ reduce using rule 584 (empty -> .) ]

    expt_4                         shift and go to state 162
    empty                          shift and go to state 84

state 87

    (456) expt_9 -> IMPLEMENTS . typeList
    (75) typeList -> . type expt_22
    (76) typeList -> . type empty
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    typeList                       shift and go to state 163
    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    type                           shift and go to state 167

state 88

    (47) enumDeclaration -> ENUM Identifier expt_9 . enumBody
    (49) enumBody -> . BLPAREN expt_13 expt_14 expt_15 BRPAREN
    (50) enumBody -> . BLPAREN expt_13 expt_14 empty BRPAREN
    (51) enumBody -> . BLPAREN expt_13 empty expt_15 BRPAREN
    (52) enumBody -> . BLPAREN expt_13 empty empty BRPAREN
    (53) enumBody -> . BLPAREN empty expt_14 expt_15 BRPAREN
    (54) enumBody -> . BLPAREN empty expt_14 empty BRPAREN
    (55) enumBody -> . BLPAREN empty empty expt_15 BRPAREN
    (56) enumBody -> . BLPAREN empty empty empty BRPAREN

    BLPAREN         shift and go to state 169

    enumBody                       shift and go to state 168

state 89

    (48) enumDeclaration -> ENUM Identifier empty . enumBody
    (457) expt_9 -> empty .
    (49) enumBody -> . BLPAREN expt_13 expt_14 expt_15 BRPAREN
    (50) enumBody -> . BLPAREN expt_13 expt_14 empty BRPAREN
    (51) enumBody -> . BLPAREN expt_13 empty expt_15 BRPAREN
    (52) enumBody -> . BLPAREN expt_13 empty empty BRPAREN
    (53) enumBody -> . BLPAREN empty expt_14 expt_15 BRPAREN
    (54) enumBody -> . BLPAREN empty expt_14 empty BRPAREN
    (55) enumBody -> . BLPAREN empty empty expt_15 BRPAREN
    (56) enumBody -> . BLPAREN empty empty empty BRPAREN

  ! shift/reduce conflict for BLPAREN resolved as shift
    BLPAREN         shift and go to state 169

  ! BLPAREN         [ reduce using rule 457 (expt_9 -> empty .) ]

    enumBody                       shift and go to state 170

state 90

    (403) expr_0 -> packageDeclaration expt_0 expt_1 .
    (442) expt_1 -> expt_1 . typeDeclaration
    (15) typeDeclaration -> . classOrInterfaceDeclaration
    (16) typeDeclaration -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (584) empty -> .
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    $end            reduce using rule 403 (expr_0 -> packageDeclaration expt_0 expt_1 .)
    SEMI            shift and go to state 51
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 19
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    typeDeclaration                shift and go to state 81
    normalInterfaceDeclaration     shift and go to state 18
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    interfaceDeclaration           shift and go to state 24
    empty                          shift and go to state 25
    expr_1                         shift and go to state 26
    enumDeclaration                shift and go to state 27
    classOrInterfaceDeclaration    shift and go to state 54
    classDeclaration               shift and go to state 31
    annotation                     shift and go to state 56
    classOrInterfaceModifier       shift and go to state 34
    annotationTypeDeclaration      shift and go to state 36
    classOrInterfaceModifiers      shift and go to state 37

state 91

    (219) annotationTypeDeclaration -> AT INTERFACE Identifier . annotationTypeBody
    (220) annotationTypeBody -> . BLPAREN expt_47 BRPAREN
    (221) annotationTypeBody -> . BLPAREN empty BRPAREN

    BLPAREN         shift and go to state 172

    annotationTypeBody             shift and go to state 171

state 92

    (41) typeParameters -> LESS . typeParameter expt_10 MORE
    (42) typeParameters -> LESS . typeParameter empty MORE
    (43) typeParameter -> . Identifier expt_11
    (44) typeParameter -> . Identifier empty

    Identifier      shift and go to state 174

    typeParameter                  shift and go to state 173

state 93

    (33) normalClassDeclaration -> CLASS Identifier typeParameters . expt_8 expt_9 classBody
    (34) normalClassDeclaration -> CLASS Identifier typeParameters . expt_8 empty classBody
    (35) normalClassDeclaration -> CLASS Identifier typeParameters . empty expt_9 classBody
    (36) normalClassDeclaration -> CLASS Identifier typeParameters . empty empty classBody
    (455) expt_8 -> . EXTENDS type
    (584) empty -> .

    EXTENDS         shift and go to state 176
    IMPLEMENTS      reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)

    expt_8                         shift and go to state 175
    empty                          shift and go to state 177

state 94

    (37) normalClassDeclaration -> CLASS Identifier empty . expt_8 expt_9 classBody
    (38) normalClassDeclaration -> CLASS Identifier empty . expt_8 empty classBody
    (39) normalClassDeclaration -> CLASS Identifier empty . empty expt_9 classBody
    (40) normalClassDeclaration -> CLASS Identifier empty . empty empty classBody
    (455) expt_8 -> . EXTENDS type
    (584) empty -> .

    EXTENDS         shift and go to state 176
    IMPLEMENTS      reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)

    expt_8                         shift and go to state 178
    empty                          shift and go to state 179

state 95

    (71) normalInterfaceDeclaration -> INTERFACE Identifier typeParameters . expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> INTERFACE Identifier typeParameters . empty interfaceBody
    (478) expt_21 -> . EXTENDS typeList
    (479) expt_21 -> . empty
    (584) empty -> .

    EXTENDS         shift and go to state 181
    BLPAREN         reduce using rule 584 (empty -> .)

    empty                          shift and go to state 182
    expt_21                        shift and go to state 180

state 96

    (73) normalInterfaceDeclaration -> INTERFACE Identifier empty . expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> INTERFACE Identifier empty . empty interfaceBody
    (478) expt_21 -> . EXTENDS typeList
    (479) expt_21 -> . empty
    (584) empty -> .

    EXTENDS         shift and go to state 181
    BLPAREN         reduce using rule 584 (empty -> .)

    expt_21                        shift and go to state 183
    empty                          shift and go to state 184

state 97

    (353) unaryExpressionNotPlusMinus -> EXCLAMATION . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    unaryExpression                shift and go to state 185
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    parExpression                  shift and go to state 150
    primary                        shift and go to state 125
    primitiveType                  shift and go to state 138
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    FloatingPointLiteral           shift and go to state 134
    integerLiteral                 shift and go to state 111

state 98

    (357) primary -> VOID . DOT CLASS

    DOT             shift and go to state 187


state 99

    (314) conditionalOrExpression -> conditionalAndExpression . expt_63
    (315) conditionalOrExpression -> conditionalAndExpression .
    (552) expt_63 -> . OP_LOR conditionalAndExpression
    (553) expt_63 -> . expt_63 OP_LOR conditionalAndExpression

    QUES            reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    EQUALS          reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_ADD         reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_SUB         reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_MUL         reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_DIV         reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_AND         reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_OR          reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_XOR         reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_MOD         reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_SHL         reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_SHRR        reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_SHR         reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    COMMA           reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    RPAREN          reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    SEMI            reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    BRPAREN         reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    COLON           reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    FRPAREN         reduce using rule 315 (conditionalOrExpression -> conditionalAndExpression .)
    OP_LOR          shift and go to state 189

    expt_63                        shift and go to state 188

state 100

    (199) booleanLiteral -> TRUE .

    OP_INC          reduce using rule 199 (booleanLiteral -> TRUE .)
    OP_DEC          reduce using rule 199 (booleanLiteral -> TRUE .)
    FLPAREN         reduce using rule 199 (booleanLiteral -> TRUE .)
    DOT             reduce using rule 199 (booleanLiteral -> TRUE .)
    MULT            reduce using rule 199 (booleanLiteral -> TRUE .)
    SLASH           reduce using rule 199 (booleanLiteral -> TRUE .)
    PERCENT         reduce using rule 199 (booleanLiteral -> TRUE .)
    PLUS            reduce using rule 199 (booleanLiteral -> TRUE .)
    DASH            reduce using rule 199 (booleanLiteral -> TRUE .)
    OP_SHR          reduce using rule 199 (booleanLiteral -> TRUE .)
    OP_SHL          reduce using rule 199 (booleanLiteral -> TRUE .)
    OP_SHRR         reduce using rule 199 (booleanLiteral -> TRUE .)
    OP_LE           reduce using rule 199 (booleanLiteral -> TRUE .)
    OP_GE           reduce using rule 199 (booleanLiteral -> TRUE .)
    LESS            reduce using rule 199 (booleanLiteral -> TRUE .)
    MORE            reduce using rule 199 (booleanLiteral -> TRUE .)
    INSTANCEOF      reduce using rule 199 (booleanLiteral -> TRUE .)
    OP_EQ           reduce using rule 199 (booleanLiteral -> TRUE .)
    OP_NE           reduce using rule 199 (booleanLiteral -> TRUE .)
    AND             reduce using rule 199 (booleanLiteral -> TRUE .)
    CARET           reduce using rule 199 (booleanLiteral -> TRUE .)
    VERTICAL        reduce using rule 199 (booleanLiteral -> TRUE .)
    OP_LAND         reduce using rule 199 (booleanLiteral -> TRUE .)
    OP_LOR          reduce using rule 199 (booleanLiteral -> TRUE .)
    QUES            reduce using rule 199 (booleanLiteral -> TRUE .)
    RPAREN          reduce using rule 199 (booleanLiteral -> TRUE .)
    COMMA           reduce using rule 199 (booleanLiteral -> TRUE .)
    BRPAREN         reduce using rule 199 (booleanLiteral -> TRUE .)
    EQUALS          reduce using rule 199 (booleanLiteral -> TRUE .)
    ASS_ADD         reduce using rule 199 (booleanLiteral -> TRUE .)
    ASS_SUB         reduce using rule 199 (booleanLiteral -> TRUE .)
    ASS_MUL         reduce using rule 199 (booleanLiteral -> TRUE .)
    ASS_DIV         reduce using rule 199 (booleanLiteral -> TRUE .)
    ASS_AND         reduce using rule 199 (booleanLiteral -> TRUE .)
    ASS_OR          reduce using rule 199 (booleanLiteral -> TRUE .)
    ASS_XOR         reduce using rule 199 (booleanLiteral -> TRUE .)
    ASS_MOD         reduce using rule 199 (booleanLiteral -> TRUE .)
    ASS_SHL         reduce using rule 199 (booleanLiteral -> TRUE .)
    ASS_SHRR        reduce using rule 199 (booleanLiteral -> TRUE .)
    ASS_SHR         reduce using rule 199 (booleanLiteral -> TRUE .)
    FRPAREN         reduce using rule 199 (booleanLiteral -> TRUE .)
    COLON           reduce using rule 199 (booleanLiteral -> TRUE .)
    SEMI            reduce using rule 199 (booleanLiteral -> TRUE .)


state 101

    (205) annotation -> AT annotationName LPAREN RPAREN .

    PUBLIC          reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    PROTECTED       reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    PRIVATE         reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    STATIC          reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    ABSTRACT        reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    FINAL           reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    NATIVE          reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    SYNCHRONIZED    reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    TRANSIENT       reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    VOLATILE        reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    STRICTFP        reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    AT              reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    VOID            reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    Identifier      reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    LESS            reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    INTERFACE       reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    CLASS           reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    ENUM            reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    BOOLEAN         reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    CHAR            reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    BYTE            reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    SHORT           reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    INT             reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    LONG            reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    FLOAT           reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    DOUBLE          reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    COMMA           reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    BRPAREN         reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    PACKAGE         reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    RPAREN          reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)
    SEMI            reduce using rule 205 (annotation -> AT annotationName LPAREN RPAREN .)


state 102

    (163) primitiveType -> LONG .

    DOT             reduce using rule 163 (primitiveType -> LONG .)
    FLPAREN         reduce using rule 163 (primitiveType -> LONG .)
    COMMA           reduce using rule 163 (primitiveType -> LONG .)
    BLPAREN         reduce using rule 163 (primitiveType -> LONG .)
    Identifier      reduce using rule 163 (primitiveType -> LONG .)
    RPAREN          reduce using rule 163 (primitiveType -> LONG .)
    OP_ARRAY        reduce using rule 163 (primitiveType -> LONG .)
    MORE            reduce using rule 163 (primitiveType -> LONG .)
    LPAREN          reduce using rule 163 (primitiveType -> LONG .)
    OP_EQ           reduce using rule 163 (primitiveType -> LONG .)
    OP_NE           reduce using rule 163 (primitiveType -> LONG .)
    AND             reduce using rule 163 (primitiveType -> LONG .)
    CARET           reduce using rule 163 (primitiveType -> LONG .)
    VERTICAL        reduce using rule 163 (primitiveType -> LONG .)
    OP_LAND         reduce using rule 163 (primitiveType -> LONG .)
    OP_LOR          reduce using rule 163 (primitiveType -> LONG .)
    QUES            reduce using rule 163 (primitiveType -> LONG .)
    BRPAREN         reduce using rule 163 (primitiveType -> LONG .)
    EQUALS          reduce using rule 163 (primitiveType -> LONG .)
    ASS_ADD         reduce using rule 163 (primitiveType -> LONG .)
    ASS_SUB         reduce using rule 163 (primitiveType -> LONG .)
    ASS_MUL         reduce using rule 163 (primitiveType -> LONG .)
    ASS_DIV         reduce using rule 163 (primitiveType -> LONG .)
    ASS_AND         reduce using rule 163 (primitiveType -> LONG .)
    ASS_OR          reduce using rule 163 (primitiveType -> LONG .)
    ASS_XOR         reduce using rule 163 (primitiveType -> LONG .)
    ASS_MOD         reduce using rule 163 (primitiveType -> LONG .)
    ASS_SHL         reduce using rule 163 (primitiveType -> LONG .)
    ASS_SHRR        reduce using rule 163 (primitiveType -> LONG .)
    ASS_SHR         reduce using rule 163 (primitiveType -> LONG .)
    FRPAREN         reduce using rule 163 (primitiveType -> LONG .)
    COLON           reduce using rule 163 (primitiveType -> LONG .)
    SEMI            reduce using rule 163 (primitiveType -> LONG .)
    IMPLEMENTS      reduce using rule 163 (primitiveType -> LONG .)


state 103

    (197) literal -> booleanLiteral .

    OP_INC          reduce using rule 197 (literal -> booleanLiteral .)
    OP_DEC          reduce using rule 197 (literal -> booleanLiteral .)
    FLPAREN         reduce using rule 197 (literal -> booleanLiteral .)
    DOT             reduce using rule 197 (literal -> booleanLiteral .)
    MULT            reduce using rule 197 (literal -> booleanLiteral .)
    SLASH           reduce using rule 197 (literal -> booleanLiteral .)
    PERCENT         reduce using rule 197 (literal -> booleanLiteral .)
    PLUS            reduce using rule 197 (literal -> booleanLiteral .)
    DASH            reduce using rule 197 (literal -> booleanLiteral .)
    OP_SHR          reduce using rule 197 (literal -> booleanLiteral .)
    OP_SHL          reduce using rule 197 (literal -> booleanLiteral .)
    OP_SHRR         reduce using rule 197 (literal -> booleanLiteral .)
    OP_LE           reduce using rule 197 (literal -> booleanLiteral .)
    OP_GE           reduce using rule 197 (literal -> booleanLiteral .)
    LESS            reduce using rule 197 (literal -> booleanLiteral .)
    MORE            reduce using rule 197 (literal -> booleanLiteral .)
    INSTANCEOF      reduce using rule 197 (literal -> booleanLiteral .)
    OP_EQ           reduce using rule 197 (literal -> booleanLiteral .)
    OP_NE           reduce using rule 197 (literal -> booleanLiteral .)
    AND             reduce using rule 197 (literal -> booleanLiteral .)
    CARET           reduce using rule 197 (literal -> booleanLiteral .)
    VERTICAL        reduce using rule 197 (literal -> booleanLiteral .)
    OP_LAND         reduce using rule 197 (literal -> booleanLiteral .)
    OP_LOR          reduce using rule 197 (literal -> booleanLiteral .)
    QUES            reduce using rule 197 (literal -> booleanLiteral .)
    EQUALS          reduce using rule 197 (literal -> booleanLiteral .)
    ASS_ADD         reduce using rule 197 (literal -> booleanLiteral .)
    ASS_SUB         reduce using rule 197 (literal -> booleanLiteral .)
    ASS_MUL         reduce using rule 197 (literal -> booleanLiteral .)
    ASS_DIV         reduce using rule 197 (literal -> booleanLiteral .)
    ASS_AND         reduce using rule 197 (literal -> booleanLiteral .)
    ASS_OR          reduce using rule 197 (literal -> booleanLiteral .)
    ASS_XOR         reduce using rule 197 (literal -> booleanLiteral .)
    ASS_MOD         reduce using rule 197 (literal -> booleanLiteral .)
    ASS_SHL         reduce using rule 197 (literal -> booleanLiteral .)
    ASS_SHRR        reduce using rule 197 (literal -> booleanLiteral .)
    ASS_SHR         reduce using rule 197 (literal -> booleanLiteral .)
    SEMI            reduce using rule 197 (literal -> booleanLiteral .)
    COLON           reduce using rule 197 (literal -> booleanLiteral .)
    RPAREN          reduce using rule 197 (literal -> booleanLiteral .)
    FRPAREN         reduce using rule 197 (literal -> booleanLiteral .)
    COMMA           reduce using rule 197 (literal -> booleanLiteral .)
    BRPAREN         reduce using rule 197 (literal -> booleanLiteral .)


state 104

    (343) unaryExpression -> PLUS . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    unaryExpression                shift and go to state 190
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    parExpression                  shift and go to state 150
    primary                        shift and go to state 125
    primitiveType                  shift and go to state 138
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    FloatingPointLiteral           shift and go to state 134
    integerLiteral                 shift and go to state 111

state 105

    (318) inclusiveOrExpression -> exclusiveOrExpression . expt_65
    (319) inclusiveOrExpression -> exclusiveOrExpression .
    (556) expt_65 -> . VERTICAL exclusiveOrExpression
    (557) expt_65 -> . expt_65 VERTICAL exclusiveOrExpression

    OP_LAND         reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    OP_LOR          reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    QUES            reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    RPAREN          reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    COMMA           reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    BRPAREN         reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    EQUALS          reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_ADD         reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_SUB         reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_MUL         reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_DIV         reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_AND         reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_OR          reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_XOR         reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_MOD         reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_SHL         reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_SHRR        reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_SHR         reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    FRPAREN         reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    COLON           reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    SEMI            reduce using rule 319 (inclusiveOrExpression -> exclusiveOrExpression .)
    VERTICAL        shift and go to state 191

    expt_65                        shift and go to state 192

state 106

    (344) unaryExpression -> DASH . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    unaryExpression                shift and go to state 193
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    parExpression                  shift and go to state 150
    primary                        shift and go to state 125
    primitiveType                  shift and go to state 138
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    FloatingPointLiteral           shift and go to state 134
    integerLiteral                 shift and go to state 111

state 107

    (326) instanceOfExpression -> relationalExpression . INSTANCEOF type
    (327) instanceOfExpression -> relationalExpression .

    INSTANCEOF      shift and go to state 194
    OP_EQ           reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    OP_NE           reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    AND             reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    CARET           reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    VERTICAL        reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    OP_LAND         reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    OP_LOR          reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    QUES            reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    RPAREN          reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    COMMA           reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    BRPAREN         reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    EQUALS          reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    ASS_ADD         reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    ASS_SUB         reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    ASS_MUL         reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    ASS_DIV         reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    ASS_AND         reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    ASS_OR          reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    ASS_XOR         reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    ASS_MOD         reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    ASS_SHL         reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    ASS_SHRR        reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    ASS_SHR         reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    FRPAREN         reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    COLON           reduce using rule 327 (instanceOfExpression -> relationalExpression .)
    SEMI            reduce using rule 327 (instanceOfExpression -> relationalExpression .)


state 108

    (324) equalityExpression -> instanceOfExpression . expt_68
    (325) equalityExpression -> instanceOfExpression .
    (562) expt_68 -> . expr_11 instanceOfExpression
    (563) expt_68 -> . expt_68 expr_11 instanceOfExpression
    (422) expr_11 -> . OP_EQ
    (423) expr_11 -> . OP_NE

    AND             reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    CARET           reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    VERTICAL        reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    OP_LAND         reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    OP_LOR          reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    QUES            reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    EQUALS          reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    ASS_ADD         reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    ASS_SUB         reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    ASS_MUL         reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    ASS_DIV         reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    ASS_AND         reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    ASS_OR          reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    ASS_XOR         reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    ASS_MOD         reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    ASS_SHL         reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    ASS_SHRR        reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    ASS_SHR         reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    COMMA           reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    RPAREN          reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    FRPAREN         reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    COLON           reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    BRPAREN         reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    SEMI            reduce using rule 325 (equalityExpression -> instanceOfExpression .)
    OP_EQ           shift and go to state 198
    OP_NE           shift and go to state 195

    expt_68                        shift and go to state 196
    expr_11                        shift and go to state 197

state 109

    (367) primary -> THIS . expt_42 identifierSuffix
    (368) primary -> THIS . expt_42
    (369) primary -> THIS . identifierSuffix
    (370) primary -> THIS .
    (520) expt_42 -> . DOT Identifier
    (521) expt_42 -> . expt_42 DOT Identifier
    (372) identifierSuffix -> . suffixStatements DOT CLASS
    (373) identifierSuffix -> . suffixExprStatements
    (374) identifierSuffix -> . arguments
    (375) identifierSuffix -> . DOT CLASS
    (376) identifierSuffix -> . DOT explicitGenericInvocation
    (377) identifierSuffix -> . DOT THIS
    (378) identifierSuffix -> . DOT SUPER arguments
    (379) identifierSuffix -> . DOT NEW innerCreator
    (433) suffixStatements -> . FLPAREN FRPAREN
    (434) suffixStatements -> . suffixStatements FLPAREN FRPAREN
    (435) suffixExprStatements -> . FLPAREN expression FRPAREN
    (436) suffixExprStatements -> . suffixExprStatements FLPAREN expression FRPAREN
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 370 (primary -> THIS .)
    OP_DEC          reduce using rule 370 (primary -> THIS .)
    MULT            reduce using rule 370 (primary -> THIS .)
    SLASH           reduce using rule 370 (primary -> THIS .)
    PERCENT         reduce using rule 370 (primary -> THIS .)
    PLUS            reduce using rule 370 (primary -> THIS .)
    DASH            reduce using rule 370 (primary -> THIS .)
    OP_SHR          reduce using rule 370 (primary -> THIS .)
    OP_SHL          reduce using rule 370 (primary -> THIS .)
    OP_SHRR         reduce using rule 370 (primary -> THIS .)
    OP_LE           reduce using rule 370 (primary -> THIS .)
    OP_GE           reduce using rule 370 (primary -> THIS .)
    LESS            reduce using rule 370 (primary -> THIS .)
    MORE            reduce using rule 370 (primary -> THIS .)
    INSTANCEOF      reduce using rule 370 (primary -> THIS .)
    OP_EQ           reduce using rule 370 (primary -> THIS .)
    OP_NE           reduce using rule 370 (primary -> THIS .)
    AND             reduce using rule 370 (primary -> THIS .)
    CARET           reduce using rule 370 (primary -> THIS .)
    VERTICAL        reduce using rule 370 (primary -> THIS .)
    OP_LAND         reduce using rule 370 (primary -> THIS .)
    OP_LOR          reduce using rule 370 (primary -> THIS .)
    QUES            reduce using rule 370 (primary -> THIS .)
    RPAREN          reduce using rule 370 (primary -> THIS .)
    COMMA           reduce using rule 370 (primary -> THIS .)
    BRPAREN         reduce using rule 370 (primary -> THIS .)
    EQUALS          reduce using rule 370 (primary -> THIS .)
    ASS_ADD         reduce using rule 370 (primary -> THIS .)
    ASS_SUB         reduce using rule 370 (primary -> THIS .)
    ASS_MUL         reduce using rule 370 (primary -> THIS .)
    ASS_DIV         reduce using rule 370 (primary -> THIS .)
    ASS_AND         reduce using rule 370 (primary -> THIS .)
    ASS_OR          reduce using rule 370 (primary -> THIS .)
    ASS_XOR         reduce using rule 370 (primary -> THIS .)
    ASS_MOD         reduce using rule 370 (primary -> THIS .)
    ASS_SHL         reduce using rule 370 (primary -> THIS .)
    ASS_SHRR        reduce using rule 370 (primary -> THIS .)
    ASS_SHR         reduce using rule 370 (primary -> THIS .)
    FRPAREN         reduce using rule 370 (primary -> THIS .)
    COLON           reduce using rule 370 (primary -> THIS .)
    SEMI            reduce using rule 370 (primary -> THIS .)
    DOT             shift and go to state 205
    FLPAREN         shift and go to state 201
    LPAREN          shift and go to state 204

  ! FLPAREN         [ reduce using rule 370 (primary -> THIS .) ]
  ! DOT             [ reduce using rule 370 (primary -> THIS .) ]

    identifierSuffix               shift and go to state 199
    suffixStatements               shift and go to state 200
    suffixExprStatements           shift and go to state 202
    arguments                      shift and go to state 203
    expt_42                        shift and go to state 206

state 110

    (165) primitiveType -> DOUBLE .

    DOT             reduce using rule 165 (primitiveType -> DOUBLE .)
    FLPAREN         reduce using rule 165 (primitiveType -> DOUBLE .)
    COMMA           reduce using rule 165 (primitiveType -> DOUBLE .)
    BLPAREN         reduce using rule 165 (primitiveType -> DOUBLE .)
    Identifier      reduce using rule 165 (primitiveType -> DOUBLE .)
    RPAREN          reduce using rule 165 (primitiveType -> DOUBLE .)
    OP_ARRAY        reduce using rule 165 (primitiveType -> DOUBLE .)
    MORE            reduce using rule 165 (primitiveType -> DOUBLE .)
    LPAREN          reduce using rule 165 (primitiveType -> DOUBLE .)
    OP_EQ           reduce using rule 165 (primitiveType -> DOUBLE .)
    OP_NE           reduce using rule 165 (primitiveType -> DOUBLE .)
    AND             reduce using rule 165 (primitiveType -> DOUBLE .)
    CARET           reduce using rule 165 (primitiveType -> DOUBLE .)
    VERTICAL        reduce using rule 165 (primitiveType -> DOUBLE .)
    OP_LAND         reduce using rule 165 (primitiveType -> DOUBLE .)
    OP_LOR          reduce using rule 165 (primitiveType -> DOUBLE .)
    QUES            reduce using rule 165 (primitiveType -> DOUBLE .)
    BRPAREN         reduce using rule 165 (primitiveType -> DOUBLE .)
    EQUALS          reduce using rule 165 (primitiveType -> DOUBLE .)
    ASS_ADD         reduce using rule 165 (primitiveType -> DOUBLE .)
    ASS_SUB         reduce using rule 165 (primitiveType -> DOUBLE .)
    ASS_MUL         reduce using rule 165 (primitiveType -> DOUBLE .)
    ASS_DIV         reduce using rule 165 (primitiveType -> DOUBLE .)
    ASS_AND         reduce using rule 165 (primitiveType -> DOUBLE .)
    ASS_OR          reduce using rule 165 (primitiveType -> DOUBLE .)
    ASS_XOR         reduce using rule 165 (primitiveType -> DOUBLE .)
    ASS_MOD         reduce using rule 165 (primitiveType -> DOUBLE .)
    ASS_SHL         reduce using rule 165 (primitiveType -> DOUBLE .)
    ASS_SHRR        reduce using rule 165 (primitiveType -> DOUBLE .)
    ASS_SHR         reduce using rule 165 (primitiveType -> DOUBLE .)
    FRPAREN         reduce using rule 165 (primitiveType -> DOUBLE .)
    COLON           reduce using rule 165 (primitiveType -> DOUBLE .)
    SEMI            reduce using rule 165 (primitiveType -> DOUBLE .)
    IMPLEMENTS      reduce using rule 165 (primitiveType -> DOUBLE .)


state 111

    (193) literal -> integerLiteral .

    OP_INC          reduce using rule 193 (literal -> integerLiteral .)
    OP_DEC          reduce using rule 193 (literal -> integerLiteral .)
    FLPAREN         reduce using rule 193 (literal -> integerLiteral .)
    DOT             reduce using rule 193 (literal -> integerLiteral .)
    MULT            reduce using rule 193 (literal -> integerLiteral .)
    SLASH           reduce using rule 193 (literal -> integerLiteral .)
    PERCENT         reduce using rule 193 (literal -> integerLiteral .)
    PLUS            reduce using rule 193 (literal -> integerLiteral .)
    DASH            reduce using rule 193 (literal -> integerLiteral .)
    OP_SHR          reduce using rule 193 (literal -> integerLiteral .)
    OP_SHL          reduce using rule 193 (literal -> integerLiteral .)
    OP_SHRR         reduce using rule 193 (literal -> integerLiteral .)
    OP_LE           reduce using rule 193 (literal -> integerLiteral .)
    OP_GE           reduce using rule 193 (literal -> integerLiteral .)
    LESS            reduce using rule 193 (literal -> integerLiteral .)
    MORE            reduce using rule 193 (literal -> integerLiteral .)
    INSTANCEOF      reduce using rule 193 (literal -> integerLiteral .)
    OP_EQ           reduce using rule 193 (literal -> integerLiteral .)
    OP_NE           reduce using rule 193 (literal -> integerLiteral .)
    AND             reduce using rule 193 (literal -> integerLiteral .)
    CARET           reduce using rule 193 (literal -> integerLiteral .)
    VERTICAL        reduce using rule 193 (literal -> integerLiteral .)
    OP_LAND         reduce using rule 193 (literal -> integerLiteral .)
    OP_LOR          reduce using rule 193 (literal -> integerLiteral .)
    QUES            reduce using rule 193 (literal -> integerLiteral .)
    EQUALS          reduce using rule 193 (literal -> integerLiteral .)
    ASS_ADD         reduce using rule 193 (literal -> integerLiteral .)
    ASS_SUB         reduce using rule 193 (literal -> integerLiteral .)
    ASS_MUL         reduce using rule 193 (literal -> integerLiteral .)
    ASS_DIV         reduce using rule 193 (literal -> integerLiteral .)
    ASS_AND         reduce using rule 193 (literal -> integerLiteral .)
    ASS_OR          reduce using rule 193 (literal -> integerLiteral .)
    ASS_XOR         reduce using rule 193 (literal -> integerLiteral .)
    ASS_MOD         reduce using rule 193 (literal -> integerLiteral .)
    ASS_SHL         reduce using rule 193 (literal -> integerLiteral .)
    ASS_SHRR        reduce using rule 193 (literal -> integerLiteral .)
    ASS_SHR         reduce using rule 193 (literal -> integerLiteral .)
    SEMI            reduce using rule 193 (literal -> integerLiteral .)
    COLON           reduce using rule 193 (literal -> integerLiteral .)
    RPAREN          reduce using rule 193 (literal -> integerLiteral .)
    FRPAREN         reduce using rule 193 (literal -> integerLiteral .)
    COMMA           reduce using rule 193 (literal -> integerLiteral .)
    BRPAREN         reduce using rule 193 (literal -> integerLiteral .)


state 112

    (161) primitiveType -> SHORT .

    DOT             reduce using rule 161 (primitiveType -> SHORT .)
    FLPAREN         reduce using rule 161 (primitiveType -> SHORT .)
    COMMA           reduce using rule 161 (primitiveType -> SHORT .)
    BLPAREN         reduce using rule 161 (primitiveType -> SHORT .)
    Identifier      reduce using rule 161 (primitiveType -> SHORT .)
    RPAREN          reduce using rule 161 (primitiveType -> SHORT .)
    OP_ARRAY        reduce using rule 161 (primitiveType -> SHORT .)
    MORE            reduce using rule 161 (primitiveType -> SHORT .)
    LPAREN          reduce using rule 161 (primitiveType -> SHORT .)
    OP_EQ           reduce using rule 161 (primitiveType -> SHORT .)
    OP_NE           reduce using rule 161 (primitiveType -> SHORT .)
    AND             reduce using rule 161 (primitiveType -> SHORT .)
    CARET           reduce using rule 161 (primitiveType -> SHORT .)
    VERTICAL        reduce using rule 161 (primitiveType -> SHORT .)
    OP_LAND         reduce using rule 161 (primitiveType -> SHORT .)
    OP_LOR          reduce using rule 161 (primitiveType -> SHORT .)
    QUES            reduce using rule 161 (primitiveType -> SHORT .)
    BRPAREN         reduce using rule 161 (primitiveType -> SHORT .)
    EQUALS          reduce using rule 161 (primitiveType -> SHORT .)
    ASS_ADD         reduce using rule 161 (primitiveType -> SHORT .)
    ASS_SUB         reduce using rule 161 (primitiveType -> SHORT .)
    ASS_MUL         reduce using rule 161 (primitiveType -> SHORT .)
    ASS_DIV         reduce using rule 161 (primitiveType -> SHORT .)
    ASS_AND         reduce using rule 161 (primitiveType -> SHORT .)
    ASS_OR          reduce using rule 161 (primitiveType -> SHORT .)
    ASS_XOR         reduce using rule 161 (primitiveType -> SHORT .)
    ASS_MOD         reduce using rule 161 (primitiveType -> SHORT .)
    ASS_SHL         reduce using rule 161 (primitiveType -> SHORT .)
    ASS_SHRR        reduce using rule 161 (primitiveType -> SHORT .)
    ASS_SHR         reduce using rule 161 (primitiveType -> SHORT .)
    FRPAREN         reduce using rule 161 (primitiveType -> SHORT .)
    COLON           reduce using rule 161 (primitiveType -> SHORT .)
    SEMI            reduce using rule 161 (primitiveType -> SHORT .)
    IMPLEMENTS      reduce using rule 161 (primitiveType -> SHORT .)


state 113

    (316) conditionalAndExpression -> inclusiveOrExpression . expt_64
    (317) conditionalAndExpression -> inclusiveOrExpression .
    (554) expt_64 -> . OP_LAND inclusiveOrExpression
    (555) expt_64 -> . expt_64 OP_LAND inclusiveOrExpression

    OP_LOR          reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    QUES            reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    EQUALS          reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_ADD         reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_SUB         reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_MUL         reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_DIV         reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_AND         reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_OR          reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_XOR         reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_MOD         reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_SHL         reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_SHRR        reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_SHR         reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    SEMI            reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    COMMA           reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    BRPAREN         reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    RPAREN          reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    FRPAREN         reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    COLON           reduce using rule 317 (conditionalAndExpression -> inclusiveOrExpression .)
    OP_LAND         shift and go to state 207

    expt_64                        shift and go to state 208

state 114

    (582) integerLiteral -> LONG_NUMBER .

    OP_INC          reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    OP_DEC          reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    FLPAREN         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    DOT             reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    MULT            reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    SLASH           reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    PERCENT         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    PLUS            reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    DASH            reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    OP_SHR          reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    OP_SHL          reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    OP_SHRR         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    OP_LE           reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    OP_GE           reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    LESS            reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    MORE            reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    INSTANCEOF      reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    OP_EQ           reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    OP_NE           reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    AND             reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    CARET           reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    VERTICAL        reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    OP_LAND         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    OP_LOR          reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    QUES            reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    RPAREN          reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    COMMA           reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    BRPAREN         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    EQUALS          reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    ASS_ADD         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    ASS_SUB         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    ASS_MUL         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    ASS_DIV         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    ASS_AND         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    ASS_OR          reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    ASS_XOR         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    ASS_MOD         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    ASS_SHL         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    ASS_SHRR        reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    ASS_SHR         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    FRPAREN         reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    COLON           reduce using rule 582 (integerLiteral -> LONG_NUMBER .)
    SEMI            reduce using rule 582 (integerLiteral -> LONG_NUMBER .)


state 115

    (209) elementValuePairs -> elementValuePair . expt_44
    (210) elementValuePairs -> elementValuePair . empty
    (522) expt_44 -> . COMMA elementValuePair
    (523) expt_44 -> . expt_44 COMMA elementValuePair
    (584) empty -> .

    COMMA           shift and go to state 210
    RPAREN          reduce using rule 584 (empty -> .)

    expt_44                        shift and go to state 209
    empty                          shift and go to state 211

state 116

    (334) shiftExpression -> additiveExpression . expt_71
    (335) shiftExpression -> additiveExpression .
    (566) expt_71 -> . shiftOp additiveExpression
    (567) expt_71 -> . expt_71 shiftOp additiveExpression
    (336) shiftOp -> . OP_SHR
    (337) shiftOp -> . OP_SHL
    (338) shiftOp -> . OP_SHRR

    OP_LE           reduce using rule 335 (shiftExpression -> additiveExpression .)
    OP_GE           reduce using rule 335 (shiftExpression -> additiveExpression .)
    LESS            reduce using rule 335 (shiftExpression -> additiveExpression .)
    MORE            reduce using rule 335 (shiftExpression -> additiveExpression .)
    INSTANCEOF      reduce using rule 335 (shiftExpression -> additiveExpression .)
    OP_EQ           reduce using rule 335 (shiftExpression -> additiveExpression .)
    OP_NE           reduce using rule 335 (shiftExpression -> additiveExpression .)
    AND             reduce using rule 335 (shiftExpression -> additiveExpression .)
    CARET           reduce using rule 335 (shiftExpression -> additiveExpression .)
    VERTICAL        reduce using rule 335 (shiftExpression -> additiveExpression .)
    OP_LAND         reduce using rule 335 (shiftExpression -> additiveExpression .)
    OP_LOR          reduce using rule 335 (shiftExpression -> additiveExpression .)
    QUES            reduce using rule 335 (shiftExpression -> additiveExpression .)
    EQUALS          reduce using rule 335 (shiftExpression -> additiveExpression .)
    ASS_ADD         reduce using rule 335 (shiftExpression -> additiveExpression .)
    ASS_SUB         reduce using rule 335 (shiftExpression -> additiveExpression .)
    ASS_MUL         reduce using rule 335 (shiftExpression -> additiveExpression .)
    ASS_DIV         reduce using rule 335 (shiftExpression -> additiveExpression .)
    ASS_AND         reduce using rule 335 (shiftExpression -> additiveExpression .)
    ASS_OR          reduce using rule 335 (shiftExpression -> additiveExpression .)
    ASS_XOR         reduce using rule 335 (shiftExpression -> additiveExpression .)
    ASS_MOD         reduce using rule 335 (shiftExpression -> additiveExpression .)
    ASS_SHL         reduce using rule 335 (shiftExpression -> additiveExpression .)
    ASS_SHRR        reduce using rule 335 (shiftExpression -> additiveExpression .)
    ASS_SHR         reduce using rule 335 (shiftExpression -> additiveExpression .)
    COLON           reduce using rule 335 (shiftExpression -> additiveExpression .)
    COMMA           reduce using rule 335 (shiftExpression -> additiveExpression .)
    BRPAREN         reduce using rule 335 (shiftExpression -> additiveExpression .)
    RPAREN          reduce using rule 335 (shiftExpression -> additiveExpression .)
    FRPAREN         reduce using rule 335 (shiftExpression -> additiveExpression .)
    SEMI            reduce using rule 335 (shiftExpression -> additiveExpression .)
    OP_SHR          shift and go to state 214
    OP_SHL          shift and go to state 212
    OP_SHRR         shift and go to state 213

    expt_71                        shift and go to state 215
    shiftOp                        shift and go to state 216

state 117

    (211) elementValuePair -> Identifier . EQUALS elementValue
    (360) primary -> Identifier . expt_42 identifierSuffix
    (361) primary -> Identifier . expt_42
    (362) primary -> Identifier . identifierSuffix
    (363) primary -> Identifier .
    (520) expt_42 -> . DOT Identifier
    (521) expt_42 -> . expt_42 DOT Identifier
    (372) identifierSuffix -> . suffixStatements DOT CLASS
    (373) identifierSuffix -> . suffixExprStatements
    (374) identifierSuffix -> . arguments
    (375) identifierSuffix -> . DOT CLASS
    (376) identifierSuffix -> . DOT explicitGenericInvocation
    (377) identifierSuffix -> . DOT THIS
    (378) identifierSuffix -> . DOT SUPER arguments
    (379) identifierSuffix -> . DOT NEW innerCreator
    (433) suffixStatements -> . FLPAREN FRPAREN
    (434) suffixStatements -> . suffixStatements FLPAREN FRPAREN
    (435) suffixExprStatements -> . FLPAREN expression FRPAREN
    (436) suffixExprStatements -> . suffixExprStatements FLPAREN expression FRPAREN
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    EQUALS          shift and go to state 218
    OP_INC          reduce using rule 363 (primary -> Identifier .)
    OP_DEC          reduce using rule 363 (primary -> Identifier .)
    MULT            reduce using rule 363 (primary -> Identifier .)
    SLASH           reduce using rule 363 (primary -> Identifier .)
    PERCENT         reduce using rule 363 (primary -> Identifier .)
    PLUS            reduce using rule 363 (primary -> Identifier .)
    DASH            reduce using rule 363 (primary -> Identifier .)
    OP_SHR          reduce using rule 363 (primary -> Identifier .)
    OP_SHL          reduce using rule 363 (primary -> Identifier .)
    OP_SHRR         reduce using rule 363 (primary -> Identifier .)
    OP_LE           reduce using rule 363 (primary -> Identifier .)
    OP_GE           reduce using rule 363 (primary -> Identifier .)
    LESS            reduce using rule 363 (primary -> Identifier .)
    MORE            reduce using rule 363 (primary -> Identifier .)
    INSTANCEOF      reduce using rule 363 (primary -> Identifier .)
    OP_EQ           reduce using rule 363 (primary -> Identifier .)
    OP_NE           reduce using rule 363 (primary -> Identifier .)
    AND             reduce using rule 363 (primary -> Identifier .)
    CARET           reduce using rule 363 (primary -> Identifier .)
    VERTICAL        reduce using rule 363 (primary -> Identifier .)
    OP_LAND         reduce using rule 363 (primary -> Identifier .)
    OP_LOR          reduce using rule 363 (primary -> Identifier .)
    QUES            reduce using rule 363 (primary -> Identifier .)
    RPAREN          reduce using rule 363 (primary -> Identifier .)
    DOT             shift and go to state 205
    FLPAREN         shift and go to state 201
    LPAREN          shift and go to state 204

  ! FLPAREN         [ reduce using rule 363 (primary -> Identifier .) ]
  ! DOT             [ reduce using rule 363 (primary -> Identifier .) ]

    identifierSuffix               shift and go to state 217
    suffixStatements               shift and go to state 200
    suffixExprStatements           shift and go to state 202
    arguments                      shift and go to state 203
    expt_42                        shift and go to state 219

state 118

    (195) literal -> CharacterLiteral .

    OP_INC          reduce using rule 195 (literal -> CharacterLiteral .)
    OP_DEC          reduce using rule 195 (literal -> CharacterLiteral .)
    FLPAREN         reduce using rule 195 (literal -> CharacterLiteral .)
    DOT             reduce using rule 195 (literal -> CharacterLiteral .)
    MULT            reduce using rule 195 (literal -> CharacterLiteral .)
    SLASH           reduce using rule 195 (literal -> CharacterLiteral .)
    PERCENT         reduce using rule 195 (literal -> CharacterLiteral .)
    PLUS            reduce using rule 195 (literal -> CharacterLiteral .)
    DASH            reduce using rule 195 (literal -> CharacterLiteral .)
    OP_SHR          reduce using rule 195 (literal -> CharacterLiteral .)
    OP_SHL          reduce using rule 195 (literal -> CharacterLiteral .)
    OP_SHRR         reduce using rule 195 (literal -> CharacterLiteral .)
    OP_LE           reduce using rule 195 (literal -> CharacterLiteral .)
    OP_GE           reduce using rule 195 (literal -> CharacterLiteral .)
    LESS            reduce using rule 195 (literal -> CharacterLiteral .)
    MORE            reduce using rule 195 (literal -> CharacterLiteral .)
    INSTANCEOF      reduce using rule 195 (literal -> CharacterLiteral .)
    OP_EQ           reduce using rule 195 (literal -> CharacterLiteral .)
    OP_NE           reduce using rule 195 (literal -> CharacterLiteral .)
    AND             reduce using rule 195 (literal -> CharacterLiteral .)
    CARET           reduce using rule 195 (literal -> CharacterLiteral .)
    VERTICAL        reduce using rule 195 (literal -> CharacterLiteral .)
    OP_LAND         reduce using rule 195 (literal -> CharacterLiteral .)
    OP_LOR          reduce using rule 195 (literal -> CharacterLiteral .)
    QUES            reduce using rule 195 (literal -> CharacterLiteral .)
    EQUALS          reduce using rule 195 (literal -> CharacterLiteral .)
    ASS_ADD         reduce using rule 195 (literal -> CharacterLiteral .)
    ASS_SUB         reduce using rule 195 (literal -> CharacterLiteral .)
    ASS_MUL         reduce using rule 195 (literal -> CharacterLiteral .)
    ASS_DIV         reduce using rule 195 (literal -> CharacterLiteral .)
    ASS_AND         reduce using rule 195 (literal -> CharacterLiteral .)
    ASS_OR          reduce using rule 195 (literal -> CharacterLiteral .)
    ASS_XOR         reduce using rule 195 (literal -> CharacterLiteral .)
    ASS_MOD         reduce using rule 195 (literal -> CharacterLiteral .)
    ASS_SHL         reduce using rule 195 (literal -> CharacterLiteral .)
    ASS_SHRR        reduce using rule 195 (literal -> CharacterLiteral .)
    ASS_SHR         reduce using rule 195 (literal -> CharacterLiteral .)
    SEMI            reduce using rule 195 (literal -> CharacterLiteral .)
    COLON           reduce using rule 195 (literal -> CharacterLiteral .)
    RPAREN          reduce using rule 195 (literal -> CharacterLiteral .)
    FRPAREN         reduce using rule 195 (literal -> CharacterLiteral .)
    COMMA           reduce using rule 195 (literal -> CharacterLiteral .)
    BRPAREN         reduce using rule 195 (literal -> CharacterLiteral .)


state 119

    (162) primitiveType -> INT .

    DOT             reduce using rule 162 (primitiveType -> INT .)
    FLPAREN         reduce using rule 162 (primitiveType -> INT .)
    COMMA           reduce using rule 162 (primitiveType -> INT .)
    BLPAREN         reduce using rule 162 (primitiveType -> INT .)
    Identifier      reduce using rule 162 (primitiveType -> INT .)
    RPAREN          reduce using rule 162 (primitiveType -> INT .)
    OP_ARRAY        reduce using rule 162 (primitiveType -> INT .)
    MORE            reduce using rule 162 (primitiveType -> INT .)
    LPAREN          reduce using rule 162 (primitiveType -> INT .)
    OP_EQ           reduce using rule 162 (primitiveType -> INT .)
    OP_NE           reduce using rule 162 (primitiveType -> INT .)
    AND             reduce using rule 162 (primitiveType -> INT .)
    CARET           reduce using rule 162 (primitiveType -> INT .)
    VERTICAL        reduce using rule 162 (primitiveType -> INT .)
    OP_LAND         reduce using rule 162 (primitiveType -> INT .)
    OP_LOR          reduce using rule 162 (primitiveType -> INT .)
    QUES            reduce using rule 162 (primitiveType -> INT .)
    BRPAREN         reduce using rule 162 (primitiveType -> INT .)
    EQUALS          reduce using rule 162 (primitiveType -> INT .)
    ASS_ADD         reduce using rule 162 (primitiveType -> INT .)
    ASS_SUB         reduce using rule 162 (primitiveType -> INT .)
    ASS_MUL         reduce using rule 162 (primitiveType -> INT .)
    ASS_DIV         reduce using rule 162 (primitiveType -> INT .)
    ASS_AND         reduce using rule 162 (primitiveType -> INT .)
    ASS_OR          reduce using rule 162 (primitiveType -> INT .)
    ASS_XOR         reduce using rule 162 (primitiveType -> INT .)
    ASS_MOD         reduce using rule 162 (primitiveType -> INT .)
    ASS_SHL         reduce using rule 162 (primitiveType -> INT .)
    ASS_SHRR        reduce using rule 162 (primitiveType -> INT .)
    ASS_SHR         reduce using rule 162 (primitiveType -> INT .)
    FRPAREN         reduce using rule 162 (primitiveType -> INT .)
    COLON           reduce using rule 162 (primitiveType -> INT .)
    SEMI            reduce using rule 162 (primitiveType -> INT .)
    IMPLEMENTS      reduce using rule 162 (primitiveType -> INT .)


state 120

    (347) unaryExpression -> unaryExpressionNotPlusMinus .

    MULT            reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    SLASH           reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    PERCENT         reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    PLUS            reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    DASH            reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_SHR          reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_SHL          reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_SHRR         reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_LE           reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_GE           reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    LESS            reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    MORE            reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    INSTANCEOF      reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_EQ           reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_NE           reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    AND             reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    CARET           reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    VERTICAL        reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_LAND         reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_LOR          reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    QUES            reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    RPAREN          reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    COMMA           reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    BRPAREN         reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    EQUALS          reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_ADD         reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_SUB         reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_MUL         reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_DIV         reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_AND         reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_OR          reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_XOR         reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_MOD         reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_SHL         reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_SHRR        reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_SHR         reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    FRPAREN         reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    COLON           reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)
    SEMI            reduce using rule 347 (unaryExpression -> unaryExpressionNotPlusMinus .)


state 121

    (320) exclusiveOrExpression -> andExpression . expt_66
    (321) exclusiveOrExpression -> andExpression .
    (558) expt_66 -> . CARET andExpression
    (559) expt_66 -> . expt_66 CARET andExpression

    VERTICAL        reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    OP_LAND         reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    OP_LOR          reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    QUES            reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    EQUALS          reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    ASS_ADD         reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    ASS_SUB         reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    ASS_MUL         reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    ASS_DIV         reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    ASS_AND         reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    ASS_OR          reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    ASS_XOR         reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    ASS_MOD         reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    ASS_SHL         reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    ASS_SHRR        reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    ASS_SHR         reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    FRPAREN         reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    COLON           reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    COMMA           reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    RPAREN          reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    SEMI            reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    BRPAREN         reduce using rule 321 (exclusiveOrExpression -> andExpression .)
    CARET           shift and go to state 220

    expt_66                        shift and go to state 221

state 122

    (215) elementValueArrayInitializer -> BLPAREN . expt_46 expt_30 BRPAREN
    (216) elementValueArrayInitializer -> BLPAREN . expt_46 empty BRPAREN
    (217) elementValueArrayInitializer -> BLPAREN . empty expt_30 BRPAREN
    (218) elementValueArrayInitializer -> BLPAREN . empty empty BRPAREN
    (527) expt_46 -> . elementValue expt_45
    (584) empty -> .
    (212) elementValue -> . conditionalExpression
    (213) elementValue -> . annotation
    (214) elementValue -> . elementValueArrayInitializer
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (215) elementValueArrayInitializer -> . BLPAREN expt_46 expt_30 BRPAREN
    (216) elementValueArrayInitializer -> . BLPAREN expt_46 empty BRPAREN
    (217) elementValueArrayInitializer -> . BLPAREN empty expt_30 BRPAREN
    (218) elementValueArrayInitializer -> . BLPAREN empty empty BRPAREN
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    COMMA           reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)
    AT              shift and go to state 8
    BLPAREN         shift and go to state 122
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    expt_46                        shift and go to state 222
    integerLiteral                 shift and go to state 111
    empty                          shift and go to state 223
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 133
    unaryExpression                shift and go to state 149
    exclusiveOrExpression          shift and go to state 105
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    annotation                     shift and go to state 153
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    elementValueArrayInitializer   shift and go to state 140
    andExpression                  shift and go to state 121
    elementValue                   shift and go to state 224

state 123

    (322) andExpression -> equalityExpression . expt_67
    (323) andExpression -> equalityExpression .
    (560) expt_67 -> . AND equalityExpression
    (561) expt_67 -> . expt_67 AND equalityExpression

    CARET           reduce using rule 323 (andExpression -> equalityExpression .)
    VERTICAL        reduce using rule 323 (andExpression -> equalityExpression .)
    OP_LAND         reduce using rule 323 (andExpression -> equalityExpression .)
    OP_LOR          reduce using rule 323 (andExpression -> equalityExpression .)
    QUES            reduce using rule 323 (andExpression -> equalityExpression .)
    RPAREN          reduce using rule 323 (andExpression -> equalityExpression .)
    COMMA           reduce using rule 323 (andExpression -> equalityExpression .)
    BRPAREN         reduce using rule 323 (andExpression -> equalityExpression .)
    EQUALS          reduce using rule 323 (andExpression -> equalityExpression .)
    ASS_ADD         reduce using rule 323 (andExpression -> equalityExpression .)
    ASS_SUB         reduce using rule 323 (andExpression -> equalityExpression .)
    ASS_MUL         reduce using rule 323 (andExpression -> equalityExpression .)
    ASS_DIV         reduce using rule 323 (andExpression -> equalityExpression .)
    ASS_AND         reduce using rule 323 (andExpression -> equalityExpression .)
    ASS_OR          reduce using rule 323 (andExpression -> equalityExpression .)
    ASS_XOR         reduce using rule 323 (andExpression -> equalityExpression .)
    ASS_MOD         reduce using rule 323 (andExpression -> equalityExpression .)
    ASS_SHL         reduce using rule 323 (andExpression -> equalityExpression .)
    ASS_SHRR        reduce using rule 323 (andExpression -> equalityExpression .)
    ASS_SHR         reduce using rule 323 (andExpression -> equalityExpression .)
    FRPAREN         reduce using rule 323 (andExpression -> equalityExpression .)
    COLON           reduce using rule 323 (andExpression -> equalityExpression .)
    SEMI            reduce using rule 323 (andExpression -> equalityExpression .)
    AND             shift and go to state 225

    expt_67                        shift and go to state 226

state 124

    (312) conditionalExpression -> conditionalOrExpression . QUES expression COLON expression
    (313) conditionalExpression -> conditionalOrExpression .

    QUES            shift and go to state 227
    EQUALS          reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    ASS_ADD         reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    ASS_SUB         reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    ASS_MUL         reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    ASS_DIV         reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    ASS_AND         reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    ASS_OR          reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    ASS_XOR         reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    ASS_MOD         reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    ASS_SHL         reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    ASS_SHRR        reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    ASS_SHR         reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    SEMI            reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    FRPAREN         reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    COMMA           reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    COLON           reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    RPAREN          reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)
    BRPAREN         reduce using rule 313 (conditionalExpression -> conditionalOrExpression .)


state 125

    (348) unaryExpressionNotPlusMinus -> primary . expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> primary . expr_14
    (350) unaryExpressionNotPlusMinus -> primary . expt_74
    (351) unaryExpressionNotPlusMinus -> primary .
    (573) expt_74 -> . selector
    (574) expt_74 -> . expt_74 selector
    (429) expr_14 -> . OP_INC
    (430) expr_14 -> . OP_DEC
    (392) selector -> . FLPAREN expression FRPAREN
    (393) selector -> . DOT NEW innerCreator
    (394) selector -> . DOT SUPER superSuffix
    (395) selector -> . DOT THIS
    (396) selector -> . DOT Identifier expt_18
    (397) selector -> . DOT Identifier empty

    MULT            reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    SLASH           reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    PERCENT         reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    PLUS            reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    DASH            reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    OP_SHR          reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    OP_SHL          reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    OP_SHRR         reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    OP_LE           reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    OP_GE           reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    LESS            reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    MORE            reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    INSTANCEOF      reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    OP_EQ           reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    OP_NE           reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    AND             reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    CARET           reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    VERTICAL        reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    OP_LAND         reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    OP_LOR          reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    QUES            reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    EQUALS          reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    ASS_ADD         reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    ASS_SUB         reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    ASS_MUL         reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    ASS_DIV         reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    ASS_AND         reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    ASS_OR          reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    ASS_XOR         reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    ASS_MOD         reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    ASS_SHL         reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    ASS_SHRR        reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    ASS_SHR         reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    FRPAREN         reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    RPAREN          reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    COMMA           reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    BRPAREN         reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    COLON           reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    SEMI            reduce using rule 351 (unaryExpressionNotPlusMinus -> primary .)
    OP_INC          shift and go to state 230
    OP_DEC          shift and go to state 232
    FLPAREN         shift and go to state 229
    DOT             shift and go to state 234

    selector                       shift and go to state 228
    expt_74                        shift and go to state 231
    expr_14                        shift and go to state 233

state 126

    (159) primitiveType -> CHAR .

    DOT             reduce using rule 159 (primitiveType -> CHAR .)
    FLPAREN         reduce using rule 159 (primitiveType -> CHAR .)
    COMMA           reduce using rule 159 (primitiveType -> CHAR .)
    BLPAREN         reduce using rule 159 (primitiveType -> CHAR .)
    Identifier      reduce using rule 159 (primitiveType -> CHAR .)
    RPAREN          reduce using rule 159 (primitiveType -> CHAR .)
    OP_ARRAY        reduce using rule 159 (primitiveType -> CHAR .)
    MORE            reduce using rule 159 (primitiveType -> CHAR .)
    LPAREN          reduce using rule 159 (primitiveType -> CHAR .)
    OP_EQ           reduce using rule 159 (primitiveType -> CHAR .)
    OP_NE           reduce using rule 159 (primitiveType -> CHAR .)
    AND             reduce using rule 159 (primitiveType -> CHAR .)
    CARET           reduce using rule 159 (primitiveType -> CHAR .)
    VERTICAL        reduce using rule 159 (primitiveType -> CHAR .)
    OP_LAND         reduce using rule 159 (primitiveType -> CHAR .)
    OP_LOR          reduce using rule 159 (primitiveType -> CHAR .)
    QUES            reduce using rule 159 (primitiveType -> CHAR .)
    BRPAREN         reduce using rule 159 (primitiveType -> CHAR .)
    EQUALS          reduce using rule 159 (primitiveType -> CHAR .)
    ASS_ADD         reduce using rule 159 (primitiveType -> CHAR .)
    ASS_SUB         reduce using rule 159 (primitiveType -> CHAR .)
    ASS_MUL         reduce using rule 159 (primitiveType -> CHAR .)
    ASS_DIV         reduce using rule 159 (primitiveType -> CHAR .)
    ASS_AND         reduce using rule 159 (primitiveType -> CHAR .)
    ASS_OR          reduce using rule 159 (primitiveType -> CHAR .)
    ASS_XOR         reduce using rule 159 (primitiveType -> CHAR .)
    ASS_MOD         reduce using rule 159 (primitiveType -> CHAR .)
    ASS_SHL         reduce using rule 159 (primitiveType -> CHAR .)
    ASS_SHRR        reduce using rule 159 (primitiveType -> CHAR .)
    ASS_SHR         reduce using rule 159 (primitiveType -> CHAR .)
    FRPAREN         reduce using rule 159 (primitiveType -> CHAR .)
    COLON           reduce using rule 159 (primitiveType -> CHAR .)
    SEMI            reduce using rule 159 (primitiveType -> CHAR .)
    IMPLEMENTS      reduce using rule 159 (primitiveType -> CHAR .)


state 127

    (345) unaryExpression -> OP_INC . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    unaryExpression                shift and go to state 235
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    parExpression                  shift and go to state 150
    primary                        shift and go to state 125
    primitiveType                  shift and go to state 138
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    FloatingPointLiteral           shift and go to state 134
    integerLiteral                 shift and go to state 111

state 128

    (583) integerLiteral -> LONG_HEX_NUMBER .

    OP_INC          reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_DEC          reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    FLPAREN         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    DOT             reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    MULT            reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    SLASH           reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    PERCENT         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    PLUS            reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    DASH            reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_SHR          reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_SHL          reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_SHRR         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_LE           reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_GE           reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    LESS            reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    MORE            reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    INSTANCEOF      reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_EQ           reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_NE           reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    AND             reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    CARET           reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    VERTICAL        reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_LAND         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_LOR          reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    QUES            reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    RPAREN          reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    COMMA           reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    BRPAREN         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    EQUALS          reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_ADD         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_SUB         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_MUL         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_DIV         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_AND         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_OR          reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_XOR         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_MOD         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_SHL         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_SHRR        reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_SHR         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    FRPAREN         reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    COLON           reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)
    SEMI            reduce using rule 583 (integerLiteral -> LONG_HEX_NUMBER .)


state 129

    (346) unaryExpression -> OP_DEC . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    unaryExpression                shift and go to state 236
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    parExpression                  shift and go to state 150
    primary                        shift and go to state 125
    primitiveType                  shift and go to state 138
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    FloatingPointLiteral           shift and go to state 134
    integerLiteral                 shift and go to state 111

state 130

    (364) primary -> NEW . creator
    (380) creator -> . nonWildcardTypeArguments createdName classCreatorRest
    (381) creator -> . createdName classCreatorRest
    (382) creator -> . createdName arrayCreatorRest
    (391) nonWildcardTypeArguments -> . LESS typeList MORE
    (383) createdName -> . classOrInterfaceType
    (384) createdName -> . primitiveType
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE

    LESS            shift and go to state 238
    Identifier      shift and go to state 166
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110

    creator                        shift and go to state 237
    createdName                    shift and go to state 241
    classOrInterfaceType           shift and go to state 239
    primitiveType                  shift and go to state 242
    nonWildcardTypeArguments       shift and go to state 240

state 131

    (365) primary -> literal .

    OP_INC          reduce using rule 365 (primary -> literal .)
    OP_DEC          reduce using rule 365 (primary -> literal .)
    FLPAREN         reduce using rule 365 (primary -> literal .)
    DOT             reduce using rule 365 (primary -> literal .)
    MULT            reduce using rule 365 (primary -> literal .)
    SLASH           reduce using rule 365 (primary -> literal .)
    PERCENT         reduce using rule 365 (primary -> literal .)
    PLUS            reduce using rule 365 (primary -> literal .)
    DASH            reduce using rule 365 (primary -> literal .)
    OP_SHR          reduce using rule 365 (primary -> literal .)
    OP_SHL          reduce using rule 365 (primary -> literal .)
    OP_SHRR         reduce using rule 365 (primary -> literal .)
    OP_LE           reduce using rule 365 (primary -> literal .)
    OP_GE           reduce using rule 365 (primary -> literal .)
    LESS            reduce using rule 365 (primary -> literal .)
    MORE            reduce using rule 365 (primary -> literal .)
    INSTANCEOF      reduce using rule 365 (primary -> literal .)
    OP_EQ           reduce using rule 365 (primary -> literal .)
    OP_NE           reduce using rule 365 (primary -> literal .)
    AND             reduce using rule 365 (primary -> literal .)
    CARET           reduce using rule 365 (primary -> literal .)
    VERTICAL        reduce using rule 365 (primary -> literal .)
    OP_LAND         reduce using rule 365 (primary -> literal .)
    OP_LOR          reduce using rule 365 (primary -> literal .)
    QUES            reduce using rule 365 (primary -> literal .)
    RPAREN          reduce using rule 365 (primary -> literal .)
    COMMA           reduce using rule 365 (primary -> literal .)
    BRPAREN         reduce using rule 365 (primary -> literal .)
    EQUALS          reduce using rule 365 (primary -> literal .)
    ASS_ADD         reduce using rule 365 (primary -> literal .)
    ASS_SUB         reduce using rule 365 (primary -> literal .)
    ASS_MUL         reduce using rule 365 (primary -> literal .)
    ASS_DIV         reduce using rule 365 (primary -> literal .)
    ASS_AND         reduce using rule 365 (primary -> literal .)
    ASS_OR          reduce using rule 365 (primary -> literal .)
    ASS_XOR         reduce using rule 365 (primary -> literal .)
    ASS_MOD         reduce using rule 365 (primary -> literal .)
    ASS_SHL         reduce using rule 365 (primary -> literal .)
    ASS_SHRR        reduce using rule 365 (primary -> literal .)
    ASS_SHR         reduce using rule 365 (primary -> literal .)
    FRPAREN         reduce using rule 365 (primary -> literal .)
    COLON           reduce using rule 365 (primary -> literal .)
    SEMI            reduce using rule 365 (primary -> literal .)


state 132

    (354) unaryExpressionNotPlusMinus -> TILDE . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    unaryExpression                shift and go to state 243
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    parExpression                  shift and go to state 150
    primary                        shift and go to state 125
    primitiveType                  shift and go to state 138
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    FloatingPointLiteral           shift and go to state 134
    integerLiteral                 shift and go to state 111

state 133

    (212) elementValue -> conditionalExpression .

    COMMA           reduce using rule 212 (elementValue -> conditionalExpression .)
    RPAREN          reduce using rule 212 (elementValue -> conditionalExpression .)
    SEMI            reduce using rule 212 (elementValue -> conditionalExpression .)
    BRPAREN         reduce using rule 212 (elementValue -> conditionalExpression .)


state 134

    (194) literal -> FloatingPointLiteral .

    OP_INC          reduce using rule 194 (literal -> FloatingPointLiteral .)
    OP_DEC          reduce using rule 194 (literal -> FloatingPointLiteral .)
    FLPAREN         reduce using rule 194 (literal -> FloatingPointLiteral .)
    DOT             reduce using rule 194 (literal -> FloatingPointLiteral .)
    MULT            reduce using rule 194 (literal -> FloatingPointLiteral .)
    SLASH           reduce using rule 194 (literal -> FloatingPointLiteral .)
    PERCENT         reduce using rule 194 (literal -> FloatingPointLiteral .)
    PLUS            reduce using rule 194 (literal -> FloatingPointLiteral .)
    DASH            reduce using rule 194 (literal -> FloatingPointLiteral .)
    OP_SHR          reduce using rule 194 (literal -> FloatingPointLiteral .)
    OP_SHL          reduce using rule 194 (literal -> FloatingPointLiteral .)
    OP_SHRR         reduce using rule 194 (literal -> FloatingPointLiteral .)
    OP_LE           reduce using rule 194 (literal -> FloatingPointLiteral .)
    OP_GE           reduce using rule 194 (literal -> FloatingPointLiteral .)
    LESS            reduce using rule 194 (literal -> FloatingPointLiteral .)
    MORE            reduce using rule 194 (literal -> FloatingPointLiteral .)
    INSTANCEOF      reduce using rule 194 (literal -> FloatingPointLiteral .)
    OP_EQ           reduce using rule 194 (literal -> FloatingPointLiteral .)
    OP_NE           reduce using rule 194 (literal -> FloatingPointLiteral .)
    AND             reduce using rule 194 (literal -> FloatingPointLiteral .)
    CARET           reduce using rule 194 (literal -> FloatingPointLiteral .)
    VERTICAL        reduce using rule 194 (literal -> FloatingPointLiteral .)
    OP_LAND         reduce using rule 194 (literal -> FloatingPointLiteral .)
    OP_LOR          reduce using rule 194 (literal -> FloatingPointLiteral .)
    QUES            reduce using rule 194 (literal -> FloatingPointLiteral .)
    EQUALS          reduce using rule 194 (literal -> FloatingPointLiteral .)
    ASS_ADD         reduce using rule 194 (literal -> FloatingPointLiteral .)
    ASS_SUB         reduce using rule 194 (literal -> FloatingPointLiteral .)
    ASS_MUL         reduce using rule 194 (literal -> FloatingPointLiteral .)
    ASS_DIV         reduce using rule 194 (literal -> FloatingPointLiteral .)
    ASS_AND         reduce using rule 194 (literal -> FloatingPointLiteral .)
    ASS_OR          reduce using rule 194 (literal -> FloatingPointLiteral .)
    ASS_XOR         reduce using rule 194 (literal -> FloatingPointLiteral .)
    ASS_MOD         reduce using rule 194 (literal -> FloatingPointLiteral .)
    ASS_SHL         reduce using rule 194 (literal -> FloatingPointLiteral .)
    ASS_SHRR        reduce using rule 194 (literal -> FloatingPointLiteral .)
    ASS_SHR         reduce using rule 194 (literal -> FloatingPointLiteral .)
    SEMI            reduce using rule 194 (literal -> FloatingPointLiteral .)
    COLON           reduce using rule 194 (literal -> FloatingPointLiteral .)
    RPAREN          reduce using rule 194 (literal -> FloatingPointLiteral .)
    FRPAREN         reduce using rule 194 (literal -> FloatingPointLiteral .)
    COMMA           reduce using rule 194 (literal -> FloatingPointLiteral .)
    BRPAREN         reduce using rule 194 (literal -> FloatingPointLiteral .)


state 135

    (160) primitiveType -> BYTE .

    DOT             reduce using rule 160 (primitiveType -> BYTE .)
    FLPAREN         reduce using rule 160 (primitiveType -> BYTE .)
    COMMA           reduce using rule 160 (primitiveType -> BYTE .)
    BLPAREN         reduce using rule 160 (primitiveType -> BYTE .)
    Identifier      reduce using rule 160 (primitiveType -> BYTE .)
    RPAREN          reduce using rule 160 (primitiveType -> BYTE .)
    OP_ARRAY        reduce using rule 160 (primitiveType -> BYTE .)
    MORE            reduce using rule 160 (primitiveType -> BYTE .)
    LPAREN          reduce using rule 160 (primitiveType -> BYTE .)
    OP_EQ           reduce using rule 160 (primitiveType -> BYTE .)
    OP_NE           reduce using rule 160 (primitiveType -> BYTE .)
    AND             reduce using rule 160 (primitiveType -> BYTE .)
    CARET           reduce using rule 160 (primitiveType -> BYTE .)
    VERTICAL        reduce using rule 160 (primitiveType -> BYTE .)
    OP_LAND         reduce using rule 160 (primitiveType -> BYTE .)
    OP_LOR          reduce using rule 160 (primitiveType -> BYTE .)
    QUES            reduce using rule 160 (primitiveType -> BYTE .)
    BRPAREN         reduce using rule 160 (primitiveType -> BYTE .)
    EQUALS          reduce using rule 160 (primitiveType -> BYTE .)
    ASS_ADD         reduce using rule 160 (primitiveType -> BYTE .)
    ASS_SUB         reduce using rule 160 (primitiveType -> BYTE .)
    ASS_MUL         reduce using rule 160 (primitiveType -> BYTE .)
    ASS_DIV         reduce using rule 160 (primitiveType -> BYTE .)
    ASS_AND         reduce using rule 160 (primitiveType -> BYTE .)
    ASS_OR          reduce using rule 160 (primitiveType -> BYTE .)
    ASS_XOR         reduce using rule 160 (primitiveType -> BYTE .)
    ASS_MOD         reduce using rule 160 (primitiveType -> BYTE .)
    ASS_SHL         reduce using rule 160 (primitiveType -> BYTE .)
    ASS_SHRR        reduce using rule 160 (primitiveType -> BYTE .)
    ASS_SHR         reduce using rule 160 (primitiveType -> BYTE .)
    FRPAREN         reduce using rule 160 (primitiveType -> BYTE .)
    COLON           reduce using rule 160 (primitiveType -> BYTE .)
    SEMI            reduce using rule 160 (primitiveType -> BYTE .)
    IMPLEMENTS      reduce using rule 160 (primitiveType -> BYTE .)


state 136

    (200) booleanLiteral -> FALSE .

    OP_INC          reduce using rule 200 (booleanLiteral -> FALSE .)
    OP_DEC          reduce using rule 200 (booleanLiteral -> FALSE .)
    FLPAREN         reduce using rule 200 (booleanLiteral -> FALSE .)
    DOT             reduce using rule 200 (booleanLiteral -> FALSE .)
    MULT            reduce using rule 200 (booleanLiteral -> FALSE .)
    SLASH           reduce using rule 200 (booleanLiteral -> FALSE .)
    PERCENT         reduce using rule 200 (booleanLiteral -> FALSE .)
    PLUS            reduce using rule 200 (booleanLiteral -> FALSE .)
    DASH            reduce using rule 200 (booleanLiteral -> FALSE .)
    OP_SHR          reduce using rule 200 (booleanLiteral -> FALSE .)
    OP_SHL          reduce using rule 200 (booleanLiteral -> FALSE .)
    OP_SHRR         reduce using rule 200 (booleanLiteral -> FALSE .)
    OP_LE           reduce using rule 200 (booleanLiteral -> FALSE .)
    OP_GE           reduce using rule 200 (booleanLiteral -> FALSE .)
    LESS            reduce using rule 200 (booleanLiteral -> FALSE .)
    MORE            reduce using rule 200 (booleanLiteral -> FALSE .)
    INSTANCEOF      reduce using rule 200 (booleanLiteral -> FALSE .)
    OP_EQ           reduce using rule 200 (booleanLiteral -> FALSE .)
    OP_NE           reduce using rule 200 (booleanLiteral -> FALSE .)
    AND             reduce using rule 200 (booleanLiteral -> FALSE .)
    CARET           reduce using rule 200 (booleanLiteral -> FALSE .)
    VERTICAL        reduce using rule 200 (booleanLiteral -> FALSE .)
    OP_LAND         reduce using rule 200 (booleanLiteral -> FALSE .)
    OP_LOR          reduce using rule 200 (booleanLiteral -> FALSE .)
    QUES            reduce using rule 200 (booleanLiteral -> FALSE .)
    RPAREN          reduce using rule 200 (booleanLiteral -> FALSE .)
    COMMA           reduce using rule 200 (booleanLiteral -> FALSE .)
    BRPAREN         reduce using rule 200 (booleanLiteral -> FALSE .)
    EQUALS          reduce using rule 200 (booleanLiteral -> FALSE .)
    ASS_ADD         reduce using rule 200 (booleanLiteral -> FALSE .)
    ASS_SUB         reduce using rule 200 (booleanLiteral -> FALSE .)
    ASS_MUL         reduce using rule 200 (booleanLiteral -> FALSE .)
    ASS_DIV         reduce using rule 200 (booleanLiteral -> FALSE .)
    ASS_AND         reduce using rule 200 (booleanLiteral -> FALSE .)
    ASS_OR          reduce using rule 200 (booleanLiteral -> FALSE .)
    ASS_XOR         reduce using rule 200 (booleanLiteral -> FALSE .)
    ASS_MOD         reduce using rule 200 (booleanLiteral -> FALSE .)
    ASS_SHL         reduce using rule 200 (booleanLiteral -> FALSE .)
    ASS_SHRR        reduce using rule 200 (booleanLiteral -> FALSE .)
    ASS_SHR         reduce using rule 200 (booleanLiteral -> FALSE .)
    FRPAREN         reduce using rule 200 (booleanLiteral -> FALSE .)
    COLON           reduce using rule 200 (booleanLiteral -> FALSE .)
    SEMI            reduce using rule 200 (booleanLiteral -> FALSE .)


state 137

    (196) literal -> StringLiteral .

    OP_INC          reduce using rule 196 (literal -> StringLiteral .)
    OP_DEC          reduce using rule 196 (literal -> StringLiteral .)
    FLPAREN         reduce using rule 196 (literal -> StringLiteral .)
    DOT             reduce using rule 196 (literal -> StringLiteral .)
    MULT            reduce using rule 196 (literal -> StringLiteral .)
    SLASH           reduce using rule 196 (literal -> StringLiteral .)
    PERCENT         reduce using rule 196 (literal -> StringLiteral .)
    PLUS            reduce using rule 196 (literal -> StringLiteral .)
    DASH            reduce using rule 196 (literal -> StringLiteral .)
    OP_SHR          reduce using rule 196 (literal -> StringLiteral .)
    OP_SHL          reduce using rule 196 (literal -> StringLiteral .)
    OP_SHRR         reduce using rule 196 (literal -> StringLiteral .)
    OP_LE           reduce using rule 196 (literal -> StringLiteral .)
    OP_GE           reduce using rule 196 (literal -> StringLiteral .)
    LESS            reduce using rule 196 (literal -> StringLiteral .)
    MORE            reduce using rule 196 (literal -> StringLiteral .)
    INSTANCEOF      reduce using rule 196 (literal -> StringLiteral .)
    OP_EQ           reduce using rule 196 (literal -> StringLiteral .)
    OP_NE           reduce using rule 196 (literal -> StringLiteral .)
    AND             reduce using rule 196 (literal -> StringLiteral .)
    CARET           reduce using rule 196 (literal -> StringLiteral .)
    VERTICAL        reduce using rule 196 (literal -> StringLiteral .)
    OP_LAND         reduce using rule 196 (literal -> StringLiteral .)
    OP_LOR          reduce using rule 196 (literal -> StringLiteral .)
    QUES            reduce using rule 196 (literal -> StringLiteral .)
    EQUALS          reduce using rule 196 (literal -> StringLiteral .)
    ASS_ADD         reduce using rule 196 (literal -> StringLiteral .)
    ASS_SUB         reduce using rule 196 (literal -> StringLiteral .)
    ASS_MUL         reduce using rule 196 (literal -> StringLiteral .)
    ASS_DIV         reduce using rule 196 (literal -> StringLiteral .)
    ASS_AND         reduce using rule 196 (literal -> StringLiteral .)
    ASS_OR          reduce using rule 196 (literal -> StringLiteral .)
    ASS_XOR         reduce using rule 196 (literal -> StringLiteral .)
    ASS_MOD         reduce using rule 196 (literal -> StringLiteral .)
    ASS_SHL         reduce using rule 196 (literal -> StringLiteral .)
    ASS_SHRR        reduce using rule 196 (literal -> StringLiteral .)
    ASS_SHR         reduce using rule 196 (literal -> StringLiteral .)
    SEMI            reduce using rule 196 (literal -> StringLiteral .)
    COLON           reduce using rule 196 (literal -> StringLiteral .)
    RPAREN          reduce using rule 196 (literal -> StringLiteral .)
    FRPAREN         reduce using rule 196 (literal -> StringLiteral .)
    COMMA           reduce using rule 196 (literal -> StringLiteral .)
    BRPAREN         reduce using rule 196 (literal -> StringLiteral .)


state 138

    (358) primary -> primitiveType . expt_24 DOT CLASS
    (359) primary -> primitiveType . DOT CLASS
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN

    DOT             shift and go to state 246
    FLPAREN         shift and go to state 245

    expt_24                        shift and go to state 244

state 139

    (158) primitiveType -> BOOLEAN .

    DOT             reduce using rule 158 (primitiveType -> BOOLEAN .)
    FLPAREN         reduce using rule 158 (primitiveType -> BOOLEAN .)
    COMMA           reduce using rule 158 (primitiveType -> BOOLEAN .)
    BLPAREN         reduce using rule 158 (primitiveType -> BOOLEAN .)
    Identifier      reduce using rule 158 (primitiveType -> BOOLEAN .)
    RPAREN          reduce using rule 158 (primitiveType -> BOOLEAN .)
    OP_ARRAY        reduce using rule 158 (primitiveType -> BOOLEAN .)
    MORE            reduce using rule 158 (primitiveType -> BOOLEAN .)
    LPAREN          reduce using rule 158 (primitiveType -> BOOLEAN .)
    OP_EQ           reduce using rule 158 (primitiveType -> BOOLEAN .)
    OP_NE           reduce using rule 158 (primitiveType -> BOOLEAN .)
    AND             reduce using rule 158 (primitiveType -> BOOLEAN .)
    CARET           reduce using rule 158 (primitiveType -> BOOLEAN .)
    VERTICAL        reduce using rule 158 (primitiveType -> BOOLEAN .)
    OP_LAND         reduce using rule 158 (primitiveType -> BOOLEAN .)
    OP_LOR          reduce using rule 158 (primitiveType -> BOOLEAN .)
    QUES            reduce using rule 158 (primitiveType -> BOOLEAN .)
    BRPAREN         reduce using rule 158 (primitiveType -> BOOLEAN .)
    EQUALS          reduce using rule 158 (primitiveType -> BOOLEAN .)
    ASS_ADD         reduce using rule 158 (primitiveType -> BOOLEAN .)
    ASS_SUB         reduce using rule 158 (primitiveType -> BOOLEAN .)
    ASS_MUL         reduce using rule 158 (primitiveType -> BOOLEAN .)
    ASS_DIV         reduce using rule 158 (primitiveType -> BOOLEAN .)
    ASS_AND         reduce using rule 158 (primitiveType -> BOOLEAN .)
    ASS_OR          reduce using rule 158 (primitiveType -> BOOLEAN .)
    ASS_XOR         reduce using rule 158 (primitiveType -> BOOLEAN .)
    ASS_MOD         reduce using rule 158 (primitiveType -> BOOLEAN .)
    ASS_SHL         reduce using rule 158 (primitiveType -> BOOLEAN .)
    ASS_SHRR        reduce using rule 158 (primitiveType -> BOOLEAN .)
    ASS_SHR         reduce using rule 158 (primitiveType -> BOOLEAN .)
    FRPAREN         reduce using rule 158 (primitiveType -> BOOLEAN .)
    COLON           reduce using rule 158 (primitiveType -> BOOLEAN .)
    SEMI            reduce using rule 158 (primitiveType -> BOOLEAN .)
    IMPLEMENTS      reduce using rule 158 (primitiveType -> BOOLEAN .)


state 140

    (214) elementValue -> elementValueArrayInitializer .

    COMMA           reduce using rule 214 (elementValue -> elementValueArrayInitializer .)
    RPAREN          reduce using rule 214 (elementValue -> elementValueArrayInitializer .)
    SEMI            reduce using rule 214 (elementValue -> elementValueArrayInitializer .)
    BRPAREN         reduce using rule 214 (elementValue -> elementValueArrayInitializer .)


state 141

    (581) integerLiteral -> HEX_NUMBER .

    OP_INC          reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    OP_DEC          reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    FLPAREN         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    DOT             reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    MULT            reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    SLASH           reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    PERCENT         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    PLUS            reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    DASH            reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    OP_SHR          reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    OP_SHL          reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    OP_SHRR         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    OP_LE           reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    OP_GE           reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    LESS            reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    MORE            reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    INSTANCEOF      reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    OP_EQ           reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    OP_NE           reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    AND             reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    CARET           reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    VERTICAL        reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    OP_LAND         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    OP_LOR          reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    QUES            reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    RPAREN          reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    COMMA           reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    BRPAREN         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    EQUALS          reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    ASS_ADD         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    ASS_SUB         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    ASS_MUL         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    ASS_DIV         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    ASS_AND         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    ASS_OR          reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    ASS_XOR         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    ASS_MOD         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    ASS_SHL         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    ASS_SHRR        reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    ASS_SHR         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    FRPAREN         reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    COLON           reduce using rule 581 (integerLiteral -> HEX_NUMBER .)
    SEMI            reduce using rule 581 (integerLiteral -> HEX_NUMBER .)


state 142

    (578) FloatingPointLiteral -> NON_INTEGER_2 .

    OP_INC          reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_DEC          reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    FLPAREN         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    DOT             reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    MULT            reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    SLASH           reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    PERCENT         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    PLUS            reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    DASH            reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_SHR          reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_SHL          reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_SHRR         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_LE           reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_GE           reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    LESS            reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    MORE            reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    INSTANCEOF      reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_EQ           reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_NE           reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    AND             reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    CARET           reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    VERTICAL        reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_LAND         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_LOR          reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    QUES            reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    EQUALS          reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_ADD         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_SUB         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_MUL         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_DIV         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_AND         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_OR          reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_XOR         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_MOD         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_SHL         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_SHRR        reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_SHR         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    SEMI            reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    COMMA           reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    RPAREN          reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    BRPAREN         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    FRPAREN         reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)
    COLON           reduce using rule 578 (FloatingPointLiteral -> NON_INTEGER_2 .)


state 143

    (579) FloatingPointLiteral -> NON_INTEGER_3 .

    OP_INC          reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_DEC          reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    FLPAREN         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    DOT             reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    MULT            reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    SLASH           reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    PERCENT         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    PLUS            reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    DASH            reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_SHR          reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_SHL          reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_SHRR         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_LE           reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_GE           reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    LESS            reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    MORE            reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    INSTANCEOF      reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_EQ           reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_NE           reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    AND             reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    CARET           reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    VERTICAL        reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_LAND         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_LOR          reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    QUES            reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    EQUALS          reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_ADD         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_SUB         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_MUL         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_DIV         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_AND         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_OR          reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_XOR         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_MOD         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_SHL         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_SHRR        reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_SHR         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    SEMI            reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    COMMA           reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    RPAREN          reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    BRPAREN         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    FRPAREN         reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)
    COLON           reduce using rule 579 (FloatingPointLiteral -> NON_INTEGER_3 .)


state 144

    (577) FloatingPointLiteral -> NON_INTEGER_1 .

    OP_INC          reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_DEC          reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    FLPAREN         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    DOT             reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    MULT            reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    SLASH           reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    PERCENT         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    PLUS            reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    DASH            reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_SHR          reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_SHL          reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_SHRR         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_LE           reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_GE           reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    LESS            reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    MORE            reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    INSTANCEOF      reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_EQ           reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_NE           reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    AND             reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    CARET           reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    VERTICAL        reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_LAND         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_LOR          reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    QUES            reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    EQUALS          reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_ADD         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_SUB         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_MUL         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_DIV         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_AND         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_OR          reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_XOR         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_MOD         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_SHL         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_SHRR        reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_SHR         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    SEMI            reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    COMMA           reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    RPAREN          reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    BRPAREN         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    FRPAREN         reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)
    COLON           reduce using rule 577 (FloatingPointLiteral -> NON_INTEGER_1 .)


state 145

    (339) additiveExpression -> multiplicativeExpression . expt_72
    (340) additiveExpression -> multiplicativeExpression .
    (568) expt_72 -> . expr_12 multiplicativeExpression
    (569) expt_72 -> . expt_72 expr_12 multiplicativeExpression
    (424) expr_12 -> . PLUS
    (425) expr_12 -> . DASH

    OP_SHR          reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    OP_SHL          reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    OP_SHRR         reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    OP_LE           reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    OP_GE           reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    LESS            reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    MORE            reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    INSTANCEOF      reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    OP_EQ           reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    OP_NE           reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    AND             reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    CARET           reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    VERTICAL        reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    OP_LAND         reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    OP_LOR          reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    QUES            reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    EQUALS          reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    ASS_ADD         reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    ASS_SUB         reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    ASS_MUL         reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    ASS_DIV         reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    ASS_AND         reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    ASS_OR          reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    ASS_XOR         reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    ASS_MOD         reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    ASS_SHL         reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    ASS_SHRR        reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    ASS_SHR         reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    SEMI            reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    COMMA           reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    RPAREN          reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    BRPAREN         reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    FRPAREN         reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    COLON           reduce using rule 340 (additiveExpression -> multiplicativeExpression .)
    PLUS            shift and go to state 249
    DASH            shift and go to state 247

    expt_72                        shift and go to state 248
    expr_12                        shift and go to state 250

state 146

    (580) integerLiteral -> NUMBER .

    OP_INC          reduce using rule 580 (integerLiteral -> NUMBER .)
    OP_DEC          reduce using rule 580 (integerLiteral -> NUMBER .)
    FLPAREN         reduce using rule 580 (integerLiteral -> NUMBER .)
    DOT             reduce using rule 580 (integerLiteral -> NUMBER .)
    MULT            reduce using rule 580 (integerLiteral -> NUMBER .)
    SLASH           reduce using rule 580 (integerLiteral -> NUMBER .)
    PERCENT         reduce using rule 580 (integerLiteral -> NUMBER .)
    PLUS            reduce using rule 580 (integerLiteral -> NUMBER .)
    DASH            reduce using rule 580 (integerLiteral -> NUMBER .)
    OP_SHR          reduce using rule 580 (integerLiteral -> NUMBER .)
    OP_SHL          reduce using rule 580 (integerLiteral -> NUMBER .)
    OP_SHRR         reduce using rule 580 (integerLiteral -> NUMBER .)
    OP_LE           reduce using rule 580 (integerLiteral -> NUMBER .)
    OP_GE           reduce using rule 580 (integerLiteral -> NUMBER .)
    LESS            reduce using rule 580 (integerLiteral -> NUMBER .)
    MORE            reduce using rule 580 (integerLiteral -> NUMBER .)
    INSTANCEOF      reduce using rule 580 (integerLiteral -> NUMBER .)
    OP_EQ           reduce using rule 580 (integerLiteral -> NUMBER .)
    OP_NE           reduce using rule 580 (integerLiteral -> NUMBER .)
    AND             reduce using rule 580 (integerLiteral -> NUMBER .)
    CARET           reduce using rule 580 (integerLiteral -> NUMBER .)
    VERTICAL        reduce using rule 580 (integerLiteral -> NUMBER .)
    OP_LAND         reduce using rule 580 (integerLiteral -> NUMBER .)
    OP_LOR          reduce using rule 580 (integerLiteral -> NUMBER .)
    QUES            reduce using rule 580 (integerLiteral -> NUMBER .)
    RPAREN          reduce using rule 580 (integerLiteral -> NUMBER .)
    COMMA           reduce using rule 580 (integerLiteral -> NUMBER .)
    BRPAREN         reduce using rule 580 (integerLiteral -> NUMBER .)
    EQUALS          reduce using rule 580 (integerLiteral -> NUMBER .)
    ASS_ADD         reduce using rule 580 (integerLiteral -> NUMBER .)
    ASS_SUB         reduce using rule 580 (integerLiteral -> NUMBER .)
    ASS_MUL         reduce using rule 580 (integerLiteral -> NUMBER .)
    ASS_DIV         reduce using rule 580 (integerLiteral -> NUMBER .)
    ASS_AND         reduce using rule 580 (integerLiteral -> NUMBER .)
    ASS_OR          reduce using rule 580 (integerLiteral -> NUMBER .)
    ASS_XOR         reduce using rule 580 (integerLiteral -> NUMBER .)
    ASS_MOD         reduce using rule 580 (integerLiteral -> NUMBER .)
    ASS_SHL         reduce using rule 580 (integerLiteral -> NUMBER .)
    ASS_SHRR        reduce using rule 580 (integerLiteral -> NUMBER .)
    ASS_SHR         reduce using rule 580 (integerLiteral -> NUMBER .)
    FRPAREN         reduce using rule 580 (integerLiteral -> NUMBER .)
    COLON           reduce using rule 580 (integerLiteral -> NUMBER .)
    SEMI            reduce using rule 580 (integerLiteral -> NUMBER .)


state 147

    (198) literal -> NULL .

    OP_INC          reduce using rule 198 (literal -> NULL .)
    OP_DEC          reduce using rule 198 (literal -> NULL .)
    FLPAREN         reduce using rule 198 (literal -> NULL .)
    DOT             reduce using rule 198 (literal -> NULL .)
    MULT            reduce using rule 198 (literal -> NULL .)
    SLASH           reduce using rule 198 (literal -> NULL .)
    PERCENT         reduce using rule 198 (literal -> NULL .)
    PLUS            reduce using rule 198 (literal -> NULL .)
    DASH            reduce using rule 198 (literal -> NULL .)
    OP_SHR          reduce using rule 198 (literal -> NULL .)
    OP_SHL          reduce using rule 198 (literal -> NULL .)
    OP_SHRR         reduce using rule 198 (literal -> NULL .)
    OP_LE           reduce using rule 198 (literal -> NULL .)
    OP_GE           reduce using rule 198 (literal -> NULL .)
    LESS            reduce using rule 198 (literal -> NULL .)
    MORE            reduce using rule 198 (literal -> NULL .)
    INSTANCEOF      reduce using rule 198 (literal -> NULL .)
    OP_EQ           reduce using rule 198 (literal -> NULL .)
    OP_NE           reduce using rule 198 (literal -> NULL .)
    AND             reduce using rule 198 (literal -> NULL .)
    CARET           reduce using rule 198 (literal -> NULL .)
    VERTICAL        reduce using rule 198 (literal -> NULL .)
    OP_LAND         reduce using rule 198 (literal -> NULL .)
    OP_LOR          reduce using rule 198 (literal -> NULL .)
    QUES            reduce using rule 198 (literal -> NULL .)
    EQUALS          reduce using rule 198 (literal -> NULL .)
    ASS_ADD         reduce using rule 198 (literal -> NULL .)
    ASS_SUB         reduce using rule 198 (literal -> NULL .)
    ASS_MUL         reduce using rule 198 (literal -> NULL .)
    ASS_DIV         reduce using rule 198 (literal -> NULL .)
    ASS_AND         reduce using rule 198 (literal -> NULL .)
    ASS_OR          reduce using rule 198 (literal -> NULL .)
    ASS_XOR         reduce using rule 198 (literal -> NULL .)
    ASS_MOD         reduce using rule 198 (literal -> NULL .)
    ASS_SHL         reduce using rule 198 (literal -> NULL .)
    ASS_SHRR        reduce using rule 198 (literal -> NULL .)
    ASS_SHR         reduce using rule 198 (literal -> NULL .)
    SEMI            reduce using rule 198 (literal -> NULL .)
    COLON           reduce using rule 198 (literal -> NULL .)
    RPAREN          reduce using rule 198 (literal -> NULL .)
    FRPAREN         reduce using rule 198 (literal -> NULL .)
    COMMA           reduce using rule 198 (literal -> NULL .)
    BRPAREN         reduce using rule 198 (literal -> NULL .)


state 148

    (328) relationalExpression -> shiftExpression . expt_70
    (329) relationalExpression -> shiftExpression .
    (564) expt_70 -> . relationalOp shiftExpression
    (565) expt_70 -> . expt_70 relationalOp shiftExpression
    (330) relationalOp -> . OP_LE
    (331) relationalOp -> . OP_GE
    (332) relationalOp -> . LESS
    (333) relationalOp -> . MORE

    INSTANCEOF      reduce using rule 329 (relationalExpression -> shiftExpression .)
    OP_EQ           reduce using rule 329 (relationalExpression -> shiftExpression .)
    OP_NE           reduce using rule 329 (relationalExpression -> shiftExpression .)
    AND             reduce using rule 329 (relationalExpression -> shiftExpression .)
    CARET           reduce using rule 329 (relationalExpression -> shiftExpression .)
    VERTICAL        reduce using rule 329 (relationalExpression -> shiftExpression .)
    OP_LAND         reduce using rule 329 (relationalExpression -> shiftExpression .)
    OP_LOR          reduce using rule 329 (relationalExpression -> shiftExpression .)
    QUES            reduce using rule 329 (relationalExpression -> shiftExpression .)
    COMMA           reduce using rule 329 (relationalExpression -> shiftExpression .)
    RPAREN          reduce using rule 329 (relationalExpression -> shiftExpression .)
    EQUALS          reduce using rule 329 (relationalExpression -> shiftExpression .)
    ASS_ADD         reduce using rule 329 (relationalExpression -> shiftExpression .)
    ASS_SUB         reduce using rule 329 (relationalExpression -> shiftExpression .)
    ASS_MUL         reduce using rule 329 (relationalExpression -> shiftExpression .)
    ASS_DIV         reduce using rule 329 (relationalExpression -> shiftExpression .)
    ASS_AND         reduce using rule 329 (relationalExpression -> shiftExpression .)
    ASS_OR          reduce using rule 329 (relationalExpression -> shiftExpression .)
    ASS_XOR         reduce using rule 329 (relationalExpression -> shiftExpression .)
    ASS_MOD         reduce using rule 329 (relationalExpression -> shiftExpression .)
    ASS_SHL         reduce using rule 329 (relationalExpression -> shiftExpression .)
    ASS_SHRR        reduce using rule 329 (relationalExpression -> shiftExpression .)
    ASS_SHR         reduce using rule 329 (relationalExpression -> shiftExpression .)
    SEMI            reduce using rule 329 (relationalExpression -> shiftExpression .)
    COLON           reduce using rule 329 (relationalExpression -> shiftExpression .)
    BRPAREN         reduce using rule 329 (relationalExpression -> shiftExpression .)
    FRPAREN         reduce using rule 329 (relationalExpression -> shiftExpression .)
    OP_LE           shift and go to state 254
    OP_GE           shift and go to state 252
    LESS            shift and go to state 251
    MORE            shift and go to state 256

    expt_70                        shift and go to state 253
    relationalOp                   shift and go to state 255

state 149

    (341) multiplicativeExpression -> unaryExpression . expt_73
    (342) multiplicativeExpression -> unaryExpression .
    (571) expt_73 -> . sub_expt_73
    (572) expt_73 -> . expt_73 sub_expt_73
    (570) sub_expt_73 -> . expr_13 unaryExpression
    (426) expr_13 -> . MULT
    (427) expr_13 -> . SLASH
    (428) expr_13 -> . PERCENT

    PLUS            reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    DASH            reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    OP_SHR          reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    OP_SHL          reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    OP_SHRR         reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    OP_LE           reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    OP_GE           reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    LESS            reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    MORE            reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    INSTANCEOF      reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    OP_EQ           reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    OP_NE           reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    AND             reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    CARET           reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    VERTICAL        reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    OP_LAND         reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    OP_LOR          reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    QUES            reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    EQUALS          reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    ASS_ADD         reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    ASS_SUB         reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    ASS_MUL         reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    ASS_DIV         reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    ASS_AND         reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    ASS_OR          reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    ASS_XOR         reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    ASS_MOD         reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    ASS_SHL         reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    ASS_SHRR        reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    ASS_SHR         reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    COMMA           reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    RPAREN          reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    SEMI            reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    BRPAREN         reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    FRPAREN         reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    COLON           reduce using rule 342 (multiplicativeExpression -> unaryExpression .)
    MULT            shift and go to state 261
    SLASH           shift and go to state 260
    PERCENT         shift and go to state 258

    sub_expt_73                    shift and go to state 257
    expt_73                        shift and go to state 259
    expr_13                        shift and go to state 262

state 150

    (371) primary -> parExpression .

    OP_INC          reduce using rule 371 (primary -> parExpression .)
    OP_DEC          reduce using rule 371 (primary -> parExpression .)
    FLPAREN         reduce using rule 371 (primary -> parExpression .)
    DOT             reduce using rule 371 (primary -> parExpression .)
    MULT            reduce using rule 371 (primary -> parExpression .)
    SLASH           reduce using rule 371 (primary -> parExpression .)
    PERCENT         reduce using rule 371 (primary -> parExpression .)
    PLUS            reduce using rule 371 (primary -> parExpression .)
    DASH            reduce using rule 371 (primary -> parExpression .)
    OP_SHR          reduce using rule 371 (primary -> parExpression .)
    OP_SHL          reduce using rule 371 (primary -> parExpression .)
    OP_SHRR         reduce using rule 371 (primary -> parExpression .)
    OP_LE           reduce using rule 371 (primary -> parExpression .)
    OP_GE           reduce using rule 371 (primary -> parExpression .)
    LESS            reduce using rule 371 (primary -> parExpression .)
    MORE            reduce using rule 371 (primary -> parExpression .)
    INSTANCEOF      reduce using rule 371 (primary -> parExpression .)
    OP_EQ           reduce using rule 371 (primary -> parExpression .)
    OP_NE           reduce using rule 371 (primary -> parExpression .)
    AND             reduce using rule 371 (primary -> parExpression .)
    CARET           reduce using rule 371 (primary -> parExpression .)
    VERTICAL        reduce using rule 371 (primary -> parExpression .)
    OP_LAND         reduce using rule 371 (primary -> parExpression .)
    OP_LOR          reduce using rule 371 (primary -> parExpression .)
    QUES            reduce using rule 371 (primary -> parExpression .)
    RPAREN          reduce using rule 371 (primary -> parExpression .)
    COMMA           reduce using rule 371 (primary -> parExpression .)
    BRPAREN         reduce using rule 371 (primary -> parExpression .)
    EQUALS          reduce using rule 371 (primary -> parExpression .)
    ASS_ADD         reduce using rule 371 (primary -> parExpression .)
    ASS_SUB         reduce using rule 371 (primary -> parExpression .)
    ASS_MUL         reduce using rule 371 (primary -> parExpression .)
    ASS_DIV         reduce using rule 371 (primary -> parExpression .)
    ASS_AND         reduce using rule 371 (primary -> parExpression .)
    ASS_OR          reduce using rule 371 (primary -> parExpression .)
    ASS_XOR         reduce using rule 371 (primary -> parExpression .)
    ASS_MOD         reduce using rule 371 (primary -> parExpression .)
    ASS_SHL         reduce using rule 371 (primary -> parExpression .)
    ASS_SHRR        reduce using rule 371 (primary -> parExpression .)
    ASS_SHR         reduce using rule 371 (primary -> parExpression .)
    FRPAREN         reduce using rule 371 (primary -> parExpression .)
    COLON           reduce using rule 371 (primary -> parExpression .)
    SEMI            reduce using rule 371 (primary -> parExpression .)


state 151

    (355) castExpression -> LPAREN . primitiveType RPAREN unaryExpression
    (356) castExpression -> LPAREN . expr_15 RPAREN unaryExpressionNotPlusMinus
    (293) parExpression -> LPAREN . expression RPAREN
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (431) expr_15 -> . type
    (432) expr_15 -> . expression
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 266
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    classOrInterfaceType           shift and go to state 164
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    type                           shift and go to state 263
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    expr_15                        shift and go to state 265
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 267
    andExpression                  shift and go to state 121
    expression                     shift and go to state 268

state 152

    (203) annotation -> AT annotationName LPAREN elementValuePairs . RPAREN

    RPAREN          shift and go to state 269


state 153

    (213) elementValue -> annotation .

    COMMA           reduce using rule 213 (elementValue -> annotation .)
    RPAREN          reduce using rule 213 (elementValue -> annotation .)
    SEMI            reduce using rule 213 (elementValue -> annotation .)
    BRPAREN         reduce using rule 213 (elementValue -> annotation .)


state 154

    (352) unaryExpressionNotPlusMinus -> castExpression .

    MULT            reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    SLASH           reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    PERCENT         reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    PLUS            reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    DASH            reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_SHR          reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_SHL          reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_SHRR         reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_LE           reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_GE           reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    LESS            reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    MORE            reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    INSTANCEOF      reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_EQ           reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_NE           reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    AND             reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    CARET           reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    VERTICAL        reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_LAND         reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_LOR          reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    QUES            reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    EQUALS          reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_ADD         reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_SUB         reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_MUL         reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_DIV         reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_AND         reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_OR          reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_XOR         reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_MOD         reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_SHL         reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_SHRR        reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_SHR         reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    FRPAREN         reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    RPAREN          reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    COMMA           reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    BRPAREN         reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    COLON           reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)
    SEMI            reduce using rule 352 (unaryExpressionNotPlusMinus -> castExpression .)


state 155

    (164) primitiveType -> FLOAT .

    DOT             reduce using rule 164 (primitiveType -> FLOAT .)
    FLPAREN         reduce using rule 164 (primitiveType -> FLOAT .)
    COMMA           reduce using rule 164 (primitiveType -> FLOAT .)
    BLPAREN         reduce using rule 164 (primitiveType -> FLOAT .)
    Identifier      reduce using rule 164 (primitiveType -> FLOAT .)
    RPAREN          reduce using rule 164 (primitiveType -> FLOAT .)
    OP_ARRAY        reduce using rule 164 (primitiveType -> FLOAT .)
    MORE            reduce using rule 164 (primitiveType -> FLOAT .)
    LPAREN          reduce using rule 164 (primitiveType -> FLOAT .)
    OP_EQ           reduce using rule 164 (primitiveType -> FLOAT .)
    OP_NE           reduce using rule 164 (primitiveType -> FLOAT .)
    AND             reduce using rule 164 (primitiveType -> FLOAT .)
    CARET           reduce using rule 164 (primitiveType -> FLOAT .)
    VERTICAL        reduce using rule 164 (primitiveType -> FLOAT .)
    OP_LAND         reduce using rule 164 (primitiveType -> FLOAT .)
    OP_LOR          reduce using rule 164 (primitiveType -> FLOAT .)
    QUES            reduce using rule 164 (primitiveType -> FLOAT .)
    BRPAREN         reduce using rule 164 (primitiveType -> FLOAT .)
    EQUALS          reduce using rule 164 (primitiveType -> FLOAT .)
    ASS_ADD         reduce using rule 164 (primitiveType -> FLOAT .)
    ASS_SUB         reduce using rule 164 (primitiveType -> FLOAT .)
    ASS_MUL         reduce using rule 164 (primitiveType -> FLOAT .)
    ASS_DIV         reduce using rule 164 (primitiveType -> FLOAT .)
    ASS_AND         reduce using rule 164 (primitiveType -> FLOAT .)
    ASS_OR          reduce using rule 164 (primitiveType -> FLOAT .)
    ASS_XOR         reduce using rule 164 (primitiveType -> FLOAT .)
    ASS_MOD         reduce using rule 164 (primitiveType -> FLOAT .)
    ASS_SHL         reduce using rule 164 (primitiveType -> FLOAT .)
    ASS_SHRR        reduce using rule 164 (primitiveType -> FLOAT .)
    ASS_SHR         reduce using rule 164 (primitiveType -> FLOAT .)
    FRPAREN         reduce using rule 164 (primitiveType -> FLOAT .)
    COLON           reduce using rule 164 (primitiveType -> FLOAT .)
    SEMI            reduce using rule 164 (primitiveType -> FLOAT .)
    IMPLEMENTS      reduce using rule 164 (primitiveType -> FLOAT .)


state 156

    (366) primary -> SUPER . superSuffix
    (398) superSuffix -> . DOT Identifier expt_18
    (399) superSuffix -> . DOT Identifier empty
    (400) superSuffix -> . arguments
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

    DOT             shift and go to state 271
    LPAREN          shift and go to state 204

    superSuffix                    shift and go to state 270
    arguments                      shift and go to state 272

state 157

    (204) annotation -> AT annotationName LPAREN elementValue . RPAREN

    RPAREN          shift and go to state 273


state 158

    (521) expt_42 -> expt_42 DOT Identifier .

    DOT             reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    FLPAREN         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    LPAREN          reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    OP_INC          reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    OP_DEC          reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    MULT            reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    SLASH           reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    PERCENT         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    PLUS            reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    DASH            reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    OP_SHR          reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    OP_SHL          reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    OP_SHRR         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    OP_LE           reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    OP_GE           reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    LESS            reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    MORE            reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    INSTANCEOF      reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    OP_EQ           reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    OP_NE           reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    AND             reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    CARET           reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    VERTICAL        reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    OP_LAND         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    OP_LOR          reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    QUES            reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    EQUALS          reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    ASS_ADD         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    ASS_SUB         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    ASS_MUL         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    ASS_DIV         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    ASS_AND         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    ASS_OR          reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    ASS_XOR         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    ASS_MOD         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    ASS_SHL         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    ASS_SHRR        reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    ASS_SHR         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    COLON           reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    SEMI            reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    COMMA           reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    BLPAREN         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    RPAREN          reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    BRPAREN         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    FRPAREN         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    AT              reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    PACKAGE         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    PUBLIC          reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    PROTECTED       reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    PRIVATE         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    ABSTRACT        reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    STATIC          reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    FINAL           reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    STRICTFP        reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    CLASS           reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    ENUM            reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    INTERFACE       reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    Identifier      reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    NATIVE          reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    SYNCHRONIZED    reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    TRANSIENT       reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    VOLATILE        reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    BOOLEAN         reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    CHAR            reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    BYTE            reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    SHORT           reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    INT             reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    LONG            reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    FLOAT           reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    DOUBLE          reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)
    VOID            reduce using rule 521 (expt_42 -> expt_42 DOT Identifier .)


state 159

    (13) importDeclaration -> IMPORT qualifiedName expt_4 SEMI .

    IMPORT          reduce using rule 13 (importDeclaration -> IMPORT qualifiedName expt_4 SEMI .)
    SEMI            reduce using rule 13 (importDeclaration -> IMPORT qualifiedName expt_4 SEMI .)
    PUBLIC          reduce using rule 13 (importDeclaration -> IMPORT qualifiedName expt_4 SEMI .)
    PROTECTED       reduce using rule 13 (importDeclaration -> IMPORT qualifiedName expt_4 SEMI .)
    PRIVATE         reduce using rule 13 (importDeclaration -> IMPORT qualifiedName expt_4 SEMI .)
    ABSTRACT        reduce using rule 13 (importDeclaration -> IMPORT qualifiedName expt_4 SEMI .)
    STATIC          reduce using rule 13 (importDeclaration -> IMPORT qualifiedName expt_4 SEMI .)
    FINAL           reduce using rule 13 (importDeclaration -> IMPORT qualifiedName expt_4 SEMI .)
    STRICTFP        reduce using rule 13 (importDeclaration -> IMPORT qualifiedName expt_4 SEMI .)
    CLASS           reduce using rule 13 (importDeclaration -> IMPORT qualifiedName expt_4 SEMI .)
    ENUM            reduce using rule 13 (importDeclaration -> IMPORT qualifiedName expt_4 SEMI .)
    INTERFACE       reduce using rule 13 (importDeclaration -> IMPORT qualifiedName expt_4 SEMI .)
    AT              reduce using rule 13 (importDeclaration -> IMPORT qualifiedName expt_4 SEMI .)
    $end            reduce using rule 13 (importDeclaration -> IMPORT qualifiedName expt_4 SEMI .)


state 160

    (447) expt_4 -> DOT MULT .

    SEMI            reduce using rule 447 (expt_4 -> DOT MULT .)


state 161

    (12) importDeclaration -> IMPORT expt_3 qualifiedName SEMI .

    IMPORT          reduce using rule 12 (importDeclaration -> IMPORT expt_3 qualifiedName SEMI .)
    SEMI            reduce using rule 12 (importDeclaration -> IMPORT expt_3 qualifiedName SEMI .)
    PUBLIC          reduce using rule 12 (importDeclaration -> IMPORT expt_3 qualifiedName SEMI .)
    PROTECTED       reduce using rule 12 (importDeclaration -> IMPORT expt_3 qualifiedName SEMI .)
    PRIVATE         reduce using rule 12 (importDeclaration -> IMPORT expt_3 qualifiedName SEMI .)
    ABSTRACT        reduce using rule 12 (importDeclaration -> IMPORT expt_3 qualifiedName SEMI .)
    STATIC          reduce using rule 12 (importDeclaration -> IMPORT expt_3 qualifiedName SEMI .)
    FINAL           reduce using rule 12 (importDeclaration -> IMPORT expt_3 qualifiedName SEMI .)
    STRICTFP        reduce using rule 12 (importDeclaration -> IMPORT expt_3 qualifiedName SEMI .)
    CLASS           reduce using rule 12 (importDeclaration -> IMPORT expt_3 qualifiedName SEMI .)
    ENUM            reduce using rule 12 (importDeclaration -> IMPORT expt_3 qualifiedName SEMI .)
    INTERFACE       reduce using rule 12 (importDeclaration -> IMPORT expt_3 qualifiedName SEMI .)
    AT              reduce using rule 12 (importDeclaration -> IMPORT expt_3 qualifiedName SEMI .)
    $end            reduce using rule 12 (importDeclaration -> IMPORT expt_3 qualifiedName SEMI .)


state 162

    (11) importDeclaration -> IMPORT expt_3 qualifiedName expt_4 . SEMI

    SEMI            shift and go to state 274


state 163

    (456) expt_9 -> IMPLEMENTS typeList .

    BLPAREN         reduce using rule 456 (expt_9 -> IMPLEMENTS typeList .)


state 164

    (152) type -> classOrInterfaceType . expt_24
    (153) type -> classOrInterfaceType . empty
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN
    (584) empty -> .

    FLPAREN         shift and go to state 245
    COMMA           reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)
    RPAREN          reduce using rule 584 (empty -> .)
    IMPLEMENTS      reduce using rule 584 (empty -> .)
    OP_EQ           reduce using rule 584 (empty -> .)
    OP_NE           reduce using rule 584 (empty -> .)
    AND             reduce using rule 584 (empty -> .)
    CARET           reduce using rule 584 (empty -> .)
    VERTICAL        reduce using rule 584 (empty -> .)
    OP_LAND         reduce using rule 584 (empty -> .)
    OP_LOR          reduce using rule 584 (empty -> .)
    QUES            reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)
    EQUALS          reduce using rule 584 (empty -> .)
    ASS_ADD         reduce using rule 584 (empty -> .)
    ASS_SUB         reduce using rule 584 (empty -> .)
    ASS_MUL         reduce using rule 584 (empty -> .)
    ASS_DIV         reduce using rule 584 (empty -> .)
    ASS_AND         reduce using rule 584 (empty -> .)
    ASS_OR          reduce using rule 584 (empty -> .)
    ASS_XOR         reduce using rule 584 (empty -> .)
    ASS_MOD         reduce using rule 584 (empty -> .)
    ASS_SHL         reduce using rule 584 (empty -> .)
    ASS_SHRR        reduce using rule 584 (empty -> .)
    ASS_SHR         reduce using rule 584 (empty -> .)
    FRPAREN         reduce using rule 584 (empty -> .)
    COLON           reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)
    MORE            reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    OP_ARRAY        reduce using rule 584 (empty -> .)

    expt_24                        shift and go to state 275
    empty                          shift and go to state 276

state 165

    (150) type -> primitiveType . expt_24
    (151) type -> primitiveType . empty
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN
    (584) empty -> .

    FLPAREN         shift and go to state 245
    COMMA           reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)
    IMPLEMENTS      reduce using rule 584 (empty -> .)
    OP_EQ           reduce using rule 584 (empty -> .)
    OP_NE           reduce using rule 584 (empty -> .)
    AND             reduce using rule 584 (empty -> .)
    CARET           reduce using rule 584 (empty -> .)
    VERTICAL        reduce using rule 584 (empty -> .)
    OP_LAND         reduce using rule 584 (empty -> .)
    OP_LOR          reduce using rule 584 (empty -> .)
    QUES            reduce using rule 584 (empty -> .)
    RPAREN          reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)
    EQUALS          reduce using rule 584 (empty -> .)
    ASS_ADD         reduce using rule 584 (empty -> .)
    ASS_SUB         reduce using rule 584 (empty -> .)
    ASS_MUL         reduce using rule 584 (empty -> .)
    ASS_DIV         reduce using rule 584 (empty -> .)
    ASS_AND         reduce using rule 584 (empty -> .)
    ASS_OR          reduce using rule 584 (empty -> .)
    ASS_XOR         reduce using rule 584 (empty -> .)
    ASS_MOD         reduce using rule 584 (empty -> .)
    ASS_SHL         reduce using rule 584 (empty -> .)
    ASS_SHRR        reduce using rule 584 (empty -> .)
    ASS_SHR         reduce using rule 584 (empty -> .)
    FRPAREN         reduce using rule 584 (empty -> .)
    COLON           reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)
    MORE            reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    OP_ARRAY        reduce using rule 584 (empty -> .)

    expt_24                        shift and go to state 277
    empty                          shift and go to state 278

state 166

    (154) classOrInterfaceType -> Identifier . expt_32 expt_33
    (155) classOrInterfaceType -> Identifier . expt_32 empty
    (156) classOrInterfaceType -> Identifier . empty expt_33
    (157) classOrInterfaceType -> Identifier . empty empty
    (500) expt_32 -> . typeArguments
    (501) expt_32 -> . empty
    (584) empty -> .
    (168) typeArguments -> . LESS typeArgument expt_34 MORE
    (169) typeArguments -> . LESS typeArgument MORE

    DOT             reduce using rule 584 (empty -> .)
    FLPAREN         reduce using rule 584 (empty -> .)
    COMMA           reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)
    LPAREN          reduce using rule 584 (empty -> .)
    IMPLEMENTS      reduce using rule 584 (empty -> .)
    OP_EQ           reduce using rule 584 (empty -> .)
    OP_NE           reduce using rule 584 (empty -> .)
    AND             reduce using rule 584 (empty -> .)
    CARET           reduce using rule 584 (empty -> .)
    VERTICAL        reduce using rule 584 (empty -> .)
    OP_LAND         reduce using rule 584 (empty -> .)
    OP_LOR          reduce using rule 584 (empty -> .)
    QUES            reduce using rule 584 (empty -> .)
    RPAREN          reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)
    EQUALS          reduce using rule 584 (empty -> .)
    ASS_ADD         reduce using rule 584 (empty -> .)
    ASS_SUB         reduce using rule 584 (empty -> .)
    ASS_MUL         reduce using rule 584 (empty -> .)
    ASS_DIV         reduce using rule 584 (empty -> .)
    ASS_AND         reduce using rule 584 (empty -> .)
    ASS_OR          reduce using rule 584 (empty -> .)
    ASS_XOR         reduce using rule 584 (empty -> .)
    ASS_MOD         reduce using rule 584 (empty -> .)
    ASS_SHL         reduce using rule 584 (empty -> .)
    ASS_SHRR        reduce using rule 584 (empty -> .)
    ASS_SHR         reduce using rule 584 (empty -> .)
    FRPAREN         reduce using rule 584 (empty -> .)
    COLON           reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)
    MORE            reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    OP_ARRAY        reduce using rule 584 (empty -> .)
    LESS            shift and go to state 279

    typeArguments                  shift and go to state 280
    expt_32                        shift and go to state 281
    empty                          shift and go to state 282

state 167

    (75) typeList -> type . expt_22
    (76) typeList -> type . empty
    (480) expt_22 -> . COMMA type
    (481) expt_22 -> . expt_22 COMMA type
    (584) empty -> .

    COMMA           shift and go to state 283
    BLPAREN         reduce using rule 584 (empty -> .)
    MORE            reduce using rule 584 (empty -> .)

    expt_22                        shift and go to state 284
    empty                          shift and go to state 285

state 168

    (47) enumDeclaration -> ENUM Identifier expt_9 enumBody .

    SEMI            reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    PUBLIC          reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    PROTECTED       reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    PRIVATE         reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    ABSTRACT        reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    STATIC          reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    FINAL           reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    STRICTFP        reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    CLASS           reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    ENUM            reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    INTERFACE       reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    AT              reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    $end            reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    BRPAREN         reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    NATIVE          reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    SYNCHRONIZED    reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    TRANSIENT       reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    VOLATILE        reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    BOOLEAN         reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    CHAR            reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    BYTE            reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    SHORT           reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    INT             reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    LONG            reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    FLOAT           reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    DOUBLE          reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    Identifier      reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    CONTINUE        reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    BREAK           reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    THROW           reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    RETURN          reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    SWITCH          reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    TRY             reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    DO              reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    WHILE           reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    FOR             reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    IF              reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    ASSERT          reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    BLPAREN         reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    PLUS            reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    DASH            reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    OP_INC          reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    OP_DEC          reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    EXCLAMATION     reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    TILDE           reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    VOID            reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    NEW             reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    SUPER           reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    THIS            reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    LPAREN          reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    CharacterLiteral reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    StringLiteral   reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    NULL            reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    NUMBER          reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    HEX_NUMBER      reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    LONG_NUMBER     reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    LONG_HEX_NUMBER reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    NON_INTEGER_1   reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    NON_INTEGER_2   reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    NON_INTEGER_3   reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    TRUE            reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    FALSE           reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    LESS            reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    CASE            reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)
    DEFAULT         reduce using rule 47 (enumDeclaration -> ENUM Identifier expt_9 enumBody .)


state 169

    (49) enumBody -> BLPAREN . expt_13 expt_14 expt_15 BRPAREN
    (50) enumBody -> BLPAREN . expt_13 expt_14 empty BRPAREN
    (51) enumBody -> BLPAREN . expt_13 empty expt_15 BRPAREN
    (52) enumBody -> BLPAREN . expt_13 empty empty BRPAREN
    (53) enumBody -> BLPAREN . empty expt_14 expt_15 BRPAREN
    (54) enumBody -> BLPAREN . empty expt_14 empty BRPAREN
    (55) enumBody -> BLPAREN . empty empty expt_15 BRPAREN
    (56) enumBody -> BLPAREN . empty empty empty BRPAREN
    (464) expt_13 -> . enumConstants
    (465) expt_13 -> . empty
    (584) empty -> .
    (57) enumConstants -> . enumConstant expt_16
    (58) enumConstants -> . enumConstant empty
    (59) enumConstant -> . expt_17 Identifier expt_18 classBody
    (60) enumConstant -> . expt_17 Identifier expt_18
    (61) enumConstant -> . expt_17 Identifier classBody
    (62) enumConstant -> . expt_17 Identifier
    (63) enumConstant -> . Identifier expt_18 classBody
    (64) enumConstant -> . Identifier expt_18
    (65) enumConstant -> . Identifier classBody
    (66) enumConstant -> . Identifier
    (472) expt_17 -> . annotations
    (473) expt_17 -> . empty
    (201) annotations -> . annotation
    (202) annotations -> . annotations annotation
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for Identifier resolved as shift
    COMMA           reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)
    Identifier      shift and go to state 291
    AT              shift and go to state 8

  ! Identifier      [ reduce using rule 584 (empty -> .) ]

    enumConstant                   shift and go to state 286
    expt_17                        shift and go to state 288
    enumConstants                  shift and go to state 290
    expt_13                        shift and go to state 289
    annotation                     shift and go to state 4
    annotations                    shift and go to state 287
    empty                          shift and go to state 292

state 170

    (48) enumDeclaration -> ENUM Identifier empty enumBody .

    SEMI            reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    PUBLIC          reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    PROTECTED       reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    PRIVATE         reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    ABSTRACT        reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    STATIC          reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    FINAL           reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    STRICTFP        reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    CLASS           reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    ENUM            reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    INTERFACE       reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    AT              reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    $end            reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    BRPAREN         reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    NATIVE          reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    SYNCHRONIZED    reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    TRANSIENT       reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    VOLATILE        reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    BOOLEAN         reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    CHAR            reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    BYTE            reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    SHORT           reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    INT             reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    LONG            reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    FLOAT           reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    DOUBLE          reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    Identifier      reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    CONTINUE        reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    BREAK           reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    THROW           reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    RETURN          reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    SWITCH          reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    TRY             reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    DO              reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    WHILE           reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    FOR             reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    IF              reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    ASSERT          reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    BLPAREN         reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    PLUS            reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    DASH            reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    OP_INC          reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    OP_DEC          reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    EXCLAMATION     reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    TILDE           reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    VOID            reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    NEW             reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    SUPER           reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    THIS            reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    LPAREN          reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    CharacterLiteral reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    StringLiteral   reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    NULL            reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    NUMBER          reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    HEX_NUMBER      reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    LONG_NUMBER     reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    LONG_HEX_NUMBER reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    NON_INTEGER_1   reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    NON_INTEGER_2   reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    NON_INTEGER_3   reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    TRUE            reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    FALSE           reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    LESS            reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    CASE            reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)
    DEFAULT         reduce using rule 48 (enumDeclaration -> ENUM Identifier empty enumBody .)


state 171

    (219) annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .

    SEMI            reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    Identifier      reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    CONTINUE        reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    BREAK           reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    THROW           reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    RETURN          reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    SYNCHRONIZED    reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    SWITCH          reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    TRY             reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    DO              reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    WHILE           reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    FOR             reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    IF              reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    ASSERT          reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    BLPAREN         reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    BOOLEAN         reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    CHAR            reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    BYTE            reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    SHORT           reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    INT             reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    LONG            reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    FLOAT           reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    DOUBLE          reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    PUBLIC          reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    PROTECTED       reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    PRIVATE         reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    ABSTRACT        reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    STATIC          reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    FINAL           reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    STRICTFP        reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    CLASS           reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    ENUM            reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    INTERFACE       reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    AT              reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    PLUS            reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    DASH            reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    OP_INC          reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    OP_DEC          reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    EXCLAMATION     reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    TILDE           reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    VOID            reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    NEW             reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    SUPER           reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    THIS            reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    LPAREN          reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    CharacterLiteral reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    StringLiteral   reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    NULL            reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    NUMBER          reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    HEX_NUMBER      reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    LONG_NUMBER     reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    LONG_HEX_NUMBER reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    NON_INTEGER_1   reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    NON_INTEGER_2   reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    NON_INTEGER_3   reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    TRUE            reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    FALSE           reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    CASE            reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    DEFAULT         reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    BRPAREN         reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    NATIVE          reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    TRANSIENT       reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    VOLATILE        reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    LESS            reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    $end            reduce using rule 219 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)


state 172

    (220) annotationTypeBody -> BLPAREN . expt_47 BRPAREN
    (221) annotationTypeBody -> BLPAREN . empty BRPAREN
    (528) expt_47 -> . annotationTypeElementDeclaration
    (529) expt_47 -> . expt_47 annotationTypeElementDeclaration
    (584) empty -> .
    (222) annotationTypeElementDeclaration -> . modifiers annotationTypeElementRest
    (29) modifiers -> . expt_6
    (30) modifiers -> . empty
    (451) expt_6 -> . modifier
    (452) expt_6 -> . expt_6 modifier
    (137) modifier -> . annotation
    (138) modifier -> . PUBLIC
    (139) modifier -> . PROTECTED
    (140) modifier -> . PRIVATE
    (141) modifier -> . STATIC
    (142) modifier -> . ABSTRACT
    (143) modifier -> . FINAL
    (144) modifier -> . NATIVE
    (145) modifier -> . SYNCHRONIZED
    (146) modifier -> . TRANSIENT
    (147) modifier -> . VOLATILE
    (148) modifier -> . STRICTFP
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for AT resolved as shift
    BRPAREN         reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    BOOLEAN         reduce using rule 584 (empty -> .)
    CHAR            reduce using rule 584 (empty -> .)
    BYTE            reduce using rule 584 (empty -> .)
    SHORT           reduce using rule 584 (empty -> .)
    INT             reduce using rule 584 (empty -> .)
    LONG            reduce using rule 584 (empty -> .)
    FLOAT           reduce using rule 584 (empty -> .)
    DOUBLE          reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    PUBLIC          shift and go to state 310
    PROTECTED       shift and go to state 295
    PRIVATE         shift and go to state 300
    STATIC          shift and go to state 296
    ABSTRACT        shift and go to state 294
    FINAL           shift and go to state 297
    NATIVE          shift and go to state 298
    SYNCHRONIZED    shift and go to state 293
    TRANSIENT       shift and go to state 307
    VOLATILE        shift and go to state 308
    STRICTFP        shift and go to state 301
    AT              shift and go to state 8

  ! AT              [ reduce using rule 584 (empty -> .) ]

    modifiers                      shift and go to state 306
    expt_6                         shift and go to state 299
    annotationTypeElementDeclaration shift and go to state 305
    expt_47                        shift and go to state 302
    modifier                       shift and go to state 309
    annotation                     shift and go to state 304
    empty                          shift and go to state 303

state 173

    (41) typeParameters -> LESS typeParameter . expt_10 MORE
    (42) typeParameters -> LESS typeParameter . empty MORE
    (458) expt_10 -> . COMMA typeParameter
    (459) expt_10 -> . expt_10 COMMA typeParameter
    (584) empty -> .

    COMMA           shift and go to state 311
    MORE            reduce using rule 584 (empty -> .)

    empty                          shift and go to state 313
    expt_10                        shift and go to state 312

state 174

    (43) typeParameter -> Identifier . expt_11
    (44) typeParameter -> Identifier . empty
    (460) expt_11 -> . EXTENDS typeBound
    (461) expt_11 -> . empty
    (584) empty -> .

    EXTENDS         shift and go to state 314
    COMMA           reduce using rule 584 (empty -> .)
    MORE            reduce using rule 584 (empty -> .)

    empty                          shift and go to state 315
    expt_11                        shift and go to state 316

state 175

    (33) normalClassDeclaration -> CLASS Identifier typeParameters expt_8 . expt_9 classBody
    (34) normalClassDeclaration -> CLASS Identifier typeParameters expt_8 . empty classBody
    (456) expt_9 -> . IMPLEMENTS typeList
    (457) expt_9 -> . empty
    (584) empty -> .

    IMPLEMENTS      shift and go to state 87
    BLPAREN         reduce using rule 584 (empty -> .)

    expt_9                         shift and go to state 317
    empty                          shift and go to state 318

state 176

    (455) expt_8 -> EXTENDS . type
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    type                           shift and go to state 319

state 177

    (35) normalClassDeclaration -> CLASS Identifier typeParameters empty . expt_9 classBody
    (36) normalClassDeclaration -> CLASS Identifier typeParameters empty . empty classBody
    (456) expt_9 -> . IMPLEMENTS typeList
    (457) expt_9 -> . empty
    (584) empty -> .

    IMPLEMENTS      shift and go to state 87
    BLPAREN         reduce using rule 584 (empty -> .)

    expt_9                         shift and go to state 320
    empty                          shift and go to state 321

state 178

    (37) normalClassDeclaration -> CLASS Identifier empty expt_8 . expt_9 classBody
    (38) normalClassDeclaration -> CLASS Identifier empty expt_8 . empty classBody
    (456) expt_9 -> . IMPLEMENTS typeList
    (457) expt_9 -> . empty
    (584) empty -> .

    IMPLEMENTS      shift and go to state 87
    BLPAREN         reduce using rule 584 (empty -> .)

    expt_9                         shift and go to state 322
    empty                          shift and go to state 323

state 179

    (39) normalClassDeclaration -> CLASS Identifier empty empty . expt_9 classBody
    (40) normalClassDeclaration -> CLASS Identifier empty empty . empty classBody
    (456) expt_9 -> . IMPLEMENTS typeList
    (457) expt_9 -> . empty
    (584) empty -> .

    IMPLEMENTS      shift and go to state 87
    BLPAREN         reduce using rule 584 (empty -> .)

    expt_9                         shift and go to state 324
    empty                          shift and go to state 325

state 180

    (71) normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 . interfaceBody
    (79) interfaceBody -> . BLPAREN expt_23 BRPAREN
    (80) interfaceBody -> . BLPAREN empty BRPAREN

    BLPAREN         shift and go to state 327

    interfaceBody                  shift and go to state 326

state 181

    (478) expt_21 -> EXTENDS . typeList
    (75) typeList -> . type expt_22
    (76) typeList -> . type empty
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    typeList                       shift and go to state 328
    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    type                           shift and go to state 167

state 182

    (72) normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty . interfaceBody
    (479) expt_21 -> empty .
    (79) interfaceBody -> . BLPAREN expt_23 BRPAREN
    (80) interfaceBody -> . BLPAREN empty BRPAREN

  ! shift/reduce conflict for BLPAREN resolved as shift
    BLPAREN         shift and go to state 327

  ! BLPAREN         [ reduce using rule 479 (expt_21 -> empty .) ]

    interfaceBody                  shift and go to state 329

state 183

    (73) normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 . interfaceBody
    (79) interfaceBody -> . BLPAREN expt_23 BRPAREN
    (80) interfaceBody -> . BLPAREN empty BRPAREN

    BLPAREN         shift and go to state 327

    interfaceBody                  shift and go to state 330

state 184

    (74) normalInterfaceDeclaration -> INTERFACE Identifier empty empty . interfaceBody
    (479) expt_21 -> empty .
    (79) interfaceBody -> . BLPAREN expt_23 BRPAREN
    (80) interfaceBody -> . BLPAREN empty BRPAREN

  ! shift/reduce conflict for BLPAREN resolved as shift
    BLPAREN         shift and go to state 327

  ! BLPAREN         [ reduce using rule 479 (expt_21 -> empty .) ]

    interfaceBody                  shift and go to state 331

state 185

    (353) unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .

    MULT            reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    SLASH           reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    PERCENT         reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    PLUS            reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    DASH            reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_SHR          reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_SHL          reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_SHRR         reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_LE           reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_GE           reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    LESS            reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    MORE            reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    INSTANCEOF      reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_EQ           reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_NE           reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    AND             reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    CARET           reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    VERTICAL        reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_LAND         reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_LOR          reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    QUES            reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    EQUALS          reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_ADD         reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_SUB         reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_MUL         reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_DIV         reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_AND         reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_OR          reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_XOR         reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_MOD         reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_SHL         reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_SHRR        reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_SHR         reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    FRPAREN         reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    RPAREN          reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    COMMA           reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    BRPAREN         reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    COLON           reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    SEMI            reduce using rule 353 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)


state 186

    (360) primary -> Identifier . expt_42 identifierSuffix
    (361) primary -> Identifier . expt_42
    (362) primary -> Identifier . identifierSuffix
    (363) primary -> Identifier .
    (520) expt_42 -> . DOT Identifier
    (521) expt_42 -> . expt_42 DOT Identifier
    (372) identifierSuffix -> . suffixStatements DOT CLASS
    (373) identifierSuffix -> . suffixExprStatements
    (374) identifierSuffix -> . arguments
    (375) identifierSuffix -> . DOT CLASS
    (376) identifierSuffix -> . DOT explicitGenericInvocation
    (377) identifierSuffix -> . DOT THIS
    (378) identifierSuffix -> . DOT SUPER arguments
    (379) identifierSuffix -> . DOT NEW innerCreator
    (433) suffixStatements -> . FLPAREN FRPAREN
    (434) suffixStatements -> . suffixStatements FLPAREN FRPAREN
    (435) suffixExprStatements -> . FLPAREN expression FRPAREN
    (436) suffixExprStatements -> . suffixExprStatements FLPAREN expression FRPAREN
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 363 (primary -> Identifier .)
    OP_DEC          reduce using rule 363 (primary -> Identifier .)
    MULT            reduce using rule 363 (primary -> Identifier .)
    SLASH           reduce using rule 363 (primary -> Identifier .)
    PERCENT         reduce using rule 363 (primary -> Identifier .)
    PLUS            reduce using rule 363 (primary -> Identifier .)
    DASH            reduce using rule 363 (primary -> Identifier .)
    OP_SHR          reduce using rule 363 (primary -> Identifier .)
    OP_SHL          reduce using rule 363 (primary -> Identifier .)
    OP_SHRR         reduce using rule 363 (primary -> Identifier .)
    OP_LE           reduce using rule 363 (primary -> Identifier .)
    OP_GE           reduce using rule 363 (primary -> Identifier .)
    LESS            reduce using rule 363 (primary -> Identifier .)
    MORE            reduce using rule 363 (primary -> Identifier .)
    INSTANCEOF      reduce using rule 363 (primary -> Identifier .)
    OP_EQ           reduce using rule 363 (primary -> Identifier .)
    OP_NE           reduce using rule 363 (primary -> Identifier .)
    AND             reduce using rule 363 (primary -> Identifier .)
    CARET           reduce using rule 363 (primary -> Identifier .)
    VERTICAL        reduce using rule 363 (primary -> Identifier .)
    OP_LAND         reduce using rule 363 (primary -> Identifier .)
    OP_LOR          reduce using rule 363 (primary -> Identifier .)
    QUES            reduce using rule 363 (primary -> Identifier .)
    RPAREN          reduce using rule 363 (primary -> Identifier .)
    COMMA           reduce using rule 363 (primary -> Identifier .)
    BRPAREN         reduce using rule 363 (primary -> Identifier .)
    EQUALS          reduce using rule 363 (primary -> Identifier .)
    ASS_ADD         reduce using rule 363 (primary -> Identifier .)
    ASS_SUB         reduce using rule 363 (primary -> Identifier .)
    ASS_MUL         reduce using rule 363 (primary -> Identifier .)
    ASS_DIV         reduce using rule 363 (primary -> Identifier .)
    ASS_AND         reduce using rule 363 (primary -> Identifier .)
    ASS_OR          reduce using rule 363 (primary -> Identifier .)
    ASS_XOR         reduce using rule 363 (primary -> Identifier .)
    ASS_MOD         reduce using rule 363 (primary -> Identifier .)
    ASS_SHL         reduce using rule 363 (primary -> Identifier .)
    ASS_SHRR        reduce using rule 363 (primary -> Identifier .)
    ASS_SHR         reduce using rule 363 (primary -> Identifier .)
    FRPAREN         reduce using rule 363 (primary -> Identifier .)
    COLON           reduce using rule 363 (primary -> Identifier .)
    SEMI            reduce using rule 363 (primary -> Identifier .)
    DOT             shift and go to state 205
    FLPAREN         shift and go to state 201
    LPAREN          shift and go to state 204

  ! FLPAREN         [ reduce using rule 363 (primary -> Identifier .) ]
  ! DOT             [ reduce using rule 363 (primary -> Identifier .) ]

    identifierSuffix               shift and go to state 217
    suffixStatements               shift and go to state 200
    suffixExprStatements           shift and go to state 202
    arguments                      shift and go to state 203
    expt_42                        shift and go to state 219

state 187

    (357) primary -> VOID DOT . CLASS

    CLASS           shift and go to state 332


state 188

    (314) conditionalOrExpression -> conditionalAndExpression expt_63 .
    (553) expt_63 -> expt_63 . OP_LOR conditionalAndExpression

    QUES            reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    EQUALS          reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    ASS_ADD         reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    ASS_SUB         reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    ASS_MUL         reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    ASS_DIV         reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    ASS_AND         reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    ASS_OR          reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    ASS_XOR         reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    ASS_MOD         reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    ASS_SHL         reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    ASS_SHRR        reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    ASS_SHR         reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    COMMA           reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    RPAREN          reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    SEMI            reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    BRPAREN         reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    COLON           reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    FRPAREN         reduce using rule 314 (conditionalOrExpression -> conditionalAndExpression expt_63 .)
    OP_LOR          shift and go to state 333


state 189

    (552) expt_63 -> OP_LOR . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 334
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121

state 190

    (343) unaryExpression -> PLUS unaryExpression .

    MULT            reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    SLASH           reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    PERCENT         reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    PLUS            reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    DASH            reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    OP_SHR          reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    OP_SHL          reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    OP_SHRR         reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    OP_LE           reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    OP_GE           reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    LESS            reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    MORE            reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    INSTANCEOF      reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    OP_EQ           reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    OP_NE           reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    AND             reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    CARET           reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    VERTICAL        reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    OP_LAND         reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    OP_LOR          reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    QUES            reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    RPAREN          reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    COMMA           reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    BRPAREN         reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    EQUALS          reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    ASS_ADD         reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    ASS_SUB         reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    ASS_MUL         reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    ASS_DIV         reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    ASS_AND         reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    ASS_OR          reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    ASS_XOR         reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    ASS_MOD         reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    ASS_SHL         reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    ASS_SHRR        reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    ASS_SHR         reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    FRPAREN         reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    COLON           reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)
    SEMI            reduce using rule 343 (unaryExpression -> PLUS unaryExpression .)


state 191

    (556) expt_65 -> VERTICAL . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 335
    primary                        shift and go to state 125
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    relationalExpression           shift and go to state 107
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121

state 192

    (318) inclusiveOrExpression -> exclusiveOrExpression expt_65 .
    (557) expt_65 -> expt_65 . VERTICAL exclusiveOrExpression

    OP_LAND         reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    OP_LOR          reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    QUES            reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    RPAREN          reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    COMMA           reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    BRPAREN         reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    EQUALS          reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    ASS_ADD         reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    ASS_SUB         reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    ASS_MUL         reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    ASS_DIV         reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    ASS_AND         reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    ASS_OR          reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    ASS_XOR         reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    ASS_MOD         reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    ASS_SHL         reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    ASS_SHRR        reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    ASS_SHR         reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    FRPAREN         reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    COLON           reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    SEMI            reduce using rule 318 (inclusiveOrExpression -> exclusiveOrExpression expt_65 .)
    VERTICAL        shift and go to state 336


state 193

    (344) unaryExpression -> DASH unaryExpression .

    MULT            reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    SLASH           reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    PERCENT         reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    PLUS            reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    DASH            reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    OP_SHR          reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    OP_SHL          reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    OP_SHRR         reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    OP_LE           reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    OP_GE           reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    LESS            reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    MORE            reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    INSTANCEOF      reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    OP_EQ           reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    OP_NE           reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    AND             reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    CARET           reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    VERTICAL        reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    OP_LAND         reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    OP_LOR          reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    QUES            reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    RPAREN          reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    COMMA           reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    BRPAREN         reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    EQUALS          reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    ASS_ADD         reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    ASS_SUB         reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    ASS_MUL         reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    ASS_DIV         reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    ASS_AND         reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    ASS_OR          reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    ASS_XOR         reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    ASS_MOD         reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    ASS_SHL         reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    ASS_SHRR        reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    ASS_SHR         reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    FRPAREN         reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    COLON           reduce using rule 344 (unaryExpression -> DASH unaryExpression .)
    SEMI            reduce using rule 344 (unaryExpression -> DASH unaryExpression .)


state 194

    (326) instanceOfExpression -> relationalExpression INSTANCEOF . type
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    type                           shift and go to state 337

state 195

    (423) expr_11 -> OP_NE .

    PLUS            reduce using rule 423 (expr_11 -> OP_NE .)
    DASH            reduce using rule 423 (expr_11 -> OP_NE .)
    OP_INC          reduce using rule 423 (expr_11 -> OP_NE .)
    OP_DEC          reduce using rule 423 (expr_11 -> OP_NE .)
    EXCLAMATION     reduce using rule 423 (expr_11 -> OP_NE .)
    TILDE           reduce using rule 423 (expr_11 -> OP_NE .)
    VOID            reduce using rule 423 (expr_11 -> OP_NE .)
    Identifier      reduce using rule 423 (expr_11 -> OP_NE .)
    NEW             reduce using rule 423 (expr_11 -> OP_NE .)
    SUPER           reduce using rule 423 (expr_11 -> OP_NE .)
    THIS            reduce using rule 423 (expr_11 -> OP_NE .)
    LPAREN          reduce using rule 423 (expr_11 -> OP_NE .)
    BOOLEAN         reduce using rule 423 (expr_11 -> OP_NE .)
    CHAR            reduce using rule 423 (expr_11 -> OP_NE .)
    BYTE            reduce using rule 423 (expr_11 -> OP_NE .)
    SHORT           reduce using rule 423 (expr_11 -> OP_NE .)
    INT             reduce using rule 423 (expr_11 -> OP_NE .)
    LONG            reduce using rule 423 (expr_11 -> OP_NE .)
    FLOAT           reduce using rule 423 (expr_11 -> OP_NE .)
    DOUBLE          reduce using rule 423 (expr_11 -> OP_NE .)
    CharacterLiteral reduce using rule 423 (expr_11 -> OP_NE .)
    StringLiteral   reduce using rule 423 (expr_11 -> OP_NE .)
    NULL            reduce using rule 423 (expr_11 -> OP_NE .)
    NUMBER          reduce using rule 423 (expr_11 -> OP_NE .)
    HEX_NUMBER      reduce using rule 423 (expr_11 -> OP_NE .)
    LONG_NUMBER     reduce using rule 423 (expr_11 -> OP_NE .)
    LONG_HEX_NUMBER reduce using rule 423 (expr_11 -> OP_NE .)
    NON_INTEGER_1   reduce using rule 423 (expr_11 -> OP_NE .)
    NON_INTEGER_2   reduce using rule 423 (expr_11 -> OP_NE .)
    NON_INTEGER_3   reduce using rule 423 (expr_11 -> OP_NE .)
    TRUE            reduce using rule 423 (expr_11 -> OP_NE .)
    FALSE           reduce using rule 423 (expr_11 -> OP_NE .)


state 196

    (324) equalityExpression -> instanceOfExpression expt_68 .
    (563) expt_68 -> expt_68 . expr_11 instanceOfExpression
    (422) expr_11 -> . OP_EQ
    (423) expr_11 -> . OP_NE

    AND             reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    CARET           reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    VERTICAL        reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    OP_LAND         reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    OP_LOR          reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    QUES            reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    EQUALS          reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    ASS_ADD         reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    ASS_SUB         reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    ASS_MUL         reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    ASS_DIV         reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    ASS_AND         reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    ASS_OR          reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    ASS_XOR         reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    ASS_MOD         reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    ASS_SHL         reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    ASS_SHRR        reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    ASS_SHR         reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    COMMA           reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    RPAREN          reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    FRPAREN         reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    COLON           reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    BRPAREN         reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    SEMI            reduce using rule 324 (equalityExpression -> instanceOfExpression expt_68 .)
    OP_EQ           shift and go to state 198
    OP_NE           shift and go to state 195

    expr_11                        shift and go to state 338

state 197

    (562) expt_68 -> expr_11 . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    multiplicativeExpression       shift and go to state 145
    primary                        shift and go to state 125
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    relationalExpression           shift and go to state 107
    instanceOfExpression           shift and go to state 339
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138

state 198

    (422) expr_11 -> OP_EQ .

    PLUS            reduce using rule 422 (expr_11 -> OP_EQ .)
    DASH            reduce using rule 422 (expr_11 -> OP_EQ .)
    OP_INC          reduce using rule 422 (expr_11 -> OP_EQ .)
    OP_DEC          reduce using rule 422 (expr_11 -> OP_EQ .)
    EXCLAMATION     reduce using rule 422 (expr_11 -> OP_EQ .)
    TILDE           reduce using rule 422 (expr_11 -> OP_EQ .)
    VOID            reduce using rule 422 (expr_11 -> OP_EQ .)
    Identifier      reduce using rule 422 (expr_11 -> OP_EQ .)
    NEW             reduce using rule 422 (expr_11 -> OP_EQ .)
    SUPER           reduce using rule 422 (expr_11 -> OP_EQ .)
    THIS            reduce using rule 422 (expr_11 -> OP_EQ .)
    LPAREN          reduce using rule 422 (expr_11 -> OP_EQ .)
    BOOLEAN         reduce using rule 422 (expr_11 -> OP_EQ .)
    CHAR            reduce using rule 422 (expr_11 -> OP_EQ .)
    BYTE            reduce using rule 422 (expr_11 -> OP_EQ .)
    SHORT           reduce using rule 422 (expr_11 -> OP_EQ .)
    INT             reduce using rule 422 (expr_11 -> OP_EQ .)
    LONG            reduce using rule 422 (expr_11 -> OP_EQ .)
    FLOAT           reduce using rule 422 (expr_11 -> OP_EQ .)
    DOUBLE          reduce using rule 422 (expr_11 -> OP_EQ .)
    CharacterLiteral reduce using rule 422 (expr_11 -> OP_EQ .)
    StringLiteral   reduce using rule 422 (expr_11 -> OP_EQ .)
    NULL            reduce using rule 422 (expr_11 -> OP_EQ .)
    NUMBER          reduce using rule 422 (expr_11 -> OP_EQ .)
    HEX_NUMBER      reduce using rule 422 (expr_11 -> OP_EQ .)
    LONG_NUMBER     reduce using rule 422 (expr_11 -> OP_EQ .)
    LONG_HEX_NUMBER reduce using rule 422 (expr_11 -> OP_EQ .)
    NON_INTEGER_1   reduce using rule 422 (expr_11 -> OP_EQ .)
    NON_INTEGER_2   reduce using rule 422 (expr_11 -> OP_EQ .)
    NON_INTEGER_3   reduce using rule 422 (expr_11 -> OP_EQ .)
    TRUE            reduce using rule 422 (expr_11 -> OP_EQ .)
    FALSE           reduce using rule 422 (expr_11 -> OP_EQ .)


state 199

    (369) primary -> THIS identifierSuffix .

    OP_INC          reduce using rule 369 (primary -> THIS identifierSuffix .)
    OP_DEC          reduce using rule 369 (primary -> THIS identifierSuffix .)
    FLPAREN         reduce using rule 369 (primary -> THIS identifierSuffix .)
    DOT             reduce using rule 369 (primary -> THIS identifierSuffix .)
    MULT            reduce using rule 369 (primary -> THIS identifierSuffix .)
    SLASH           reduce using rule 369 (primary -> THIS identifierSuffix .)
    PERCENT         reduce using rule 369 (primary -> THIS identifierSuffix .)
    PLUS            reduce using rule 369 (primary -> THIS identifierSuffix .)
    DASH            reduce using rule 369 (primary -> THIS identifierSuffix .)
    OP_SHR          reduce using rule 369 (primary -> THIS identifierSuffix .)
    OP_SHL          reduce using rule 369 (primary -> THIS identifierSuffix .)
    OP_SHRR         reduce using rule 369 (primary -> THIS identifierSuffix .)
    OP_LE           reduce using rule 369 (primary -> THIS identifierSuffix .)
    OP_GE           reduce using rule 369 (primary -> THIS identifierSuffix .)
    LESS            reduce using rule 369 (primary -> THIS identifierSuffix .)
    MORE            reduce using rule 369 (primary -> THIS identifierSuffix .)
    INSTANCEOF      reduce using rule 369 (primary -> THIS identifierSuffix .)
    OP_EQ           reduce using rule 369 (primary -> THIS identifierSuffix .)
    OP_NE           reduce using rule 369 (primary -> THIS identifierSuffix .)
    AND             reduce using rule 369 (primary -> THIS identifierSuffix .)
    CARET           reduce using rule 369 (primary -> THIS identifierSuffix .)
    VERTICAL        reduce using rule 369 (primary -> THIS identifierSuffix .)
    OP_LAND         reduce using rule 369 (primary -> THIS identifierSuffix .)
    OP_LOR          reduce using rule 369 (primary -> THIS identifierSuffix .)
    QUES            reduce using rule 369 (primary -> THIS identifierSuffix .)
    RPAREN          reduce using rule 369 (primary -> THIS identifierSuffix .)
    COMMA           reduce using rule 369 (primary -> THIS identifierSuffix .)
    BRPAREN         reduce using rule 369 (primary -> THIS identifierSuffix .)
    EQUALS          reduce using rule 369 (primary -> THIS identifierSuffix .)
    ASS_ADD         reduce using rule 369 (primary -> THIS identifierSuffix .)
    ASS_SUB         reduce using rule 369 (primary -> THIS identifierSuffix .)
    ASS_MUL         reduce using rule 369 (primary -> THIS identifierSuffix .)
    ASS_DIV         reduce using rule 369 (primary -> THIS identifierSuffix .)
    ASS_AND         reduce using rule 369 (primary -> THIS identifierSuffix .)
    ASS_OR          reduce using rule 369 (primary -> THIS identifierSuffix .)
    ASS_XOR         reduce using rule 369 (primary -> THIS identifierSuffix .)
    ASS_MOD         reduce using rule 369 (primary -> THIS identifierSuffix .)
    ASS_SHL         reduce using rule 369 (primary -> THIS identifierSuffix .)
    ASS_SHRR        reduce using rule 369 (primary -> THIS identifierSuffix .)
    ASS_SHR         reduce using rule 369 (primary -> THIS identifierSuffix .)
    FRPAREN         reduce using rule 369 (primary -> THIS identifierSuffix .)
    COLON           reduce using rule 369 (primary -> THIS identifierSuffix .)
    SEMI            reduce using rule 369 (primary -> THIS identifierSuffix .)


state 200

    (372) identifierSuffix -> suffixStatements . DOT CLASS
    (434) suffixStatements -> suffixStatements . FLPAREN FRPAREN

    DOT             shift and go to state 340
    FLPAREN         shift and go to state 341


state 201

    (433) suffixStatements -> FLPAREN . FRPAREN
    (435) suffixExprStatements -> FLPAREN . expression FRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    FRPAREN         shift and go to state 342
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 343

state 202

    (373) identifierSuffix -> suffixExprStatements .
    (436) suffixExprStatements -> suffixExprStatements . FLPAREN expression FRPAREN

  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    OP_DEC          reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    DOT             reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    MULT            reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    SLASH           reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    PERCENT         reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    PLUS            reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    DASH            reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    OP_SHR          reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    OP_SHL          reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    OP_SHRR         reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    OP_LE           reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    OP_GE           reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    LESS            reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    MORE            reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    INSTANCEOF      reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    OP_EQ           reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    OP_NE           reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    AND             reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    CARET           reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    VERTICAL        reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    OP_LAND         reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    OP_LOR          reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    QUES            reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    RPAREN          reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    COMMA           reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    BRPAREN         reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    EQUALS          reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    ASS_ADD         reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    ASS_SUB         reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    ASS_MUL         reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    ASS_DIV         reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    ASS_AND         reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    ASS_OR          reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    ASS_XOR         reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    ASS_MOD         reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    ASS_SHL         reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    ASS_SHRR        reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    ASS_SHR         reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    FRPAREN         reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    COLON           reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    SEMI            reduce using rule 373 (identifierSuffix -> suffixExprStatements .)
    FLPAREN         shift and go to state 344

  ! FLPAREN         [ reduce using rule 373 (identifierSuffix -> suffixExprStatements .) ]


state 203

    (374) identifierSuffix -> arguments .

    OP_INC          reduce using rule 374 (identifierSuffix -> arguments .)
    OP_DEC          reduce using rule 374 (identifierSuffix -> arguments .)
    FLPAREN         reduce using rule 374 (identifierSuffix -> arguments .)
    DOT             reduce using rule 374 (identifierSuffix -> arguments .)
    MULT            reduce using rule 374 (identifierSuffix -> arguments .)
    SLASH           reduce using rule 374 (identifierSuffix -> arguments .)
    PERCENT         reduce using rule 374 (identifierSuffix -> arguments .)
    PLUS            reduce using rule 374 (identifierSuffix -> arguments .)
    DASH            reduce using rule 374 (identifierSuffix -> arguments .)
    OP_SHR          reduce using rule 374 (identifierSuffix -> arguments .)
    OP_SHL          reduce using rule 374 (identifierSuffix -> arguments .)
    OP_SHRR         reduce using rule 374 (identifierSuffix -> arguments .)
    OP_LE           reduce using rule 374 (identifierSuffix -> arguments .)
    OP_GE           reduce using rule 374 (identifierSuffix -> arguments .)
    LESS            reduce using rule 374 (identifierSuffix -> arguments .)
    MORE            reduce using rule 374 (identifierSuffix -> arguments .)
    INSTANCEOF      reduce using rule 374 (identifierSuffix -> arguments .)
    OP_EQ           reduce using rule 374 (identifierSuffix -> arguments .)
    OP_NE           reduce using rule 374 (identifierSuffix -> arguments .)
    AND             reduce using rule 374 (identifierSuffix -> arguments .)
    CARET           reduce using rule 374 (identifierSuffix -> arguments .)
    VERTICAL        reduce using rule 374 (identifierSuffix -> arguments .)
    OP_LAND         reduce using rule 374 (identifierSuffix -> arguments .)
    OP_LOR          reduce using rule 374 (identifierSuffix -> arguments .)
    QUES            reduce using rule 374 (identifierSuffix -> arguments .)
    RPAREN          reduce using rule 374 (identifierSuffix -> arguments .)
    COMMA           reduce using rule 374 (identifierSuffix -> arguments .)
    BRPAREN         reduce using rule 374 (identifierSuffix -> arguments .)
    EQUALS          reduce using rule 374 (identifierSuffix -> arguments .)
    ASS_ADD         reduce using rule 374 (identifierSuffix -> arguments .)
    ASS_SUB         reduce using rule 374 (identifierSuffix -> arguments .)
    ASS_MUL         reduce using rule 374 (identifierSuffix -> arguments .)
    ASS_DIV         reduce using rule 374 (identifierSuffix -> arguments .)
    ASS_AND         reduce using rule 374 (identifierSuffix -> arguments .)
    ASS_OR          reduce using rule 374 (identifierSuffix -> arguments .)
    ASS_XOR         reduce using rule 374 (identifierSuffix -> arguments .)
    ASS_MOD         reduce using rule 374 (identifierSuffix -> arguments .)
    ASS_SHL         reduce using rule 374 (identifierSuffix -> arguments .)
    ASS_SHRR        reduce using rule 374 (identifierSuffix -> arguments .)
    ASS_SHR         reduce using rule 374 (identifierSuffix -> arguments .)
    FRPAREN         reduce using rule 374 (identifierSuffix -> arguments .)
    COLON           reduce using rule 374 (identifierSuffix -> arguments .)
    SEMI            reduce using rule 374 (identifierSuffix -> arguments .)


state 204

    (401) arguments -> LPAREN . expressionList RPAREN
    (402) arguments -> LPAREN . RPAREN
    (294) expressionList -> . expression expt_60
    (295) expressionList -> . expression
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    RPAREN          shift and go to state 345
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    expressionList                 shift and go to state 346
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 347

state 205

    (520) expt_42 -> DOT . Identifier
    (375) identifierSuffix -> DOT . CLASS
    (376) identifierSuffix -> DOT . explicitGenericInvocation
    (377) identifierSuffix -> DOT . THIS
    (378) identifierSuffix -> DOT . SUPER arguments
    (379) identifierSuffix -> DOT . NEW innerCreator
    (390) explicitGenericInvocation -> . nonWildcardTypeArguments Identifier arguments
    (391) nonWildcardTypeArguments -> . LESS typeList MORE

    Identifier      shift and go to state 79
    CLASS           shift and go to state 353
    THIS            shift and go to state 348
    SUPER           shift and go to state 352
    NEW             shift and go to state 351
    LESS            shift and go to state 238

    explicitGenericInvocation      shift and go to state 349
    nonWildcardTypeArguments       shift and go to state 350

state 206

    (367) primary -> THIS expt_42 . identifierSuffix
    (368) primary -> THIS expt_42 .
    (521) expt_42 -> expt_42 . DOT Identifier
    (372) identifierSuffix -> . suffixStatements DOT CLASS
    (373) identifierSuffix -> . suffixExprStatements
    (374) identifierSuffix -> . arguments
    (375) identifierSuffix -> . DOT CLASS
    (376) identifierSuffix -> . DOT explicitGenericInvocation
    (377) identifierSuffix -> . DOT THIS
    (378) identifierSuffix -> . DOT SUPER arguments
    (379) identifierSuffix -> . DOT NEW innerCreator
    (433) suffixStatements -> . FLPAREN FRPAREN
    (434) suffixStatements -> . suffixStatements FLPAREN FRPAREN
    (435) suffixExprStatements -> . FLPAREN expression FRPAREN
    (436) suffixExprStatements -> . suffixExprStatements FLPAREN expression FRPAREN
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 368 (primary -> THIS expt_42 .)
    OP_DEC          reduce using rule 368 (primary -> THIS expt_42 .)
    MULT            reduce using rule 368 (primary -> THIS expt_42 .)
    SLASH           reduce using rule 368 (primary -> THIS expt_42 .)
    PERCENT         reduce using rule 368 (primary -> THIS expt_42 .)
    PLUS            reduce using rule 368 (primary -> THIS expt_42 .)
    DASH            reduce using rule 368 (primary -> THIS expt_42 .)
    OP_SHR          reduce using rule 368 (primary -> THIS expt_42 .)
    OP_SHL          reduce using rule 368 (primary -> THIS expt_42 .)
    OP_SHRR         reduce using rule 368 (primary -> THIS expt_42 .)
    OP_LE           reduce using rule 368 (primary -> THIS expt_42 .)
    OP_GE           reduce using rule 368 (primary -> THIS expt_42 .)
    LESS            reduce using rule 368 (primary -> THIS expt_42 .)
    MORE            reduce using rule 368 (primary -> THIS expt_42 .)
    INSTANCEOF      reduce using rule 368 (primary -> THIS expt_42 .)
    OP_EQ           reduce using rule 368 (primary -> THIS expt_42 .)
    OP_NE           reduce using rule 368 (primary -> THIS expt_42 .)
    AND             reduce using rule 368 (primary -> THIS expt_42 .)
    CARET           reduce using rule 368 (primary -> THIS expt_42 .)
    VERTICAL        reduce using rule 368 (primary -> THIS expt_42 .)
    OP_LAND         reduce using rule 368 (primary -> THIS expt_42 .)
    OP_LOR          reduce using rule 368 (primary -> THIS expt_42 .)
    QUES            reduce using rule 368 (primary -> THIS expt_42 .)
    RPAREN          reduce using rule 368 (primary -> THIS expt_42 .)
    COMMA           reduce using rule 368 (primary -> THIS expt_42 .)
    BRPAREN         reduce using rule 368 (primary -> THIS expt_42 .)
    EQUALS          reduce using rule 368 (primary -> THIS expt_42 .)
    ASS_ADD         reduce using rule 368 (primary -> THIS expt_42 .)
    ASS_SUB         reduce using rule 368 (primary -> THIS expt_42 .)
    ASS_MUL         reduce using rule 368 (primary -> THIS expt_42 .)
    ASS_DIV         reduce using rule 368 (primary -> THIS expt_42 .)
    ASS_AND         reduce using rule 368 (primary -> THIS expt_42 .)
    ASS_OR          reduce using rule 368 (primary -> THIS expt_42 .)
    ASS_XOR         reduce using rule 368 (primary -> THIS expt_42 .)
    ASS_MOD         reduce using rule 368 (primary -> THIS expt_42 .)
    ASS_SHL         reduce using rule 368 (primary -> THIS expt_42 .)
    ASS_SHRR        reduce using rule 368 (primary -> THIS expt_42 .)
    ASS_SHR         reduce using rule 368 (primary -> THIS expt_42 .)
    FRPAREN         reduce using rule 368 (primary -> THIS expt_42 .)
    COLON           reduce using rule 368 (primary -> THIS expt_42 .)
    SEMI            reduce using rule 368 (primary -> THIS expt_42 .)
    DOT             shift and go to state 355
    FLPAREN         shift and go to state 201
    LPAREN          shift and go to state 204

  ! FLPAREN         [ reduce using rule 368 (primary -> THIS expt_42 .) ]
  ! DOT             [ reduce using rule 368 (primary -> THIS expt_42 .) ]

    identifierSuffix               shift and go to state 354
    suffixStatements               shift and go to state 200
    suffixExprStatements           shift and go to state 202
    arguments                      shift and go to state 203

state 207

    (554) expt_64 -> OP_LAND . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 356
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    primary                        shift and go to state 125
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    relationalExpression           shift and go to state 107
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121

state 208

    (316) conditionalAndExpression -> inclusiveOrExpression expt_64 .
    (555) expt_64 -> expt_64 . OP_LAND inclusiveOrExpression

    OP_LOR          reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    QUES            reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    EQUALS          reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    ASS_ADD         reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    ASS_SUB         reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    ASS_MUL         reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    ASS_DIV         reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    ASS_AND         reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    ASS_OR          reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    ASS_XOR         reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    ASS_MOD         reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    ASS_SHL         reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    ASS_SHRR        reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    ASS_SHR         reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    SEMI            reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    COMMA           reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    BRPAREN         reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    RPAREN          reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    FRPAREN         reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    COLON           reduce using rule 316 (conditionalAndExpression -> inclusiveOrExpression expt_64 .)
    OP_LAND         shift and go to state 357


state 209

    (209) elementValuePairs -> elementValuePair expt_44 .
    (523) expt_44 -> expt_44 . COMMA elementValuePair

    RPAREN          reduce using rule 209 (elementValuePairs -> elementValuePair expt_44 .)
    COMMA           shift and go to state 358


state 210

    (522) expt_44 -> COMMA . elementValuePair
    (211) elementValuePair -> . Identifier EQUALS elementValue

    Identifier      shift and go to state 359

    elementValuePair               shift and go to state 360

state 211

    (210) elementValuePairs -> elementValuePair empty .

    RPAREN          reduce using rule 210 (elementValuePairs -> elementValuePair empty .)


state 212

    (337) shiftOp -> OP_SHL .

    PLUS            reduce using rule 337 (shiftOp -> OP_SHL .)
    DASH            reduce using rule 337 (shiftOp -> OP_SHL .)
    OP_INC          reduce using rule 337 (shiftOp -> OP_SHL .)
    OP_DEC          reduce using rule 337 (shiftOp -> OP_SHL .)
    EXCLAMATION     reduce using rule 337 (shiftOp -> OP_SHL .)
    TILDE           reduce using rule 337 (shiftOp -> OP_SHL .)
    VOID            reduce using rule 337 (shiftOp -> OP_SHL .)
    Identifier      reduce using rule 337 (shiftOp -> OP_SHL .)
    NEW             reduce using rule 337 (shiftOp -> OP_SHL .)
    SUPER           reduce using rule 337 (shiftOp -> OP_SHL .)
    THIS            reduce using rule 337 (shiftOp -> OP_SHL .)
    LPAREN          reduce using rule 337 (shiftOp -> OP_SHL .)
    BOOLEAN         reduce using rule 337 (shiftOp -> OP_SHL .)
    CHAR            reduce using rule 337 (shiftOp -> OP_SHL .)
    BYTE            reduce using rule 337 (shiftOp -> OP_SHL .)
    SHORT           reduce using rule 337 (shiftOp -> OP_SHL .)
    INT             reduce using rule 337 (shiftOp -> OP_SHL .)
    LONG            reduce using rule 337 (shiftOp -> OP_SHL .)
    FLOAT           reduce using rule 337 (shiftOp -> OP_SHL .)
    DOUBLE          reduce using rule 337 (shiftOp -> OP_SHL .)
    CharacterLiteral reduce using rule 337 (shiftOp -> OP_SHL .)
    StringLiteral   reduce using rule 337 (shiftOp -> OP_SHL .)
    NULL            reduce using rule 337 (shiftOp -> OP_SHL .)
    NUMBER          reduce using rule 337 (shiftOp -> OP_SHL .)
    HEX_NUMBER      reduce using rule 337 (shiftOp -> OP_SHL .)
    LONG_NUMBER     reduce using rule 337 (shiftOp -> OP_SHL .)
    LONG_HEX_NUMBER reduce using rule 337 (shiftOp -> OP_SHL .)
    NON_INTEGER_1   reduce using rule 337 (shiftOp -> OP_SHL .)
    NON_INTEGER_2   reduce using rule 337 (shiftOp -> OP_SHL .)
    NON_INTEGER_3   reduce using rule 337 (shiftOp -> OP_SHL .)
    TRUE            reduce using rule 337 (shiftOp -> OP_SHL .)
    FALSE           reduce using rule 337 (shiftOp -> OP_SHL .)


state 213

    (338) shiftOp -> OP_SHRR .

    PLUS            reduce using rule 338 (shiftOp -> OP_SHRR .)
    DASH            reduce using rule 338 (shiftOp -> OP_SHRR .)
    OP_INC          reduce using rule 338 (shiftOp -> OP_SHRR .)
    OP_DEC          reduce using rule 338 (shiftOp -> OP_SHRR .)
    EXCLAMATION     reduce using rule 338 (shiftOp -> OP_SHRR .)
    TILDE           reduce using rule 338 (shiftOp -> OP_SHRR .)
    VOID            reduce using rule 338 (shiftOp -> OP_SHRR .)
    Identifier      reduce using rule 338 (shiftOp -> OP_SHRR .)
    NEW             reduce using rule 338 (shiftOp -> OP_SHRR .)
    SUPER           reduce using rule 338 (shiftOp -> OP_SHRR .)
    THIS            reduce using rule 338 (shiftOp -> OP_SHRR .)
    LPAREN          reduce using rule 338 (shiftOp -> OP_SHRR .)
    BOOLEAN         reduce using rule 338 (shiftOp -> OP_SHRR .)
    CHAR            reduce using rule 338 (shiftOp -> OP_SHRR .)
    BYTE            reduce using rule 338 (shiftOp -> OP_SHRR .)
    SHORT           reduce using rule 338 (shiftOp -> OP_SHRR .)
    INT             reduce using rule 338 (shiftOp -> OP_SHRR .)
    LONG            reduce using rule 338 (shiftOp -> OP_SHRR .)
    FLOAT           reduce using rule 338 (shiftOp -> OP_SHRR .)
    DOUBLE          reduce using rule 338 (shiftOp -> OP_SHRR .)
    CharacterLiteral reduce using rule 338 (shiftOp -> OP_SHRR .)
    StringLiteral   reduce using rule 338 (shiftOp -> OP_SHRR .)
    NULL            reduce using rule 338 (shiftOp -> OP_SHRR .)
    NUMBER          reduce using rule 338 (shiftOp -> OP_SHRR .)
    HEX_NUMBER      reduce using rule 338 (shiftOp -> OP_SHRR .)
    LONG_NUMBER     reduce using rule 338 (shiftOp -> OP_SHRR .)
    LONG_HEX_NUMBER reduce using rule 338 (shiftOp -> OP_SHRR .)
    NON_INTEGER_1   reduce using rule 338 (shiftOp -> OP_SHRR .)
    NON_INTEGER_2   reduce using rule 338 (shiftOp -> OP_SHRR .)
    NON_INTEGER_3   reduce using rule 338 (shiftOp -> OP_SHRR .)
    TRUE            reduce using rule 338 (shiftOp -> OP_SHRR .)
    FALSE           reduce using rule 338 (shiftOp -> OP_SHRR .)


state 214

    (336) shiftOp -> OP_SHR .

    PLUS            reduce using rule 336 (shiftOp -> OP_SHR .)
    DASH            reduce using rule 336 (shiftOp -> OP_SHR .)
    OP_INC          reduce using rule 336 (shiftOp -> OP_SHR .)
    OP_DEC          reduce using rule 336 (shiftOp -> OP_SHR .)
    EXCLAMATION     reduce using rule 336 (shiftOp -> OP_SHR .)
    TILDE           reduce using rule 336 (shiftOp -> OP_SHR .)
    VOID            reduce using rule 336 (shiftOp -> OP_SHR .)
    Identifier      reduce using rule 336 (shiftOp -> OP_SHR .)
    NEW             reduce using rule 336 (shiftOp -> OP_SHR .)
    SUPER           reduce using rule 336 (shiftOp -> OP_SHR .)
    THIS            reduce using rule 336 (shiftOp -> OP_SHR .)
    LPAREN          reduce using rule 336 (shiftOp -> OP_SHR .)
    BOOLEAN         reduce using rule 336 (shiftOp -> OP_SHR .)
    CHAR            reduce using rule 336 (shiftOp -> OP_SHR .)
    BYTE            reduce using rule 336 (shiftOp -> OP_SHR .)
    SHORT           reduce using rule 336 (shiftOp -> OP_SHR .)
    INT             reduce using rule 336 (shiftOp -> OP_SHR .)
    LONG            reduce using rule 336 (shiftOp -> OP_SHR .)
    FLOAT           reduce using rule 336 (shiftOp -> OP_SHR .)
    DOUBLE          reduce using rule 336 (shiftOp -> OP_SHR .)
    CharacterLiteral reduce using rule 336 (shiftOp -> OP_SHR .)
    StringLiteral   reduce using rule 336 (shiftOp -> OP_SHR .)
    NULL            reduce using rule 336 (shiftOp -> OP_SHR .)
    NUMBER          reduce using rule 336 (shiftOp -> OP_SHR .)
    HEX_NUMBER      reduce using rule 336 (shiftOp -> OP_SHR .)
    LONG_NUMBER     reduce using rule 336 (shiftOp -> OP_SHR .)
    LONG_HEX_NUMBER reduce using rule 336 (shiftOp -> OP_SHR .)
    NON_INTEGER_1   reduce using rule 336 (shiftOp -> OP_SHR .)
    NON_INTEGER_2   reduce using rule 336 (shiftOp -> OP_SHR .)
    NON_INTEGER_3   reduce using rule 336 (shiftOp -> OP_SHR .)
    TRUE            reduce using rule 336 (shiftOp -> OP_SHR .)
    FALSE           reduce using rule 336 (shiftOp -> OP_SHR .)


state 215

    (334) shiftExpression -> additiveExpression expt_71 .
    (567) expt_71 -> expt_71 . shiftOp additiveExpression
    (336) shiftOp -> . OP_SHR
    (337) shiftOp -> . OP_SHL
    (338) shiftOp -> . OP_SHRR

    OP_LE           reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    OP_GE           reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    LESS            reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    MORE            reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    INSTANCEOF      reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    OP_EQ           reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    OP_NE           reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    AND             reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    CARET           reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    VERTICAL        reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    OP_LAND         reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    OP_LOR          reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    QUES            reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    EQUALS          reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    ASS_ADD         reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    ASS_SUB         reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    ASS_MUL         reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    ASS_DIV         reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    ASS_AND         reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    ASS_OR          reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    ASS_XOR         reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    ASS_MOD         reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    ASS_SHL         reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    ASS_SHRR        reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    ASS_SHR         reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    COLON           reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    COMMA           reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    BRPAREN         reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    RPAREN          reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    FRPAREN         reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    SEMI            reduce using rule 334 (shiftExpression -> additiveExpression expt_71 .)
    OP_SHR          shift and go to state 214
    OP_SHL          shift and go to state 212
    OP_SHRR         shift and go to state 213

    shiftOp                        shift and go to state 361

state 216

    (566) expt_71 -> shiftOp . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    multiplicativeExpression       shift and go to state 145
    primary                        shift and go to state 125
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 362
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138

state 217

    (362) primary -> Identifier identifierSuffix .

    OP_INC          reduce using rule 362 (primary -> Identifier identifierSuffix .)
    OP_DEC          reduce using rule 362 (primary -> Identifier identifierSuffix .)
    FLPAREN         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    DOT             reduce using rule 362 (primary -> Identifier identifierSuffix .)
    MULT            reduce using rule 362 (primary -> Identifier identifierSuffix .)
    SLASH           reduce using rule 362 (primary -> Identifier identifierSuffix .)
    PERCENT         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    PLUS            reduce using rule 362 (primary -> Identifier identifierSuffix .)
    DASH            reduce using rule 362 (primary -> Identifier identifierSuffix .)
    OP_SHR          reduce using rule 362 (primary -> Identifier identifierSuffix .)
    OP_SHL          reduce using rule 362 (primary -> Identifier identifierSuffix .)
    OP_SHRR         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    OP_LE           reduce using rule 362 (primary -> Identifier identifierSuffix .)
    OP_GE           reduce using rule 362 (primary -> Identifier identifierSuffix .)
    LESS            reduce using rule 362 (primary -> Identifier identifierSuffix .)
    MORE            reduce using rule 362 (primary -> Identifier identifierSuffix .)
    INSTANCEOF      reduce using rule 362 (primary -> Identifier identifierSuffix .)
    OP_EQ           reduce using rule 362 (primary -> Identifier identifierSuffix .)
    OP_NE           reduce using rule 362 (primary -> Identifier identifierSuffix .)
    AND             reduce using rule 362 (primary -> Identifier identifierSuffix .)
    CARET           reduce using rule 362 (primary -> Identifier identifierSuffix .)
    VERTICAL        reduce using rule 362 (primary -> Identifier identifierSuffix .)
    OP_LAND         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    OP_LOR          reduce using rule 362 (primary -> Identifier identifierSuffix .)
    QUES            reduce using rule 362 (primary -> Identifier identifierSuffix .)
    RPAREN          reduce using rule 362 (primary -> Identifier identifierSuffix .)
    COMMA           reduce using rule 362 (primary -> Identifier identifierSuffix .)
    BRPAREN         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    EQUALS          reduce using rule 362 (primary -> Identifier identifierSuffix .)
    ASS_ADD         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    ASS_SUB         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    ASS_MUL         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    ASS_DIV         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    ASS_AND         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    ASS_OR          reduce using rule 362 (primary -> Identifier identifierSuffix .)
    ASS_XOR         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    ASS_MOD         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    ASS_SHL         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    ASS_SHRR        reduce using rule 362 (primary -> Identifier identifierSuffix .)
    ASS_SHR         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    FRPAREN         reduce using rule 362 (primary -> Identifier identifierSuffix .)
    COLON           reduce using rule 362 (primary -> Identifier identifierSuffix .)
    SEMI            reduce using rule 362 (primary -> Identifier identifierSuffix .)


state 218

    (211) elementValuePair -> Identifier EQUALS . elementValue
    (212) elementValue -> . conditionalExpression
    (213) elementValue -> . annotation
    (214) elementValue -> . elementValueArrayInitializer
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (215) elementValueArrayInitializer -> . BLPAREN expt_46 expt_30 BRPAREN
    (216) elementValueArrayInitializer -> . BLPAREN expt_46 empty BRPAREN
    (217) elementValueArrayInitializer -> . BLPAREN empty expt_30 BRPAREN
    (218) elementValueArrayInitializer -> . BLPAREN empty empty BRPAREN
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    AT              shift and go to state 8
    BLPAREN         shift and go to state 122
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 133
    unaryExpression                shift and go to state 149
    exclusiveOrExpression          shift and go to state 105
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    annotation                     shift and go to state 153
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    elementValueArrayInitializer   shift and go to state 140
    andExpression                  shift and go to state 121
    elementValue                   shift and go to state 363

state 219

    (360) primary -> Identifier expt_42 . identifierSuffix
    (361) primary -> Identifier expt_42 .
    (521) expt_42 -> expt_42 . DOT Identifier
    (372) identifierSuffix -> . suffixStatements DOT CLASS
    (373) identifierSuffix -> . suffixExprStatements
    (374) identifierSuffix -> . arguments
    (375) identifierSuffix -> . DOT CLASS
    (376) identifierSuffix -> . DOT explicitGenericInvocation
    (377) identifierSuffix -> . DOT THIS
    (378) identifierSuffix -> . DOT SUPER arguments
    (379) identifierSuffix -> . DOT NEW innerCreator
    (433) suffixStatements -> . FLPAREN FRPAREN
    (434) suffixStatements -> . suffixStatements FLPAREN FRPAREN
    (435) suffixExprStatements -> . FLPAREN expression FRPAREN
    (436) suffixExprStatements -> . suffixExprStatements FLPAREN expression FRPAREN
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 361 (primary -> Identifier expt_42 .)
    OP_DEC          reduce using rule 361 (primary -> Identifier expt_42 .)
    MULT            reduce using rule 361 (primary -> Identifier expt_42 .)
    SLASH           reduce using rule 361 (primary -> Identifier expt_42 .)
    PERCENT         reduce using rule 361 (primary -> Identifier expt_42 .)
    PLUS            reduce using rule 361 (primary -> Identifier expt_42 .)
    DASH            reduce using rule 361 (primary -> Identifier expt_42 .)
    OP_SHR          reduce using rule 361 (primary -> Identifier expt_42 .)
    OP_SHL          reduce using rule 361 (primary -> Identifier expt_42 .)
    OP_SHRR         reduce using rule 361 (primary -> Identifier expt_42 .)
    OP_LE           reduce using rule 361 (primary -> Identifier expt_42 .)
    OP_GE           reduce using rule 361 (primary -> Identifier expt_42 .)
    LESS            reduce using rule 361 (primary -> Identifier expt_42 .)
    MORE            reduce using rule 361 (primary -> Identifier expt_42 .)
    INSTANCEOF      reduce using rule 361 (primary -> Identifier expt_42 .)
    OP_EQ           reduce using rule 361 (primary -> Identifier expt_42 .)
    OP_NE           reduce using rule 361 (primary -> Identifier expt_42 .)
    AND             reduce using rule 361 (primary -> Identifier expt_42 .)
    CARET           reduce using rule 361 (primary -> Identifier expt_42 .)
    VERTICAL        reduce using rule 361 (primary -> Identifier expt_42 .)
    OP_LAND         reduce using rule 361 (primary -> Identifier expt_42 .)
    OP_LOR          reduce using rule 361 (primary -> Identifier expt_42 .)
    QUES            reduce using rule 361 (primary -> Identifier expt_42 .)
    RPAREN          reduce using rule 361 (primary -> Identifier expt_42 .)
    COMMA           reduce using rule 361 (primary -> Identifier expt_42 .)
    BRPAREN         reduce using rule 361 (primary -> Identifier expt_42 .)
    EQUALS          reduce using rule 361 (primary -> Identifier expt_42 .)
    ASS_ADD         reduce using rule 361 (primary -> Identifier expt_42 .)
    ASS_SUB         reduce using rule 361 (primary -> Identifier expt_42 .)
    ASS_MUL         reduce using rule 361 (primary -> Identifier expt_42 .)
    ASS_DIV         reduce using rule 361 (primary -> Identifier expt_42 .)
    ASS_AND         reduce using rule 361 (primary -> Identifier expt_42 .)
    ASS_OR          reduce using rule 361 (primary -> Identifier expt_42 .)
    ASS_XOR         reduce using rule 361 (primary -> Identifier expt_42 .)
    ASS_MOD         reduce using rule 361 (primary -> Identifier expt_42 .)
    ASS_SHL         reduce using rule 361 (primary -> Identifier expt_42 .)
    ASS_SHRR        reduce using rule 361 (primary -> Identifier expt_42 .)
    ASS_SHR         reduce using rule 361 (primary -> Identifier expt_42 .)
    FRPAREN         reduce using rule 361 (primary -> Identifier expt_42 .)
    COLON           reduce using rule 361 (primary -> Identifier expt_42 .)
    SEMI            reduce using rule 361 (primary -> Identifier expt_42 .)
    DOT             shift and go to state 355
    FLPAREN         shift and go to state 201
    LPAREN          shift and go to state 204

  ! FLPAREN         [ reduce using rule 361 (primary -> Identifier expt_42 .) ]
  ! DOT             [ reduce using rule 361 (primary -> Identifier expt_42 .) ]

    identifierSuffix               shift and go to state 364
    suffixStatements               shift and go to state 200
    suffixExprStatements           shift and go to state 202
    arguments                      shift and go to state 203

state 220

    (558) expt_66 -> CARET . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    multiplicativeExpression       shift and go to state 145
    primary                        shift and go to state 125
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    relationalExpression           shift and go to state 107
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 365

state 221

    (320) exclusiveOrExpression -> andExpression expt_66 .
    (559) expt_66 -> expt_66 . CARET andExpression

    VERTICAL        reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    OP_LAND         reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    OP_LOR          reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    QUES            reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    EQUALS          reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    ASS_ADD         reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    ASS_SUB         reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    ASS_MUL         reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    ASS_DIV         reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    ASS_AND         reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    ASS_OR          reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    ASS_XOR         reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    ASS_MOD         reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    ASS_SHL         reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    ASS_SHRR        reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    ASS_SHR         reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    FRPAREN         reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    COLON           reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    COMMA           reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    RPAREN          reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    SEMI            reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    BRPAREN         reduce using rule 320 (exclusiveOrExpression -> andExpression expt_66 .)
    CARET           shift and go to state 366


state 222

    (215) elementValueArrayInitializer -> BLPAREN expt_46 . expt_30 BRPAREN
    (216) elementValueArrayInitializer -> BLPAREN expt_46 . empty BRPAREN
    (496) expt_30 -> . COMMA
    (497) expt_30 -> . empty
    (584) empty -> .

    COMMA           shift and go to state 368
    BRPAREN         reduce using rule 584 (empty -> .)

    expt_30                        shift and go to state 367
    empty                          shift and go to state 369

state 223

    (217) elementValueArrayInitializer -> BLPAREN empty . expt_30 BRPAREN
    (218) elementValueArrayInitializer -> BLPAREN empty . empty BRPAREN
    (496) expt_30 -> . COMMA
    (497) expt_30 -> . empty
    (584) empty -> .

    COMMA           shift and go to state 368
    BRPAREN         reduce using rule 584 (empty -> .)

    expt_30                        shift and go to state 370
    empty                          shift and go to state 371

state 224

    (527) expt_46 -> elementValue . expt_45
    (524) expt_45 -> . COMMA elementValue
    (525) expt_45 -> . expt_45 COMMA elementValue
    (526) expt_45 -> . empty
    (584) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 373
    BRPAREN         reduce using rule 584 (empty -> .)

  ! COMMA           [ reduce using rule 584 (empty -> .) ]

    expt_45                        shift and go to state 372
    empty                          shift and go to state 374

state 225

    (560) expt_67 -> AND . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 375
    multiplicativeExpression       shift and go to state 145
    primary                        shift and go to state 125
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    relationalExpression           shift and go to state 107
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138

state 226

    (322) andExpression -> equalityExpression expt_67 .
    (561) expt_67 -> expt_67 . AND equalityExpression

    CARET           reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    VERTICAL        reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    OP_LAND         reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    OP_LOR          reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    QUES            reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    RPAREN          reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    COMMA           reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    BRPAREN         reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    EQUALS          reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    ASS_ADD         reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    ASS_SUB         reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    ASS_MUL         reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    ASS_DIV         reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    ASS_AND         reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    ASS_OR          reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    ASS_XOR         reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    ASS_MOD         reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    ASS_SHL         reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    ASS_SHRR        reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    ASS_SHR         reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    FRPAREN         reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    COLON           reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    SEMI            reduce using rule 322 (andExpression -> equalityExpression expt_67 .)
    AND             shift and go to state 376


state 227

    (312) conditionalExpression -> conditionalOrExpression QUES . expression COLON expression
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 377

state 228

    (573) expt_74 -> selector .

    OP_INC          reduce using rule 573 (expt_74 -> selector .)
    OP_DEC          reduce using rule 573 (expt_74 -> selector .)
    FLPAREN         reduce using rule 573 (expt_74 -> selector .)
    DOT             reduce using rule 573 (expt_74 -> selector .)
    MULT            reduce using rule 573 (expt_74 -> selector .)
    SLASH           reduce using rule 573 (expt_74 -> selector .)
    PERCENT         reduce using rule 573 (expt_74 -> selector .)
    PLUS            reduce using rule 573 (expt_74 -> selector .)
    DASH            reduce using rule 573 (expt_74 -> selector .)
    OP_SHR          reduce using rule 573 (expt_74 -> selector .)
    OP_SHL          reduce using rule 573 (expt_74 -> selector .)
    OP_SHRR         reduce using rule 573 (expt_74 -> selector .)
    OP_LE           reduce using rule 573 (expt_74 -> selector .)
    OP_GE           reduce using rule 573 (expt_74 -> selector .)
    LESS            reduce using rule 573 (expt_74 -> selector .)
    MORE            reduce using rule 573 (expt_74 -> selector .)
    INSTANCEOF      reduce using rule 573 (expt_74 -> selector .)
    OP_EQ           reduce using rule 573 (expt_74 -> selector .)
    OP_NE           reduce using rule 573 (expt_74 -> selector .)
    AND             reduce using rule 573 (expt_74 -> selector .)
    CARET           reduce using rule 573 (expt_74 -> selector .)
    VERTICAL        reduce using rule 573 (expt_74 -> selector .)
    OP_LAND         reduce using rule 573 (expt_74 -> selector .)
    OP_LOR          reduce using rule 573 (expt_74 -> selector .)
    QUES            reduce using rule 573 (expt_74 -> selector .)
    RPAREN          reduce using rule 573 (expt_74 -> selector .)
    COMMA           reduce using rule 573 (expt_74 -> selector .)
    BRPAREN         reduce using rule 573 (expt_74 -> selector .)
    EQUALS          reduce using rule 573 (expt_74 -> selector .)
    ASS_ADD         reduce using rule 573 (expt_74 -> selector .)
    ASS_SUB         reduce using rule 573 (expt_74 -> selector .)
    ASS_MUL         reduce using rule 573 (expt_74 -> selector .)
    ASS_DIV         reduce using rule 573 (expt_74 -> selector .)
    ASS_AND         reduce using rule 573 (expt_74 -> selector .)
    ASS_OR          reduce using rule 573 (expt_74 -> selector .)
    ASS_XOR         reduce using rule 573 (expt_74 -> selector .)
    ASS_MOD         reduce using rule 573 (expt_74 -> selector .)
    ASS_SHL         reduce using rule 573 (expt_74 -> selector .)
    ASS_SHRR        reduce using rule 573 (expt_74 -> selector .)
    ASS_SHR         reduce using rule 573 (expt_74 -> selector .)
    FRPAREN         reduce using rule 573 (expt_74 -> selector .)
    COLON           reduce using rule 573 (expt_74 -> selector .)
    SEMI            reduce using rule 573 (expt_74 -> selector .)


state 229

    (392) selector -> FLPAREN . expression FRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 378

state 230

    (429) expr_14 -> OP_INC .

    MULT            reduce using rule 429 (expr_14 -> OP_INC .)
    SLASH           reduce using rule 429 (expr_14 -> OP_INC .)
    PERCENT         reduce using rule 429 (expr_14 -> OP_INC .)
    PLUS            reduce using rule 429 (expr_14 -> OP_INC .)
    DASH            reduce using rule 429 (expr_14 -> OP_INC .)
    OP_SHR          reduce using rule 429 (expr_14 -> OP_INC .)
    OP_SHL          reduce using rule 429 (expr_14 -> OP_INC .)
    OP_SHRR         reduce using rule 429 (expr_14 -> OP_INC .)
    OP_LE           reduce using rule 429 (expr_14 -> OP_INC .)
    OP_GE           reduce using rule 429 (expr_14 -> OP_INC .)
    LESS            reduce using rule 429 (expr_14 -> OP_INC .)
    MORE            reduce using rule 429 (expr_14 -> OP_INC .)
    INSTANCEOF      reduce using rule 429 (expr_14 -> OP_INC .)
    OP_EQ           reduce using rule 429 (expr_14 -> OP_INC .)
    OP_NE           reduce using rule 429 (expr_14 -> OP_INC .)
    AND             reduce using rule 429 (expr_14 -> OP_INC .)
    CARET           reduce using rule 429 (expr_14 -> OP_INC .)
    VERTICAL        reduce using rule 429 (expr_14 -> OP_INC .)
    OP_LAND         reduce using rule 429 (expr_14 -> OP_INC .)
    OP_LOR          reduce using rule 429 (expr_14 -> OP_INC .)
    QUES            reduce using rule 429 (expr_14 -> OP_INC .)
    RPAREN          reduce using rule 429 (expr_14 -> OP_INC .)
    COMMA           reduce using rule 429 (expr_14 -> OP_INC .)
    BRPAREN         reduce using rule 429 (expr_14 -> OP_INC .)
    EQUALS          reduce using rule 429 (expr_14 -> OP_INC .)
    ASS_ADD         reduce using rule 429 (expr_14 -> OP_INC .)
    ASS_SUB         reduce using rule 429 (expr_14 -> OP_INC .)
    ASS_MUL         reduce using rule 429 (expr_14 -> OP_INC .)
    ASS_DIV         reduce using rule 429 (expr_14 -> OP_INC .)
    ASS_AND         reduce using rule 429 (expr_14 -> OP_INC .)
    ASS_OR          reduce using rule 429 (expr_14 -> OP_INC .)
    ASS_XOR         reduce using rule 429 (expr_14 -> OP_INC .)
    ASS_MOD         reduce using rule 429 (expr_14 -> OP_INC .)
    ASS_SHL         reduce using rule 429 (expr_14 -> OP_INC .)
    ASS_SHRR        reduce using rule 429 (expr_14 -> OP_INC .)
    ASS_SHR         reduce using rule 429 (expr_14 -> OP_INC .)
    FRPAREN         reduce using rule 429 (expr_14 -> OP_INC .)
    COLON           reduce using rule 429 (expr_14 -> OP_INC .)
    SEMI            reduce using rule 429 (expr_14 -> OP_INC .)


state 231

    (348) unaryExpressionNotPlusMinus -> primary expt_74 . expr_14
    (350) unaryExpressionNotPlusMinus -> primary expt_74 .
    (574) expt_74 -> expt_74 . selector
    (429) expr_14 -> . OP_INC
    (430) expr_14 -> . OP_DEC
    (392) selector -> . FLPAREN expression FRPAREN
    (393) selector -> . DOT NEW innerCreator
    (394) selector -> . DOT SUPER superSuffix
    (395) selector -> . DOT THIS
    (396) selector -> . DOT Identifier expt_18
    (397) selector -> . DOT Identifier empty

    MULT            reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    SLASH           reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    PERCENT         reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    PLUS            reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    DASH            reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    OP_SHR          reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    OP_SHL          reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    OP_SHRR         reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    OP_LE           reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    OP_GE           reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    LESS            reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    MORE            reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    INSTANCEOF      reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    OP_EQ           reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    OP_NE           reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    AND             reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    CARET           reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    VERTICAL        reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    OP_LAND         reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    OP_LOR          reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    QUES            reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    EQUALS          reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    ASS_ADD         reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    ASS_SUB         reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    ASS_MUL         reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    ASS_DIV         reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    ASS_AND         reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    ASS_OR          reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    ASS_XOR         reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    ASS_MOD         reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    ASS_SHL         reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    ASS_SHRR        reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    ASS_SHR         reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    FRPAREN         reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    RPAREN          reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    COMMA           reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    BRPAREN         reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    COLON           reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    SEMI            reduce using rule 350 (unaryExpressionNotPlusMinus -> primary expt_74 .)
    OP_INC          shift and go to state 230
    OP_DEC          shift and go to state 232
    FLPAREN         shift and go to state 229
    DOT             shift and go to state 234

    selector                       shift and go to state 379
    expr_14                        shift and go to state 380

state 232

    (430) expr_14 -> OP_DEC .

    MULT            reduce using rule 430 (expr_14 -> OP_DEC .)
    SLASH           reduce using rule 430 (expr_14 -> OP_DEC .)
    PERCENT         reduce using rule 430 (expr_14 -> OP_DEC .)
    PLUS            reduce using rule 430 (expr_14 -> OP_DEC .)
    DASH            reduce using rule 430 (expr_14 -> OP_DEC .)
    OP_SHR          reduce using rule 430 (expr_14 -> OP_DEC .)
    OP_SHL          reduce using rule 430 (expr_14 -> OP_DEC .)
    OP_SHRR         reduce using rule 430 (expr_14 -> OP_DEC .)
    OP_LE           reduce using rule 430 (expr_14 -> OP_DEC .)
    OP_GE           reduce using rule 430 (expr_14 -> OP_DEC .)
    LESS            reduce using rule 430 (expr_14 -> OP_DEC .)
    MORE            reduce using rule 430 (expr_14 -> OP_DEC .)
    INSTANCEOF      reduce using rule 430 (expr_14 -> OP_DEC .)
    OP_EQ           reduce using rule 430 (expr_14 -> OP_DEC .)
    OP_NE           reduce using rule 430 (expr_14 -> OP_DEC .)
    AND             reduce using rule 430 (expr_14 -> OP_DEC .)
    CARET           reduce using rule 430 (expr_14 -> OP_DEC .)
    VERTICAL        reduce using rule 430 (expr_14 -> OP_DEC .)
    OP_LAND         reduce using rule 430 (expr_14 -> OP_DEC .)
    OP_LOR          reduce using rule 430 (expr_14 -> OP_DEC .)
    QUES            reduce using rule 430 (expr_14 -> OP_DEC .)
    RPAREN          reduce using rule 430 (expr_14 -> OP_DEC .)
    COMMA           reduce using rule 430 (expr_14 -> OP_DEC .)
    BRPAREN         reduce using rule 430 (expr_14 -> OP_DEC .)
    EQUALS          reduce using rule 430 (expr_14 -> OP_DEC .)
    ASS_ADD         reduce using rule 430 (expr_14 -> OP_DEC .)
    ASS_SUB         reduce using rule 430 (expr_14 -> OP_DEC .)
    ASS_MUL         reduce using rule 430 (expr_14 -> OP_DEC .)
    ASS_DIV         reduce using rule 430 (expr_14 -> OP_DEC .)
    ASS_AND         reduce using rule 430 (expr_14 -> OP_DEC .)
    ASS_OR          reduce using rule 430 (expr_14 -> OP_DEC .)
    ASS_XOR         reduce using rule 430 (expr_14 -> OP_DEC .)
    ASS_MOD         reduce using rule 430 (expr_14 -> OP_DEC .)
    ASS_SHL         reduce using rule 430 (expr_14 -> OP_DEC .)
    ASS_SHRR        reduce using rule 430 (expr_14 -> OP_DEC .)
    ASS_SHR         reduce using rule 430 (expr_14 -> OP_DEC .)
    FRPAREN         reduce using rule 430 (expr_14 -> OP_DEC .)
    COLON           reduce using rule 430 (expr_14 -> OP_DEC .)
    SEMI            reduce using rule 430 (expr_14 -> OP_DEC .)


state 233

    (349) unaryExpressionNotPlusMinus -> primary expr_14 .

    MULT            reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    SLASH           reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    PERCENT         reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    PLUS            reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    DASH            reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    OP_SHR          reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    OP_SHL          reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    OP_SHRR         reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    OP_LE           reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    OP_GE           reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    LESS            reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    MORE            reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    INSTANCEOF      reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    OP_EQ           reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    OP_NE           reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    AND             reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    CARET           reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    VERTICAL        reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    OP_LAND         reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    OP_LOR          reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    QUES            reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    EQUALS          reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    ASS_ADD         reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    ASS_SUB         reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    ASS_MUL         reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    ASS_DIV         reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    ASS_AND         reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    ASS_OR          reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    ASS_XOR         reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    ASS_MOD         reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    ASS_SHL         reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    ASS_SHRR        reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    ASS_SHR         reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    FRPAREN         reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    RPAREN          reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    COMMA           reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    BRPAREN         reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    COLON           reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)
    SEMI            reduce using rule 349 (unaryExpressionNotPlusMinus -> primary expr_14 .)


state 234

    (393) selector -> DOT . NEW innerCreator
    (394) selector -> DOT . SUPER superSuffix
    (395) selector -> DOT . THIS
    (396) selector -> DOT . Identifier expt_18
    (397) selector -> DOT . Identifier empty

    NEW             shift and go to state 383
    SUPER           shift and go to state 382
    THIS            shift and go to state 381
    Identifier      shift and go to state 384


state 235

    (345) unaryExpression -> OP_INC unaryExpression .

    MULT            reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    SLASH           reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    PERCENT         reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    PLUS            reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    DASH            reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    OP_SHR          reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    OP_SHL          reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    OP_SHRR         reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    OP_LE           reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    OP_GE           reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    LESS            reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    MORE            reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    INSTANCEOF      reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    OP_EQ           reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    OP_NE           reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    AND             reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    CARET           reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    VERTICAL        reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    OP_LAND         reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    OP_LOR          reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    QUES            reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    RPAREN          reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    COMMA           reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    BRPAREN         reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    EQUALS          reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    ASS_ADD         reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    ASS_SUB         reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    ASS_MUL         reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    ASS_DIV         reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    ASS_AND         reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    ASS_OR          reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    ASS_XOR         reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    ASS_MOD         reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    ASS_SHL         reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    ASS_SHRR        reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    ASS_SHR         reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    FRPAREN         reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    COLON           reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)
    SEMI            reduce using rule 345 (unaryExpression -> OP_INC unaryExpression .)


state 236

    (346) unaryExpression -> OP_DEC unaryExpression .

    MULT            reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    SLASH           reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    PERCENT         reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    PLUS            reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    DASH            reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    OP_SHR          reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    OP_SHL          reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    OP_SHRR         reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    OP_LE           reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    OP_GE           reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    LESS            reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    MORE            reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    INSTANCEOF      reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    OP_EQ           reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    OP_NE           reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    AND             reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    CARET           reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    VERTICAL        reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    OP_LAND         reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    OP_LOR          reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    QUES            reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    RPAREN          reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    COMMA           reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    BRPAREN         reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    EQUALS          reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_ADD         reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_SUB         reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_MUL         reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_DIV         reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_AND         reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_OR          reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_XOR         reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_MOD         reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_SHL         reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_SHRR        reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_SHR         reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    FRPAREN         reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    COLON           reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)
    SEMI            reduce using rule 346 (unaryExpression -> OP_DEC unaryExpression .)


state 237

    (364) primary -> NEW creator .

    OP_INC          reduce using rule 364 (primary -> NEW creator .)
    OP_DEC          reduce using rule 364 (primary -> NEW creator .)
    FLPAREN         reduce using rule 364 (primary -> NEW creator .)
    DOT             reduce using rule 364 (primary -> NEW creator .)
    MULT            reduce using rule 364 (primary -> NEW creator .)
    SLASH           reduce using rule 364 (primary -> NEW creator .)
    PERCENT         reduce using rule 364 (primary -> NEW creator .)
    PLUS            reduce using rule 364 (primary -> NEW creator .)
    DASH            reduce using rule 364 (primary -> NEW creator .)
    OP_SHR          reduce using rule 364 (primary -> NEW creator .)
    OP_SHL          reduce using rule 364 (primary -> NEW creator .)
    OP_SHRR         reduce using rule 364 (primary -> NEW creator .)
    OP_LE           reduce using rule 364 (primary -> NEW creator .)
    OP_GE           reduce using rule 364 (primary -> NEW creator .)
    LESS            reduce using rule 364 (primary -> NEW creator .)
    MORE            reduce using rule 364 (primary -> NEW creator .)
    INSTANCEOF      reduce using rule 364 (primary -> NEW creator .)
    OP_EQ           reduce using rule 364 (primary -> NEW creator .)
    OP_NE           reduce using rule 364 (primary -> NEW creator .)
    AND             reduce using rule 364 (primary -> NEW creator .)
    CARET           reduce using rule 364 (primary -> NEW creator .)
    VERTICAL        reduce using rule 364 (primary -> NEW creator .)
    OP_LAND         reduce using rule 364 (primary -> NEW creator .)
    OP_LOR          reduce using rule 364 (primary -> NEW creator .)
    QUES            reduce using rule 364 (primary -> NEW creator .)
    RPAREN          reduce using rule 364 (primary -> NEW creator .)
    COMMA           reduce using rule 364 (primary -> NEW creator .)
    BRPAREN         reduce using rule 364 (primary -> NEW creator .)
    EQUALS          reduce using rule 364 (primary -> NEW creator .)
    ASS_ADD         reduce using rule 364 (primary -> NEW creator .)
    ASS_SUB         reduce using rule 364 (primary -> NEW creator .)
    ASS_MUL         reduce using rule 364 (primary -> NEW creator .)
    ASS_DIV         reduce using rule 364 (primary -> NEW creator .)
    ASS_AND         reduce using rule 364 (primary -> NEW creator .)
    ASS_OR          reduce using rule 364 (primary -> NEW creator .)
    ASS_XOR         reduce using rule 364 (primary -> NEW creator .)
    ASS_MOD         reduce using rule 364 (primary -> NEW creator .)
    ASS_SHL         reduce using rule 364 (primary -> NEW creator .)
    ASS_SHRR        reduce using rule 364 (primary -> NEW creator .)
    ASS_SHR         reduce using rule 364 (primary -> NEW creator .)
    FRPAREN         reduce using rule 364 (primary -> NEW creator .)
    COLON           reduce using rule 364 (primary -> NEW creator .)
    SEMI            reduce using rule 364 (primary -> NEW creator .)


state 238

    (391) nonWildcardTypeArguments -> LESS . typeList MORE
    (75) typeList -> . type expt_22
    (76) typeList -> . type empty
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    typeList                       shift and go to state 385
    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    type                           shift and go to state 167

state 239

    (383) createdName -> classOrInterfaceType .

    FLPAREN         reduce using rule 383 (createdName -> classOrInterfaceType .)
    LPAREN          reduce using rule 383 (createdName -> classOrInterfaceType .)


state 240

    (380) creator -> nonWildcardTypeArguments . createdName classCreatorRest
    (383) createdName -> . classOrInterfaceType
    (384) createdName -> . primitiveType
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE

    Identifier      shift and go to state 166
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110

    createdName                    shift and go to state 386
    classOrInterfaceType           shift and go to state 239
    primitiveType                  shift and go to state 242

state 241

    (381) creator -> createdName . classCreatorRest
    (382) creator -> createdName . arrayCreatorRest
    (388) classCreatorRest -> . arguments
    (389) classCreatorRest -> . arguments classBody
    (387) arrayCreatorRest -> . FLPAREN expr_19
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

    FLPAREN         shift and go to state 387
    LPAREN          shift and go to state 204

    arguments                      shift and go to state 390
    classCreatorRest               shift and go to state 388
    arrayCreatorRest               shift and go to state 389

state 242

    (384) createdName -> primitiveType .

    FLPAREN         reduce using rule 384 (createdName -> primitiveType .)
    LPAREN          reduce using rule 384 (createdName -> primitiveType .)


state 243

    (354) unaryExpressionNotPlusMinus -> TILDE unaryExpression .

    MULT            reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    SLASH           reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    PERCENT         reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    PLUS            reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    DASH            reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_SHR          reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_SHL          reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_SHRR         reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_LE           reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_GE           reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    LESS            reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    MORE            reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    INSTANCEOF      reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_EQ           reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_NE           reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    AND             reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    CARET           reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    VERTICAL        reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_LAND         reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_LOR          reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    QUES            reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    EQUALS          reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_ADD         reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_SUB         reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_MUL         reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_DIV         reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_AND         reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_OR          reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_XOR         reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_MOD         reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_SHL         reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_SHRR        reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_SHR         reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    FRPAREN         reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    RPAREN          reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    COMMA           reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    BRPAREN         reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    COLON           reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    SEMI            reduce using rule 354 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)


state 244

    (358) primary -> primitiveType expt_24 . DOT CLASS
    (485) expt_24 -> expt_24 . FLPAREN FRPAREN

    DOT             shift and go to state 392
    FLPAREN         shift and go to state 391


state 245

    (484) expt_24 -> FLPAREN . FRPAREN

    FRPAREN         shift and go to state 393


state 246

    (359) primary -> primitiveType DOT . CLASS

    CLASS           shift and go to state 394


state 247

    (425) expr_12 -> DASH .

    PLUS            reduce using rule 425 (expr_12 -> DASH .)
    DASH            reduce using rule 425 (expr_12 -> DASH .)
    OP_INC          reduce using rule 425 (expr_12 -> DASH .)
    OP_DEC          reduce using rule 425 (expr_12 -> DASH .)
    EXCLAMATION     reduce using rule 425 (expr_12 -> DASH .)
    TILDE           reduce using rule 425 (expr_12 -> DASH .)
    VOID            reduce using rule 425 (expr_12 -> DASH .)
    Identifier      reduce using rule 425 (expr_12 -> DASH .)
    NEW             reduce using rule 425 (expr_12 -> DASH .)
    SUPER           reduce using rule 425 (expr_12 -> DASH .)
    THIS            reduce using rule 425 (expr_12 -> DASH .)
    LPAREN          reduce using rule 425 (expr_12 -> DASH .)
    BOOLEAN         reduce using rule 425 (expr_12 -> DASH .)
    CHAR            reduce using rule 425 (expr_12 -> DASH .)
    BYTE            reduce using rule 425 (expr_12 -> DASH .)
    SHORT           reduce using rule 425 (expr_12 -> DASH .)
    INT             reduce using rule 425 (expr_12 -> DASH .)
    LONG            reduce using rule 425 (expr_12 -> DASH .)
    FLOAT           reduce using rule 425 (expr_12 -> DASH .)
    DOUBLE          reduce using rule 425 (expr_12 -> DASH .)
    CharacterLiteral reduce using rule 425 (expr_12 -> DASH .)
    StringLiteral   reduce using rule 425 (expr_12 -> DASH .)
    NULL            reduce using rule 425 (expr_12 -> DASH .)
    NUMBER          reduce using rule 425 (expr_12 -> DASH .)
    HEX_NUMBER      reduce using rule 425 (expr_12 -> DASH .)
    LONG_NUMBER     reduce using rule 425 (expr_12 -> DASH .)
    LONG_HEX_NUMBER reduce using rule 425 (expr_12 -> DASH .)
    NON_INTEGER_1   reduce using rule 425 (expr_12 -> DASH .)
    NON_INTEGER_2   reduce using rule 425 (expr_12 -> DASH .)
    NON_INTEGER_3   reduce using rule 425 (expr_12 -> DASH .)
    TRUE            reduce using rule 425 (expr_12 -> DASH .)
    FALSE           reduce using rule 425 (expr_12 -> DASH .)


state 248

    (339) additiveExpression -> multiplicativeExpression expt_72 .
    (569) expt_72 -> expt_72 . expr_12 multiplicativeExpression
    (424) expr_12 -> . PLUS
    (425) expr_12 -> . DASH

    OP_SHR          reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    OP_SHL          reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    OP_SHRR         reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    OP_LE           reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    OP_GE           reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    LESS            reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    MORE            reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    INSTANCEOF      reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    OP_EQ           reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    OP_NE           reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    AND             reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    CARET           reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    VERTICAL        reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    OP_LAND         reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    OP_LOR          reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    QUES            reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    EQUALS          reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    ASS_ADD         reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    ASS_SUB         reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    ASS_MUL         reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    ASS_DIV         reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    ASS_AND         reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    ASS_OR          reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    ASS_XOR         reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    ASS_MOD         reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    ASS_SHL         reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    ASS_SHRR        reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    ASS_SHR         reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    SEMI            reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    COMMA           reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    RPAREN          reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    BRPAREN         reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    FRPAREN         reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    COLON           reduce using rule 339 (additiveExpression -> multiplicativeExpression expt_72 .)
    PLUS            shift and go to state 249
    DASH            shift and go to state 247

    expr_12                        shift and go to state 395

state 249

    (424) expr_12 -> PLUS .

    PLUS            reduce using rule 424 (expr_12 -> PLUS .)
    DASH            reduce using rule 424 (expr_12 -> PLUS .)
    OP_INC          reduce using rule 424 (expr_12 -> PLUS .)
    OP_DEC          reduce using rule 424 (expr_12 -> PLUS .)
    EXCLAMATION     reduce using rule 424 (expr_12 -> PLUS .)
    TILDE           reduce using rule 424 (expr_12 -> PLUS .)
    VOID            reduce using rule 424 (expr_12 -> PLUS .)
    Identifier      reduce using rule 424 (expr_12 -> PLUS .)
    NEW             reduce using rule 424 (expr_12 -> PLUS .)
    SUPER           reduce using rule 424 (expr_12 -> PLUS .)
    THIS            reduce using rule 424 (expr_12 -> PLUS .)
    LPAREN          reduce using rule 424 (expr_12 -> PLUS .)
    BOOLEAN         reduce using rule 424 (expr_12 -> PLUS .)
    CHAR            reduce using rule 424 (expr_12 -> PLUS .)
    BYTE            reduce using rule 424 (expr_12 -> PLUS .)
    SHORT           reduce using rule 424 (expr_12 -> PLUS .)
    INT             reduce using rule 424 (expr_12 -> PLUS .)
    LONG            reduce using rule 424 (expr_12 -> PLUS .)
    FLOAT           reduce using rule 424 (expr_12 -> PLUS .)
    DOUBLE          reduce using rule 424 (expr_12 -> PLUS .)
    CharacterLiteral reduce using rule 424 (expr_12 -> PLUS .)
    StringLiteral   reduce using rule 424 (expr_12 -> PLUS .)
    NULL            reduce using rule 424 (expr_12 -> PLUS .)
    NUMBER          reduce using rule 424 (expr_12 -> PLUS .)
    HEX_NUMBER      reduce using rule 424 (expr_12 -> PLUS .)
    LONG_NUMBER     reduce using rule 424 (expr_12 -> PLUS .)
    LONG_HEX_NUMBER reduce using rule 424 (expr_12 -> PLUS .)
    NON_INTEGER_1   reduce using rule 424 (expr_12 -> PLUS .)
    NON_INTEGER_2   reduce using rule 424 (expr_12 -> PLUS .)
    NON_INTEGER_3   reduce using rule 424 (expr_12 -> PLUS .)
    TRUE            reduce using rule 424 (expr_12 -> PLUS .)
    FALSE           reduce using rule 424 (expr_12 -> PLUS .)


state 250

    (568) expt_72 -> expr_12 . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    multiplicativeExpression       shift and go to state 396
    primary                        shift and go to state 125
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138

state 251

    (332) relationalOp -> LESS .

    PLUS            reduce using rule 332 (relationalOp -> LESS .)
    DASH            reduce using rule 332 (relationalOp -> LESS .)
    OP_INC          reduce using rule 332 (relationalOp -> LESS .)
    OP_DEC          reduce using rule 332 (relationalOp -> LESS .)
    EXCLAMATION     reduce using rule 332 (relationalOp -> LESS .)
    TILDE           reduce using rule 332 (relationalOp -> LESS .)
    VOID            reduce using rule 332 (relationalOp -> LESS .)
    Identifier      reduce using rule 332 (relationalOp -> LESS .)
    NEW             reduce using rule 332 (relationalOp -> LESS .)
    SUPER           reduce using rule 332 (relationalOp -> LESS .)
    THIS            reduce using rule 332 (relationalOp -> LESS .)
    LPAREN          reduce using rule 332 (relationalOp -> LESS .)
    BOOLEAN         reduce using rule 332 (relationalOp -> LESS .)
    CHAR            reduce using rule 332 (relationalOp -> LESS .)
    BYTE            reduce using rule 332 (relationalOp -> LESS .)
    SHORT           reduce using rule 332 (relationalOp -> LESS .)
    INT             reduce using rule 332 (relationalOp -> LESS .)
    LONG            reduce using rule 332 (relationalOp -> LESS .)
    FLOAT           reduce using rule 332 (relationalOp -> LESS .)
    DOUBLE          reduce using rule 332 (relationalOp -> LESS .)
    CharacterLiteral reduce using rule 332 (relationalOp -> LESS .)
    StringLiteral   reduce using rule 332 (relationalOp -> LESS .)
    NULL            reduce using rule 332 (relationalOp -> LESS .)
    NUMBER          reduce using rule 332 (relationalOp -> LESS .)
    HEX_NUMBER      reduce using rule 332 (relationalOp -> LESS .)
    LONG_NUMBER     reduce using rule 332 (relationalOp -> LESS .)
    LONG_HEX_NUMBER reduce using rule 332 (relationalOp -> LESS .)
    NON_INTEGER_1   reduce using rule 332 (relationalOp -> LESS .)
    NON_INTEGER_2   reduce using rule 332 (relationalOp -> LESS .)
    NON_INTEGER_3   reduce using rule 332 (relationalOp -> LESS .)
    TRUE            reduce using rule 332 (relationalOp -> LESS .)
    FALSE           reduce using rule 332 (relationalOp -> LESS .)


state 252

    (331) relationalOp -> OP_GE .

    PLUS            reduce using rule 331 (relationalOp -> OP_GE .)
    DASH            reduce using rule 331 (relationalOp -> OP_GE .)
    OP_INC          reduce using rule 331 (relationalOp -> OP_GE .)
    OP_DEC          reduce using rule 331 (relationalOp -> OP_GE .)
    EXCLAMATION     reduce using rule 331 (relationalOp -> OP_GE .)
    TILDE           reduce using rule 331 (relationalOp -> OP_GE .)
    VOID            reduce using rule 331 (relationalOp -> OP_GE .)
    Identifier      reduce using rule 331 (relationalOp -> OP_GE .)
    NEW             reduce using rule 331 (relationalOp -> OP_GE .)
    SUPER           reduce using rule 331 (relationalOp -> OP_GE .)
    THIS            reduce using rule 331 (relationalOp -> OP_GE .)
    LPAREN          reduce using rule 331 (relationalOp -> OP_GE .)
    BOOLEAN         reduce using rule 331 (relationalOp -> OP_GE .)
    CHAR            reduce using rule 331 (relationalOp -> OP_GE .)
    BYTE            reduce using rule 331 (relationalOp -> OP_GE .)
    SHORT           reduce using rule 331 (relationalOp -> OP_GE .)
    INT             reduce using rule 331 (relationalOp -> OP_GE .)
    LONG            reduce using rule 331 (relationalOp -> OP_GE .)
    FLOAT           reduce using rule 331 (relationalOp -> OP_GE .)
    DOUBLE          reduce using rule 331 (relationalOp -> OP_GE .)
    CharacterLiteral reduce using rule 331 (relationalOp -> OP_GE .)
    StringLiteral   reduce using rule 331 (relationalOp -> OP_GE .)
    NULL            reduce using rule 331 (relationalOp -> OP_GE .)
    NUMBER          reduce using rule 331 (relationalOp -> OP_GE .)
    HEX_NUMBER      reduce using rule 331 (relationalOp -> OP_GE .)
    LONG_NUMBER     reduce using rule 331 (relationalOp -> OP_GE .)
    LONG_HEX_NUMBER reduce using rule 331 (relationalOp -> OP_GE .)
    NON_INTEGER_1   reduce using rule 331 (relationalOp -> OP_GE .)
    NON_INTEGER_2   reduce using rule 331 (relationalOp -> OP_GE .)
    NON_INTEGER_3   reduce using rule 331 (relationalOp -> OP_GE .)
    TRUE            reduce using rule 331 (relationalOp -> OP_GE .)
    FALSE           reduce using rule 331 (relationalOp -> OP_GE .)


state 253

    (328) relationalExpression -> shiftExpression expt_70 .
    (565) expt_70 -> expt_70 . relationalOp shiftExpression
    (330) relationalOp -> . OP_LE
    (331) relationalOp -> . OP_GE
    (332) relationalOp -> . LESS
    (333) relationalOp -> . MORE

    INSTANCEOF      reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    OP_EQ           reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    OP_NE           reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    AND             reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    CARET           reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    VERTICAL        reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    OP_LAND         reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    OP_LOR          reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    QUES            reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    COMMA           reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    RPAREN          reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    EQUALS          reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    ASS_ADD         reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    ASS_SUB         reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    ASS_MUL         reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    ASS_DIV         reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    ASS_AND         reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    ASS_OR          reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    ASS_XOR         reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    ASS_MOD         reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    ASS_SHL         reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    ASS_SHRR        reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    ASS_SHR         reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    SEMI            reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    COLON           reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    BRPAREN         reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    FRPAREN         reduce using rule 328 (relationalExpression -> shiftExpression expt_70 .)
    OP_LE           shift and go to state 254
    OP_GE           shift and go to state 252
    LESS            shift and go to state 251
    MORE            shift and go to state 256

    relationalOp                   shift and go to state 397

state 254

    (330) relationalOp -> OP_LE .

    PLUS            reduce using rule 330 (relationalOp -> OP_LE .)
    DASH            reduce using rule 330 (relationalOp -> OP_LE .)
    OP_INC          reduce using rule 330 (relationalOp -> OP_LE .)
    OP_DEC          reduce using rule 330 (relationalOp -> OP_LE .)
    EXCLAMATION     reduce using rule 330 (relationalOp -> OP_LE .)
    TILDE           reduce using rule 330 (relationalOp -> OP_LE .)
    VOID            reduce using rule 330 (relationalOp -> OP_LE .)
    Identifier      reduce using rule 330 (relationalOp -> OP_LE .)
    NEW             reduce using rule 330 (relationalOp -> OP_LE .)
    SUPER           reduce using rule 330 (relationalOp -> OP_LE .)
    THIS            reduce using rule 330 (relationalOp -> OP_LE .)
    LPAREN          reduce using rule 330 (relationalOp -> OP_LE .)
    BOOLEAN         reduce using rule 330 (relationalOp -> OP_LE .)
    CHAR            reduce using rule 330 (relationalOp -> OP_LE .)
    BYTE            reduce using rule 330 (relationalOp -> OP_LE .)
    SHORT           reduce using rule 330 (relationalOp -> OP_LE .)
    INT             reduce using rule 330 (relationalOp -> OP_LE .)
    LONG            reduce using rule 330 (relationalOp -> OP_LE .)
    FLOAT           reduce using rule 330 (relationalOp -> OP_LE .)
    DOUBLE          reduce using rule 330 (relationalOp -> OP_LE .)
    CharacterLiteral reduce using rule 330 (relationalOp -> OP_LE .)
    StringLiteral   reduce using rule 330 (relationalOp -> OP_LE .)
    NULL            reduce using rule 330 (relationalOp -> OP_LE .)
    NUMBER          reduce using rule 330 (relationalOp -> OP_LE .)
    HEX_NUMBER      reduce using rule 330 (relationalOp -> OP_LE .)
    LONG_NUMBER     reduce using rule 330 (relationalOp -> OP_LE .)
    LONG_HEX_NUMBER reduce using rule 330 (relationalOp -> OP_LE .)
    NON_INTEGER_1   reduce using rule 330 (relationalOp -> OP_LE .)
    NON_INTEGER_2   reduce using rule 330 (relationalOp -> OP_LE .)
    NON_INTEGER_3   reduce using rule 330 (relationalOp -> OP_LE .)
    TRUE            reduce using rule 330 (relationalOp -> OP_LE .)
    FALSE           reduce using rule 330 (relationalOp -> OP_LE .)


state 255

    (564) expt_70 -> relationalOp . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    multiplicativeExpression       shift and go to state 145
    primary                        shift and go to state 125
    shiftExpression                shift and go to state 398
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138

state 256

    (333) relationalOp -> MORE .

    PLUS            reduce using rule 333 (relationalOp -> MORE .)
    DASH            reduce using rule 333 (relationalOp -> MORE .)
    OP_INC          reduce using rule 333 (relationalOp -> MORE .)
    OP_DEC          reduce using rule 333 (relationalOp -> MORE .)
    EXCLAMATION     reduce using rule 333 (relationalOp -> MORE .)
    TILDE           reduce using rule 333 (relationalOp -> MORE .)
    VOID            reduce using rule 333 (relationalOp -> MORE .)
    Identifier      reduce using rule 333 (relationalOp -> MORE .)
    NEW             reduce using rule 333 (relationalOp -> MORE .)
    SUPER           reduce using rule 333 (relationalOp -> MORE .)
    THIS            reduce using rule 333 (relationalOp -> MORE .)
    LPAREN          reduce using rule 333 (relationalOp -> MORE .)
    BOOLEAN         reduce using rule 333 (relationalOp -> MORE .)
    CHAR            reduce using rule 333 (relationalOp -> MORE .)
    BYTE            reduce using rule 333 (relationalOp -> MORE .)
    SHORT           reduce using rule 333 (relationalOp -> MORE .)
    INT             reduce using rule 333 (relationalOp -> MORE .)
    LONG            reduce using rule 333 (relationalOp -> MORE .)
    FLOAT           reduce using rule 333 (relationalOp -> MORE .)
    DOUBLE          reduce using rule 333 (relationalOp -> MORE .)
    CharacterLiteral reduce using rule 333 (relationalOp -> MORE .)
    StringLiteral   reduce using rule 333 (relationalOp -> MORE .)
    NULL            reduce using rule 333 (relationalOp -> MORE .)
    NUMBER          reduce using rule 333 (relationalOp -> MORE .)
    HEX_NUMBER      reduce using rule 333 (relationalOp -> MORE .)
    LONG_NUMBER     reduce using rule 333 (relationalOp -> MORE .)
    LONG_HEX_NUMBER reduce using rule 333 (relationalOp -> MORE .)
    NON_INTEGER_1   reduce using rule 333 (relationalOp -> MORE .)
    NON_INTEGER_2   reduce using rule 333 (relationalOp -> MORE .)
    NON_INTEGER_3   reduce using rule 333 (relationalOp -> MORE .)
    TRUE            reduce using rule 333 (relationalOp -> MORE .)
    FALSE           reduce using rule 333 (relationalOp -> MORE .)


state 257

    (571) expt_73 -> sub_expt_73 .

    MULT            reduce using rule 571 (expt_73 -> sub_expt_73 .)
    SLASH           reduce using rule 571 (expt_73 -> sub_expt_73 .)
    PERCENT         reduce using rule 571 (expt_73 -> sub_expt_73 .)
    PLUS            reduce using rule 571 (expt_73 -> sub_expt_73 .)
    DASH            reduce using rule 571 (expt_73 -> sub_expt_73 .)
    OP_SHR          reduce using rule 571 (expt_73 -> sub_expt_73 .)
    OP_SHL          reduce using rule 571 (expt_73 -> sub_expt_73 .)
    OP_SHRR         reduce using rule 571 (expt_73 -> sub_expt_73 .)
    OP_LE           reduce using rule 571 (expt_73 -> sub_expt_73 .)
    OP_GE           reduce using rule 571 (expt_73 -> sub_expt_73 .)
    LESS            reduce using rule 571 (expt_73 -> sub_expt_73 .)
    MORE            reduce using rule 571 (expt_73 -> sub_expt_73 .)
    INSTANCEOF      reduce using rule 571 (expt_73 -> sub_expt_73 .)
    OP_EQ           reduce using rule 571 (expt_73 -> sub_expt_73 .)
    OP_NE           reduce using rule 571 (expt_73 -> sub_expt_73 .)
    AND             reduce using rule 571 (expt_73 -> sub_expt_73 .)
    CARET           reduce using rule 571 (expt_73 -> sub_expt_73 .)
    VERTICAL        reduce using rule 571 (expt_73 -> sub_expt_73 .)
    OP_LAND         reduce using rule 571 (expt_73 -> sub_expt_73 .)
    OP_LOR          reduce using rule 571 (expt_73 -> sub_expt_73 .)
    QUES            reduce using rule 571 (expt_73 -> sub_expt_73 .)
    RPAREN          reduce using rule 571 (expt_73 -> sub_expt_73 .)
    COMMA           reduce using rule 571 (expt_73 -> sub_expt_73 .)
    BRPAREN         reduce using rule 571 (expt_73 -> sub_expt_73 .)
    EQUALS          reduce using rule 571 (expt_73 -> sub_expt_73 .)
    ASS_ADD         reduce using rule 571 (expt_73 -> sub_expt_73 .)
    ASS_SUB         reduce using rule 571 (expt_73 -> sub_expt_73 .)
    ASS_MUL         reduce using rule 571 (expt_73 -> sub_expt_73 .)
    ASS_DIV         reduce using rule 571 (expt_73 -> sub_expt_73 .)
    ASS_AND         reduce using rule 571 (expt_73 -> sub_expt_73 .)
    ASS_OR          reduce using rule 571 (expt_73 -> sub_expt_73 .)
    ASS_XOR         reduce using rule 571 (expt_73 -> sub_expt_73 .)
    ASS_MOD         reduce using rule 571 (expt_73 -> sub_expt_73 .)
    ASS_SHL         reduce using rule 571 (expt_73 -> sub_expt_73 .)
    ASS_SHRR        reduce using rule 571 (expt_73 -> sub_expt_73 .)
    ASS_SHR         reduce using rule 571 (expt_73 -> sub_expt_73 .)
    FRPAREN         reduce using rule 571 (expt_73 -> sub_expt_73 .)
    COLON           reduce using rule 571 (expt_73 -> sub_expt_73 .)
    SEMI            reduce using rule 571 (expt_73 -> sub_expt_73 .)


state 258

    (428) expr_13 -> PERCENT .

    PLUS            reduce using rule 428 (expr_13 -> PERCENT .)
    DASH            reduce using rule 428 (expr_13 -> PERCENT .)
    OP_INC          reduce using rule 428 (expr_13 -> PERCENT .)
    OP_DEC          reduce using rule 428 (expr_13 -> PERCENT .)
    EXCLAMATION     reduce using rule 428 (expr_13 -> PERCENT .)
    TILDE           reduce using rule 428 (expr_13 -> PERCENT .)
    VOID            reduce using rule 428 (expr_13 -> PERCENT .)
    Identifier      reduce using rule 428 (expr_13 -> PERCENT .)
    NEW             reduce using rule 428 (expr_13 -> PERCENT .)
    SUPER           reduce using rule 428 (expr_13 -> PERCENT .)
    THIS            reduce using rule 428 (expr_13 -> PERCENT .)
    LPAREN          reduce using rule 428 (expr_13 -> PERCENT .)
    BOOLEAN         reduce using rule 428 (expr_13 -> PERCENT .)
    CHAR            reduce using rule 428 (expr_13 -> PERCENT .)
    BYTE            reduce using rule 428 (expr_13 -> PERCENT .)
    SHORT           reduce using rule 428 (expr_13 -> PERCENT .)
    INT             reduce using rule 428 (expr_13 -> PERCENT .)
    LONG            reduce using rule 428 (expr_13 -> PERCENT .)
    FLOAT           reduce using rule 428 (expr_13 -> PERCENT .)
    DOUBLE          reduce using rule 428 (expr_13 -> PERCENT .)
    CharacterLiteral reduce using rule 428 (expr_13 -> PERCENT .)
    StringLiteral   reduce using rule 428 (expr_13 -> PERCENT .)
    NULL            reduce using rule 428 (expr_13 -> PERCENT .)
    NUMBER          reduce using rule 428 (expr_13 -> PERCENT .)
    HEX_NUMBER      reduce using rule 428 (expr_13 -> PERCENT .)
    LONG_NUMBER     reduce using rule 428 (expr_13 -> PERCENT .)
    LONG_HEX_NUMBER reduce using rule 428 (expr_13 -> PERCENT .)
    NON_INTEGER_1   reduce using rule 428 (expr_13 -> PERCENT .)
    NON_INTEGER_2   reduce using rule 428 (expr_13 -> PERCENT .)
    NON_INTEGER_3   reduce using rule 428 (expr_13 -> PERCENT .)
    TRUE            reduce using rule 428 (expr_13 -> PERCENT .)
    FALSE           reduce using rule 428 (expr_13 -> PERCENT .)


state 259

    (341) multiplicativeExpression -> unaryExpression expt_73 .
    (572) expt_73 -> expt_73 . sub_expt_73
    (570) sub_expt_73 -> . expr_13 unaryExpression
    (426) expr_13 -> . MULT
    (427) expr_13 -> . SLASH
    (428) expr_13 -> . PERCENT

    PLUS            reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    DASH            reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    OP_SHR          reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    OP_SHL          reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    OP_SHRR         reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    OP_LE           reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    OP_GE           reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    LESS            reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    MORE            reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    INSTANCEOF      reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    OP_EQ           reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    OP_NE           reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    AND             reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    CARET           reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    VERTICAL        reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    OP_LAND         reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    OP_LOR          reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    QUES            reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    EQUALS          reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    ASS_ADD         reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    ASS_SUB         reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    ASS_MUL         reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    ASS_DIV         reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    ASS_AND         reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    ASS_OR          reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    ASS_XOR         reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    ASS_MOD         reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    ASS_SHL         reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    ASS_SHRR        reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    ASS_SHR         reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    COMMA           reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    RPAREN          reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    SEMI            reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    BRPAREN         reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    FRPAREN         reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    COLON           reduce using rule 341 (multiplicativeExpression -> unaryExpression expt_73 .)
    MULT            shift and go to state 261
    SLASH           shift and go to state 260
    PERCENT         shift and go to state 258

    sub_expt_73                    shift and go to state 399
    expr_13                        shift and go to state 262

state 260

    (427) expr_13 -> SLASH .

    PLUS            reduce using rule 427 (expr_13 -> SLASH .)
    DASH            reduce using rule 427 (expr_13 -> SLASH .)
    OP_INC          reduce using rule 427 (expr_13 -> SLASH .)
    OP_DEC          reduce using rule 427 (expr_13 -> SLASH .)
    EXCLAMATION     reduce using rule 427 (expr_13 -> SLASH .)
    TILDE           reduce using rule 427 (expr_13 -> SLASH .)
    VOID            reduce using rule 427 (expr_13 -> SLASH .)
    Identifier      reduce using rule 427 (expr_13 -> SLASH .)
    NEW             reduce using rule 427 (expr_13 -> SLASH .)
    SUPER           reduce using rule 427 (expr_13 -> SLASH .)
    THIS            reduce using rule 427 (expr_13 -> SLASH .)
    LPAREN          reduce using rule 427 (expr_13 -> SLASH .)
    BOOLEAN         reduce using rule 427 (expr_13 -> SLASH .)
    CHAR            reduce using rule 427 (expr_13 -> SLASH .)
    BYTE            reduce using rule 427 (expr_13 -> SLASH .)
    SHORT           reduce using rule 427 (expr_13 -> SLASH .)
    INT             reduce using rule 427 (expr_13 -> SLASH .)
    LONG            reduce using rule 427 (expr_13 -> SLASH .)
    FLOAT           reduce using rule 427 (expr_13 -> SLASH .)
    DOUBLE          reduce using rule 427 (expr_13 -> SLASH .)
    CharacterLiteral reduce using rule 427 (expr_13 -> SLASH .)
    StringLiteral   reduce using rule 427 (expr_13 -> SLASH .)
    NULL            reduce using rule 427 (expr_13 -> SLASH .)
    NUMBER          reduce using rule 427 (expr_13 -> SLASH .)
    HEX_NUMBER      reduce using rule 427 (expr_13 -> SLASH .)
    LONG_NUMBER     reduce using rule 427 (expr_13 -> SLASH .)
    LONG_HEX_NUMBER reduce using rule 427 (expr_13 -> SLASH .)
    NON_INTEGER_1   reduce using rule 427 (expr_13 -> SLASH .)
    NON_INTEGER_2   reduce using rule 427 (expr_13 -> SLASH .)
    NON_INTEGER_3   reduce using rule 427 (expr_13 -> SLASH .)
    TRUE            reduce using rule 427 (expr_13 -> SLASH .)
    FALSE           reduce using rule 427 (expr_13 -> SLASH .)


state 261

    (426) expr_13 -> MULT .

    PLUS            reduce using rule 426 (expr_13 -> MULT .)
    DASH            reduce using rule 426 (expr_13 -> MULT .)
    OP_INC          reduce using rule 426 (expr_13 -> MULT .)
    OP_DEC          reduce using rule 426 (expr_13 -> MULT .)
    EXCLAMATION     reduce using rule 426 (expr_13 -> MULT .)
    TILDE           reduce using rule 426 (expr_13 -> MULT .)
    VOID            reduce using rule 426 (expr_13 -> MULT .)
    Identifier      reduce using rule 426 (expr_13 -> MULT .)
    NEW             reduce using rule 426 (expr_13 -> MULT .)
    SUPER           reduce using rule 426 (expr_13 -> MULT .)
    THIS            reduce using rule 426 (expr_13 -> MULT .)
    LPAREN          reduce using rule 426 (expr_13 -> MULT .)
    BOOLEAN         reduce using rule 426 (expr_13 -> MULT .)
    CHAR            reduce using rule 426 (expr_13 -> MULT .)
    BYTE            reduce using rule 426 (expr_13 -> MULT .)
    SHORT           reduce using rule 426 (expr_13 -> MULT .)
    INT             reduce using rule 426 (expr_13 -> MULT .)
    LONG            reduce using rule 426 (expr_13 -> MULT .)
    FLOAT           reduce using rule 426 (expr_13 -> MULT .)
    DOUBLE          reduce using rule 426 (expr_13 -> MULT .)
    CharacterLiteral reduce using rule 426 (expr_13 -> MULT .)
    StringLiteral   reduce using rule 426 (expr_13 -> MULT .)
    NULL            reduce using rule 426 (expr_13 -> MULT .)
    NUMBER          reduce using rule 426 (expr_13 -> MULT .)
    HEX_NUMBER      reduce using rule 426 (expr_13 -> MULT .)
    LONG_NUMBER     reduce using rule 426 (expr_13 -> MULT .)
    LONG_HEX_NUMBER reduce using rule 426 (expr_13 -> MULT .)
    NON_INTEGER_1   reduce using rule 426 (expr_13 -> MULT .)
    NON_INTEGER_2   reduce using rule 426 (expr_13 -> MULT .)
    NON_INTEGER_3   reduce using rule 426 (expr_13 -> MULT .)
    TRUE            reduce using rule 426 (expr_13 -> MULT .)
    FALSE           reduce using rule 426 (expr_13 -> MULT .)


state 262

    (570) sub_expt_73 -> expr_13 . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    unaryExpression                shift and go to state 400
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    parExpression                  shift and go to state 150
    primary                        shift and go to state 125
    primitiveType                  shift and go to state 138
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    FloatingPointLiteral           shift and go to state 134
    integerLiteral                 shift and go to state 111

state 263

    (431) expr_15 -> type .

    RPAREN          reduce using rule 431 (expr_15 -> type .)


state 264

    (298) expression -> conditionalExpression . assignmentOperator expression
    (299) expression -> conditionalExpression .
    (300) assignmentOperator -> . EQUALS
    (301) assignmentOperator -> . ASS_ADD
    (302) assignmentOperator -> . ASS_SUB
    (303) assignmentOperator -> . ASS_MUL
    (304) assignmentOperator -> . ASS_DIV
    (305) assignmentOperator -> . ASS_AND
    (306) assignmentOperator -> . ASS_OR
    (307) assignmentOperator -> . ASS_XOR
    (308) assignmentOperator -> . ASS_MOD
    (309) assignmentOperator -> . ASS_SHL
    (310) assignmentOperator -> . ASS_SHRR
    (311) assignmentOperator -> . ASS_SHR

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for ASS_ADD resolved as shift
  ! shift/reduce conflict for ASS_SUB resolved as shift
  ! shift/reduce conflict for ASS_MUL resolved as shift
  ! shift/reduce conflict for ASS_DIV resolved as shift
  ! shift/reduce conflict for ASS_AND resolved as shift
  ! shift/reduce conflict for ASS_OR resolved as shift
  ! shift/reduce conflict for ASS_XOR resolved as shift
  ! shift/reduce conflict for ASS_MOD resolved as shift
  ! shift/reduce conflict for ASS_SHL resolved as shift
  ! shift/reduce conflict for ASS_SHRR resolved as shift
  ! shift/reduce conflict for ASS_SHR resolved as shift
    SEMI            reduce using rule 299 (expression -> conditionalExpression .)
    COLON           reduce using rule 299 (expression -> conditionalExpression .)
    RPAREN          reduce using rule 299 (expression -> conditionalExpression .)
    COMMA           reduce using rule 299 (expression -> conditionalExpression .)
    FRPAREN         reduce using rule 299 (expression -> conditionalExpression .)
    BRPAREN         reduce using rule 299 (expression -> conditionalExpression .)
    EQUALS          shift and go to state 407
    ASS_ADD         shift and go to state 402
    ASS_SUB         shift and go to state 410
    ASS_MUL         shift and go to state 408
    ASS_DIV         shift and go to state 401
    ASS_AND         shift and go to state 409
    ASS_OR          shift and go to state 405
    ASS_XOR         shift and go to state 403
    ASS_MOD         shift and go to state 413
    ASS_SHL         shift and go to state 412
    ASS_SHRR        shift and go to state 404
    ASS_SHR         shift and go to state 411

  ! EQUALS          [ reduce using rule 299 (expression -> conditionalExpression .) ]
  ! ASS_ADD         [ reduce using rule 299 (expression -> conditionalExpression .) ]
  ! ASS_SUB         [ reduce using rule 299 (expression -> conditionalExpression .) ]
  ! ASS_MUL         [ reduce using rule 299 (expression -> conditionalExpression .) ]
  ! ASS_DIV         [ reduce using rule 299 (expression -> conditionalExpression .) ]
  ! ASS_AND         [ reduce using rule 299 (expression -> conditionalExpression .) ]
  ! ASS_OR          [ reduce using rule 299 (expression -> conditionalExpression .) ]
  ! ASS_XOR         [ reduce using rule 299 (expression -> conditionalExpression .) ]
  ! ASS_MOD         [ reduce using rule 299 (expression -> conditionalExpression .) ]
  ! ASS_SHL         [ reduce using rule 299 (expression -> conditionalExpression .) ]
  ! ASS_SHRR        [ reduce using rule 299 (expression -> conditionalExpression .) ]
  ! ASS_SHR         [ reduce using rule 299 (expression -> conditionalExpression .) ]

    assignmentOperator             shift and go to state 406

state 265

    (356) castExpression -> LPAREN expr_15 . RPAREN unaryExpressionNotPlusMinus

    RPAREN          shift and go to state 414


state 266

    (154) classOrInterfaceType -> Identifier . expt_32 expt_33
    (155) classOrInterfaceType -> Identifier . expt_32 empty
    (156) classOrInterfaceType -> Identifier . empty expt_33
    (157) classOrInterfaceType -> Identifier . empty empty
    (360) primary -> Identifier . expt_42 identifierSuffix
    (361) primary -> Identifier . expt_42
    (362) primary -> Identifier . identifierSuffix
    (363) primary -> Identifier .
    (500) expt_32 -> . typeArguments
    (501) expt_32 -> . empty
    (584) empty -> .
    (520) expt_42 -> . DOT Identifier
    (521) expt_42 -> . expt_42 DOT Identifier
    (372) identifierSuffix -> . suffixStatements DOT CLASS
    (373) identifierSuffix -> . suffixExprStatements
    (374) identifierSuffix -> . arguments
    (375) identifierSuffix -> . DOT CLASS
    (376) identifierSuffix -> . DOT explicitGenericInvocation
    (377) identifierSuffix -> . DOT THIS
    (378) identifierSuffix -> . DOT SUPER arguments
    (379) identifierSuffix -> . DOT NEW innerCreator
    (168) typeArguments -> . LESS typeArgument expt_34 MORE
    (169) typeArguments -> . LESS typeArgument MORE
    (433) suffixStatements -> . FLPAREN FRPAREN
    (434) suffixStatements -> . suffixStatements FLPAREN FRPAREN
    (435) suffixExprStatements -> . FLPAREN expression FRPAREN
    (436) suffixExprStatements -> . suffixExprStatements FLPAREN expression FRPAREN
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

  ! reduce/reduce conflict for DOT resolved using rule 363 (primary -> Identifier .)
  ! reduce/reduce conflict for FLPAREN resolved using rule 363 (primary -> Identifier .)
  ! reduce/reduce conflict for RPAREN resolved using rule 363 (primary -> Identifier .)
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 363 (primary -> Identifier .)
    OP_DEC          reduce using rule 363 (primary -> Identifier .)
    MULT            reduce using rule 363 (primary -> Identifier .)
    SLASH           reduce using rule 363 (primary -> Identifier .)
    PERCENT         reduce using rule 363 (primary -> Identifier .)
    PLUS            reduce using rule 363 (primary -> Identifier .)
    DASH            reduce using rule 363 (primary -> Identifier .)
    OP_SHR          reduce using rule 363 (primary -> Identifier .)
    OP_SHL          reduce using rule 363 (primary -> Identifier .)
    OP_SHRR         reduce using rule 363 (primary -> Identifier .)
    OP_LE           reduce using rule 363 (primary -> Identifier .)
    OP_GE           reduce using rule 363 (primary -> Identifier .)
    MORE            reduce using rule 363 (primary -> Identifier .)
    INSTANCEOF      reduce using rule 363 (primary -> Identifier .)
    OP_EQ           reduce using rule 363 (primary -> Identifier .)
    OP_NE           reduce using rule 363 (primary -> Identifier .)
    AND             reduce using rule 363 (primary -> Identifier .)
    CARET           reduce using rule 363 (primary -> Identifier .)
    VERTICAL        reduce using rule 363 (primary -> Identifier .)
    OP_LAND         reduce using rule 363 (primary -> Identifier .)
    OP_LOR          reduce using rule 363 (primary -> Identifier .)
    QUES            reduce using rule 363 (primary -> Identifier .)
    EQUALS          reduce using rule 363 (primary -> Identifier .)
    ASS_ADD         reduce using rule 363 (primary -> Identifier .)
    ASS_SUB         reduce using rule 363 (primary -> Identifier .)
    ASS_MUL         reduce using rule 363 (primary -> Identifier .)
    ASS_DIV         reduce using rule 363 (primary -> Identifier .)
    ASS_AND         reduce using rule 363 (primary -> Identifier .)
    ASS_OR          reduce using rule 363 (primary -> Identifier .)
    ASS_XOR         reduce using rule 363 (primary -> Identifier .)
    ASS_MOD         reduce using rule 363 (primary -> Identifier .)
    ASS_SHL         reduce using rule 363 (primary -> Identifier .)
    ASS_SHRR        reduce using rule 363 (primary -> Identifier .)
    ASS_SHR         reduce using rule 363 (primary -> Identifier .)
    COMMA           reduce using rule 363 (primary -> Identifier .)
    SEMI            reduce using rule 363 (primary -> Identifier .)
    RPAREN          reduce using rule 363 (primary -> Identifier .)
    Identifier      reduce using rule 584 (empty -> .)
    DOT             shift and go to state 205
    LESS            shift and go to state 279
    FLPAREN         shift and go to state 201
    LPAREN          shift and go to state 204

  ! FLPAREN         [ reduce using rule 363 (primary -> Identifier .) ]
  ! DOT             [ reduce using rule 363 (primary -> Identifier .) ]
  ! LESS            [ reduce using rule 363 (primary -> Identifier .) ]
  ! DOT             [ reduce using rule 584 (empty -> .) ]
  ! FLPAREN         [ reduce using rule 584 (empty -> .) ]
  ! RPAREN          [ reduce using rule 584 (empty -> .) ]

    identifierSuffix               shift and go to state 217
    typeArguments                  shift and go to state 280
    expt_32                        shift and go to state 281
    suffixExprStatements           shift and go to state 202
    arguments                      shift and go to state 203
    suffixStatements               shift and go to state 200
    empty                          shift and go to state 282
    expt_42                        shift and go to state 219

state 267

    (355) castExpression -> LPAREN primitiveType . RPAREN unaryExpression
    (150) type -> primitiveType . expt_24
    (151) type -> primitiveType . empty
    (358) primary -> primitiveType . expt_24 DOT CLASS
    (359) primary -> primitiveType . DOT CLASS
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN
    (584) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 416
    DOT             shift and go to state 246
    FLPAREN         shift and go to state 245

  ! RPAREN          [ reduce using rule 584 (empty -> .) ]

    expt_24                        shift and go to state 415
    empty                          shift and go to state 278

state 268

    (293) parExpression -> LPAREN expression . RPAREN
    (432) expr_15 -> expression .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 417

  ! RPAREN          [ reduce using rule 432 (expr_15 -> expression .) ]


state 269

    (203) annotation -> AT annotationName LPAREN elementValuePairs RPAREN .

    PUBLIC          reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    PROTECTED       reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    PRIVATE         reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    STATIC          reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    ABSTRACT        reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    FINAL           reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    NATIVE          reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    SYNCHRONIZED    reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    TRANSIENT       reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    VOLATILE        reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    STRICTFP        reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    AT              reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    VOID            reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    Identifier      reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    LESS            reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    INTERFACE       reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    CLASS           reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    ENUM            reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    BOOLEAN         reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    CHAR            reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    BYTE            reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    SHORT           reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    INT             reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    LONG            reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    FLOAT           reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    DOUBLE          reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    COMMA           reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    BRPAREN         reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    PACKAGE         reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    RPAREN          reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)
    SEMI            reduce using rule 203 (annotation -> AT annotationName LPAREN elementValuePairs RPAREN .)


state 270

    (366) primary -> SUPER superSuffix .

    OP_INC          reduce using rule 366 (primary -> SUPER superSuffix .)
    OP_DEC          reduce using rule 366 (primary -> SUPER superSuffix .)
    FLPAREN         reduce using rule 366 (primary -> SUPER superSuffix .)
    DOT             reduce using rule 366 (primary -> SUPER superSuffix .)
    MULT            reduce using rule 366 (primary -> SUPER superSuffix .)
    SLASH           reduce using rule 366 (primary -> SUPER superSuffix .)
    PERCENT         reduce using rule 366 (primary -> SUPER superSuffix .)
    PLUS            reduce using rule 366 (primary -> SUPER superSuffix .)
    DASH            reduce using rule 366 (primary -> SUPER superSuffix .)
    OP_SHR          reduce using rule 366 (primary -> SUPER superSuffix .)
    OP_SHL          reduce using rule 366 (primary -> SUPER superSuffix .)
    OP_SHRR         reduce using rule 366 (primary -> SUPER superSuffix .)
    OP_LE           reduce using rule 366 (primary -> SUPER superSuffix .)
    OP_GE           reduce using rule 366 (primary -> SUPER superSuffix .)
    LESS            reduce using rule 366 (primary -> SUPER superSuffix .)
    MORE            reduce using rule 366 (primary -> SUPER superSuffix .)
    INSTANCEOF      reduce using rule 366 (primary -> SUPER superSuffix .)
    OP_EQ           reduce using rule 366 (primary -> SUPER superSuffix .)
    OP_NE           reduce using rule 366 (primary -> SUPER superSuffix .)
    AND             reduce using rule 366 (primary -> SUPER superSuffix .)
    CARET           reduce using rule 366 (primary -> SUPER superSuffix .)
    VERTICAL        reduce using rule 366 (primary -> SUPER superSuffix .)
    OP_LAND         reduce using rule 366 (primary -> SUPER superSuffix .)
    OP_LOR          reduce using rule 366 (primary -> SUPER superSuffix .)
    QUES            reduce using rule 366 (primary -> SUPER superSuffix .)
    RPAREN          reduce using rule 366 (primary -> SUPER superSuffix .)
    COMMA           reduce using rule 366 (primary -> SUPER superSuffix .)
    BRPAREN         reduce using rule 366 (primary -> SUPER superSuffix .)
    EQUALS          reduce using rule 366 (primary -> SUPER superSuffix .)
    ASS_ADD         reduce using rule 366 (primary -> SUPER superSuffix .)
    ASS_SUB         reduce using rule 366 (primary -> SUPER superSuffix .)
    ASS_MUL         reduce using rule 366 (primary -> SUPER superSuffix .)
    ASS_DIV         reduce using rule 366 (primary -> SUPER superSuffix .)
    ASS_AND         reduce using rule 366 (primary -> SUPER superSuffix .)
    ASS_OR          reduce using rule 366 (primary -> SUPER superSuffix .)
    ASS_XOR         reduce using rule 366 (primary -> SUPER superSuffix .)
    ASS_MOD         reduce using rule 366 (primary -> SUPER superSuffix .)
    ASS_SHL         reduce using rule 366 (primary -> SUPER superSuffix .)
    ASS_SHRR        reduce using rule 366 (primary -> SUPER superSuffix .)
    ASS_SHR         reduce using rule 366 (primary -> SUPER superSuffix .)
    FRPAREN         reduce using rule 366 (primary -> SUPER superSuffix .)
    COLON           reduce using rule 366 (primary -> SUPER superSuffix .)
    SEMI            reduce using rule 366 (primary -> SUPER superSuffix .)


state 271

    (398) superSuffix -> DOT . Identifier expt_18
    (399) superSuffix -> DOT . Identifier empty

    Identifier      shift and go to state 418


state 272

    (400) superSuffix -> arguments .

    OP_INC          reduce using rule 400 (superSuffix -> arguments .)
    OP_DEC          reduce using rule 400 (superSuffix -> arguments .)
    FLPAREN         reduce using rule 400 (superSuffix -> arguments .)
    DOT             reduce using rule 400 (superSuffix -> arguments .)
    MULT            reduce using rule 400 (superSuffix -> arguments .)
    SLASH           reduce using rule 400 (superSuffix -> arguments .)
    PERCENT         reduce using rule 400 (superSuffix -> arguments .)
    PLUS            reduce using rule 400 (superSuffix -> arguments .)
    DASH            reduce using rule 400 (superSuffix -> arguments .)
    OP_SHR          reduce using rule 400 (superSuffix -> arguments .)
    OP_SHL          reduce using rule 400 (superSuffix -> arguments .)
    OP_SHRR         reduce using rule 400 (superSuffix -> arguments .)
    OP_LE           reduce using rule 400 (superSuffix -> arguments .)
    OP_GE           reduce using rule 400 (superSuffix -> arguments .)
    LESS            reduce using rule 400 (superSuffix -> arguments .)
    MORE            reduce using rule 400 (superSuffix -> arguments .)
    INSTANCEOF      reduce using rule 400 (superSuffix -> arguments .)
    OP_EQ           reduce using rule 400 (superSuffix -> arguments .)
    OP_NE           reduce using rule 400 (superSuffix -> arguments .)
    AND             reduce using rule 400 (superSuffix -> arguments .)
    CARET           reduce using rule 400 (superSuffix -> arguments .)
    VERTICAL        reduce using rule 400 (superSuffix -> arguments .)
    OP_LAND         reduce using rule 400 (superSuffix -> arguments .)
    OP_LOR          reduce using rule 400 (superSuffix -> arguments .)
    QUES            reduce using rule 400 (superSuffix -> arguments .)
    RPAREN          reduce using rule 400 (superSuffix -> arguments .)
    COMMA           reduce using rule 400 (superSuffix -> arguments .)
    BRPAREN         reduce using rule 400 (superSuffix -> arguments .)
    EQUALS          reduce using rule 400 (superSuffix -> arguments .)
    ASS_ADD         reduce using rule 400 (superSuffix -> arguments .)
    ASS_SUB         reduce using rule 400 (superSuffix -> arguments .)
    ASS_MUL         reduce using rule 400 (superSuffix -> arguments .)
    ASS_DIV         reduce using rule 400 (superSuffix -> arguments .)
    ASS_AND         reduce using rule 400 (superSuffix -> arguments .)
    ASS_OR          reduce using rule 400 (superSuffix -> arguments .)
    ASS_XOR         reduce using rule 400 (superSuffix -> arguments .)
    ASS_MOD         reduce using rule 400 (superSuffix -> arguments .)
    ASS_SHL         reduce using rule 400 (superSuffix -> arguments .)
    ASS_SHRR        reduce using rule 400 (superSuffix -> arguments .)
    ASS_SHR         reduce using rule 400 (superSuffix -> arguments .)
    FRPAREN         reduce using rule 400 (superSuffix -> arguments .)
    COLON           reduce using rule 400 (superSuffix -> arguments .)
    SEMI            reduce using rule 400 (superSuffix -> arguments .)


state 273

    (204) annotation -> AT annotationName LPAREN elementValue RPAREN .

    PUBLIC          reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    PROTECTED       reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    PRIVATE         reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    STATIC          reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    ABSTRACT        reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    FINAL           reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    NATIVE          reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    SYNCHRONIZED    reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    TRANSIENT       reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    VOLATILE        reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    STRICTFP        reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    AT              reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    VOID            reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    Identifier      reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    LESS            reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    INTERFACE       reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    CLASS           reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    ENUM            reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    BOOLEAN         reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    CHAR            reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    BYTE            reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    SHORT           reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    INT             reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    LONG            reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    FLOAT           reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    DOUBLE          reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    COMMA           reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    BRPAREN         reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    PACKAGE         reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    RPAREN          reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)
    SEMI            reduce using rule 204 (annotation -> AT annotationName LPAREN elementValue RPAREN .)


state 274

    (11) importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .

    IMPORT          reduce using rule 11 (importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .)
    SEMI            reduce using rule 11 (importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .)
    PUBLIC          reduce using rule 11 (importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .)
    PROTECTED       reduce using rule 11 (importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .)
    PRIVATE         reduce using rule 11 (importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .)
    ABSTRACT        reduce using rule 11 (importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .)
    STATIC          reduce using rule 11 (importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .)
    FINAL           reduce using rule 11 (importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .)
    STRICTFP        reduce using rule 11 (importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .)
    CLASS           reduce using rule 11 (importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .)
    ENUM            reduce using rule 11 (importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .)
    INTERFACE       reduce using rule 11 (importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .)
    AT              reduce using rule 11 (importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .)
    $end            reduce using rule 11 (importDeclaration -> IMPORT expt_3 qualifiedName expt_4 SEMI .)


state 275

    (152) type -> classOrInterfaceType expt_24 .
    (485) expt_24 -> expt_24 . FLPAREN FRPAREN

    Identifier      reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    COMMA           reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    BLPAREN         reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    MORE            reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    OP_ARRAY        reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    AND             reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    OP_EQ           reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    OP_NE           reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    CARET           reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    VERTICAL        reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    OP_LAND         reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    OP_LOR          reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    QUES            reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    RPAREN          reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    BRPAREN         reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    EQUALS          reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    ASS_ADD         reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    ASS_SUB         reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    ASS_MUL         reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    ASS_DIV         reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    ASS_AND         reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    ASS_OR          reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    ASS_XOR         reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    ASS_MOD         reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    ASS_SHL         reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    ASS_SHRR        reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    ASS_SHR         reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    FRPAREN         reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    COLON           reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    SEMI            reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    IMPLEMENTS      reduce using rule 152 (type -> classOrInterfaceType expt_24 .)
    FLPAREN         shift and go to state 391


state 276

    (153) type -> classOrInterfaceType empty .

    Identifier      reduce using rule 153 (type -> classOrInterfaceType empty .)
    COMMA           reduce using rule 153 (type -> classOrInterfaceType empty .)
    BLPAREN         reduce using rule 153 (type -> classOrInterfaceType empty .)
    MORE            reduce using rule 153 (type -> classOrInterfaceType empty .)
    OP_ARRAY        reduce using rule 153 (type -> classOrInterfaceType empty .)
    AND             reduce using rule 153 (type -> classOrInterfaceType empty .)
    OP_EQ           reduce using rule 153 (type -> classOrInterfaceType empty .)
    OP_NE           reduce using rule 153 (type -> classOrInterfaceType empty .)
    CARET           reduce using rule 153 (type -> classOrInterfaceType empty .)
    VERTICAL        reduce using rule 153 (type -> classOrInterfaceType empty .)
    OP_LAND         reduce using rule 153 (type -> classOrInterfaceType empty .)
    OP_LOR          reduce using rule 153 (type -> classOrInterfaceType empty .)
    QUES            reduce using rule 153 (type -> classOrInterfaceType empty .)
    RPAREN          reduce using rule 153 (type -> classOrInterfaceType empty .)
    BRPAREN         reduce using rule 153 (type -> classOrInterfaceType empty .)
    EQUALS          reduce using rule 153 (type -> classOrInterfaceType empty .)
    ASS_ADD         reduce using rule 153 (type -> classOrInterfaceType empty .)
    ASS_SUB         reduce using rule 153 (type -> classOrInterfaceType empty .)
    ASS_MUL         reduce using rule 153 (type -> classOrInterfaceType empty .)
    ASS_DIV         reduce using rule 153 (type -> classOrInterfaceType empty .)
    ASS_AND         reduce using rule 153 (type -> classOrInterfaceType empty .)
    ASS_OR          reduce using rule 153 (type -> classOrInterfaceType empty .)
    ASS_XOR         reduce using rule 153 (type -> classOrInterfaceType empty .)
    ASS_MOD         reduce using rule 153 (type -> classOrInterfaceType empty .)
    ASS_SHL         reduce using rule 153 (type -> classOrInterfaceType empty .)
    ASS_SHRR        reduce using rule 153 (type -> classOrInterfaceType empty .)
    ASS_SHR         reduce using rule 153 (type -> classOrInterfaceType empty .)
    FRPAREN         reduce using rule 153 (type -> classOrInterfaceType empty .)
    COLON           reduce using rule 153 (type -> classOrInterfaceType empty .)
    SEMI            reduce using rule 153 (type -> classOrInterfaceType empty .)
    IMPLEMENTS      reduce using rule 153 (type -> classOrInterfaceType empty .)


state 277

    (150) type -> primitiveType expt_24 .
    (485) expt_24 -> expt_24 . FLPAREN FRPAREN

    Identifier      reduce using rule 150 (type -> primitiveType expt_24 .)
    COMMA           reduce using rule 150 (type -> primitiveType expt_24 .)
    BLPAREN         reduce using rule 150 (type -> primitiveType expt_24 .)
    MORE            reduce using rule 150 (type -> primitiveType expt_24 .)
    OP_ARRAY        reduce using rule 150 (type -> primitiveType expt_24 .)
    AND             reduce using rule 150 (type -> primitiveType expt_24 .)
    OP_EQ           reduce using rule 150 (type -> primitiveType expt_24 .)
    OP_NE           reduce using rule 150 (type -> primitiveType expt_24 .)
    CARET           reduce using rule 150 (type -> primitiveType expt_24 .)
    VERTICAL        reduce using rule 150 (type -> primitiveType expt_24 .)
    OP_LAND         reduce using rule 150 (type -> primitiveType expt_24 .)
    OP_LOR          reduce using rule 150 (type -> primitiveType expt_24 .)
    QUES            reduce using rule 150 (type -> primitiveType expt_24 .)
    RPAREN          reduce using rule 150 (type -> primitiveType expt_24 .)
    BRPAREN         reduce using rule 150 (type -> primitiveType expt_24 .)
    EQUALS          reduce using rule 150 (type -> primitiveType expt_24 .)
    ASS_ADD         reduce using rule 150 (type -> primitiveType expt_24 .)
    ASS_SUB         reduce using rule 150 (type -> primitiveType expt_24 .)
    ASS_MUL         reduce using rule 150 (type -> primitiveType expt_24 .)
    ASS_DIV         reduce using rule 150 (type -> primitiveType expt_24 .)
    ASS_AND         reduce using rule 150 (type -> primitiveType expt_24 .)
    ASS_OR          reduce using rule 150 (type -> primitiveType expt_24 .)
    ASS_XOR         reduce using rule 150 (type -> primitiveType expt_24 .)
    ASS_MOD         reduce using rule 150 (type -> primitiveType expt_24 .)
    ASS_SHL         reduce using rule 150 (type -> primitiveType expt_24 .)
    ASS_SHRR        reduce using rule 150 (type -> primitiveType expt_24 .)
    ASS_SHR         reduce using rule 150 (type -> primitiveType expt_24 .)
    FRPAREN         reduce using rule 150 (type -> primitiveType expt_24 .)
    COLON           reduce using rule 150 (type -> primitiveType expt_24 .)
    SEMI            reduce using rule 150 (type -> primitiveType expt_24 .)
    IMPLEMENTS      reduce using rule 150 (type -> primitiveType expt_24 .)
    FLPAREN         shift and go to state 391


state 278

    (151) type -> primitiveType empty .

    Identifier      reduce using rule 151 (type -> primitiveType empty .)
    COMMA           reduce using rule 151 (type -> primitiveType empty .)
    BLPAREN         reduce using rule 151 (type -> primitiveType empty .)
    MORE            reduce using rule 151 (type -> primitiveType empty .)
    OP_ARRAY        reduce using rule 151 (type -> primitiveType empty .)
    AND             reduce using rule 151 (type -> primitiveType empty .)
    OP_EQ           reduce using rule 151 (type -> primitiveType empty .)
    OP_NE           reduce using rule 151 (type -> primitiveType empty .)
    CARET           reduce using rule 151 (type -> primitiveType empty .)
    VERTICAL        reduce using rule 151 (type -> primitiveType empty .)
    OP_LAND         reduce using rule 151 (type -> primitiveType empty .)
    OP_LOR          reduce using rule 151 (type -> primitiveType empty .)
    QUES            reduce using rule 151 (type -> primitiveType empty .)
    RPAREN          reduce using rule 151 (type -> primitiveType empty .)
    BRPAREN         reduce using rule 151 (type -> primitiveType empty .)
    EQUALS          reduce using rule 151 (type -> primitiveType empty .)
    ASS_ADD         reduce using rule 151 (type -> primitiveType empty .)
    ASS_SUB         reduce using rule 151 (type -> primitiveType empty .)
    ASS_MUL         reduce using rule 151 (type -> primitiveType empty .)
    ASS_DIV         reduce using rule 151 (type -> primitiveType empty .)
    ASS_AND         reduce using rule 151 (type -> primitiveType empty .)
    ASS_OR          reduce using rule 151 (type -> primitiveType empty .)
    ASS_XOR         reduce using rule 151 (type -> primitiveType empty .)
    ASS_MOD         reduce using rule 151 (type -> primitiveType empty .)
    ASS_SHL         reduce using rule 151 (type -> primitiveType empty .)
    ASS_SHRR        reduce using rule 151 (type -> primitiveType empty .)
    ASS_SHR         reduce using rule 151 (type -> primitiveType empty .)
    FRPAREN         reduce using rule 151 (type -> primitiveType empty .)
    COLON           reduce using rule 151 (type -> primitiveType empty .)
    SEMI            reduce using rule 151 (type -> primitiveType empty .)
    IMPLEMENTS      reduce using rule 151 (type -> primitiveType empty .)


state 279

    (168) typeArguments -> LESS . typeArgument expt_34 MORE
    (169) typeArguments -> LESS . typeArgument MORE
    (170) typeArgument -> . QUES expt_35
    (171) typeArgument -> . QUES empty
    (172) typeArgument -> . type
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    QUES            shift and go to state 421
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    typeArgument                   shift and go to state 420
    type                           shift and go to state 419

state 280

    (500) expt_32 -> typeArguments .

    DOT             reduce using rule 500 (expt_32 -> typeArguments .)
    FLPAREN         reduce using rule 500 (expt_32 -> typeArguments .)
    RPAREN          reduce using rule 500 (expt_32 -> typeArguments .)
    Identifier      reduce using rule 500 (expt_32 -> typeArguments .)
    COMMA           reduce using rule 500 (expt_32 -> typeArguments .)
    BLPAREN         reduce using rule 500 (expt_32 -> typeArguments .)
    LPAREN          reduce using rule 500 (expt_32 -> typeArguments .)
    IMPLEMENTS      reduce using rule 500 (expt_32 -> typeArguments .)
    OP_EQ           reduce using rule 500 (expt_32 -> typeArguments .)
    OP_NE           reduce using rule 500 (expt_32 -> typeArguments .)
    AND             reduce using rule 500 (expt_32 -> typeArguments .)
    CARET           reduce using rule 500 (expt_32 -> typeArguments .)
    VERTICAL        reduce using rule 500 (expt_32 -> typeArguments .)
    OP_LAND         reduce using rule 500 (expt_32 -> typeArguments .)
    OP_LOR          reduce using rule 500 (expt_32 -> typeArguments .)
    QUES            reduce using rule 500 (expt_32 -> typeArguments .)
    BRPAREN         reduce using rule 500 (expt_32 -> typeArguments .)
    EQUALS          reduce using rule 500 (expt_32 -> typeArguments .)
    ASS_ADD         reduce using rule 500 (expt_32 -> typeArguments .)
    ASS_SUB         reduce using rule 500 (expt_32 -> typeArguments .)
    ASS_MUL         reduce using rule 500 (expt_32 -> typeArguments .)
    ASS_DIV         reduce using rule 500 (expt_32 -> typeArguments .)
    ASS_AND         reduce using rule 500 (expt_32 -> typeArguments .)
    ASS_OR          reduce using rule 500 (expt_32 -> typeArguments .)
    ASS_XOR         reduce using rule 500 (expt_32 -> typeArguments .)
    ASS_MOD         reduce using rule 500 (expt_32 -> typeArguments .)
    ASS_SHL         reduce using rule 500 (expt_32 -> typeArguments .)
    ASS_SHRR        reduce using rule 500 (expt_32 -> typeArguments .)
    ASS_SHR         reduce using rule 500 (expt_32 -> typeArguments .)
    FRPAREN         reduce using rule 500 (expt_32 -> typeArguments .)
    COLON           reduce using rule 500 (expt_32 -> typeArguments .)
    SEMI            reduce using rule 500 (expt_32 -> typeArguments .)
    MORE            reduce using rule 500 (expt_32 -> typeArguments .)
    OP_ARRAY        reduce using rule 500 (expt_32 -> typeArguments .)


state 281

    (154) classOrInterfaceType -> Identifier expt_32 . expt_33
    (155) classOrInterfaceType -> Identifier expt_32 . empty
    (502) expt_33 -> . DOT Identifier expt_32
    (503) expt_33 -> . expt_33 DOT Identifier expt_32
    (584) empty -> .

    DOT             shift and go to state 422
    FLPAREN         reduce using rule 584 (empty -> .)
    COMMA           reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)
    LPAREN          reduce using rule 584 (empty -> .)
    RPAREN          reduce using rule 584 (empty -> .)
    IMPLEMENTS      reduce using rule 584 (empty -> .)
    OP_EQ           reduce using rule 584 (empty -> .)
    OP_NE           reduce using rule 584 (empty -> .)
    AND             reduce using rule 584 (empty -> .)
    CARET           reduce using rule 584 (empty -> .)
    VERTICAL        reduce using rule 584 (empty -> .)
    OP_LAND         reduce using rule 584 (empty -> .)
    OP_LOR          reduce using rule 584 (empty -> .)
    QUES            reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)
    EQUALS          reduce using rule 584 (empty -> .)
    ASS_ADD         reduce using rule 584 (empty -> .)
    ASS_SUB         reduce using rule 584 (empty -> .)
    ASS_MUL         reduce using rule 584 (empty -> .)
    ASS_DIV         reduce using rule 584 (empty -> .)
    ASS_AND         reduce using rule 584 (empty -> .)
    ASS_OR          reduce using rule 584 (empty -> .)
    ASS_XOR         reduce using rule 584 (empty -> .)
    ASS_MOD         reduce using rule 584 (empty -> .)
    ASS_SHL         reduce using rule 584 (empty -> .)
    ASS_SHRR        reduce using rule 584 (empty -> .)
    ASS_SHR         reduce using rule 584 (empty -> .)
    FRPAREN         reduce using rule 584 (empty -> .)
    COLON           reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)
    MORE            reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    OP_ARRAY        reduce using rule 584 (empty -> .)

    empty                          shift and go to state 423
    expt_33                        shift and go to state 424

state 282

    (156) classOrInterfaceType -> Identifier empty . expt_33
    (157) classOrInterfaceType -> Identifier empty . empty
    (501) expt_32 -> empty .
    (502) expt_33 -> . DOT Identifier expt_32
    (503) expt_33 -> . expt_33 DOT Identifier expt_32
    (584) empty -> .

  ! shift/reduce conflict for DOT resolved as shift
  ! reduce/reduce conflict for FLPAREN resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for BLPAREN resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for RPAREN resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for IMPLEMENTS resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for OP_EQ resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for OP_NE resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for CARET resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for VERTICAL resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for OP_LAND resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for OP_LOR resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for QUES resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for BRPAREN resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for EQUALS resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for ASS_ADD resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for ASS_SUB resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for ASS_MUL resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for ASS_DIV resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for ASS_AND resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for ASS_OR resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for ASS_XOR resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for ASS_MOD resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for ASS_SHL resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for ASS_SHRR resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for ASS_SHR resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for FRPAREN resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for COLON resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for SEMI resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for MORE resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for Identifier resolved using rule 501 (expt_32 -> empty .)
  ! reduce/reduce conflict for OP_ARRAY resolved using rule 501 (expt_32 -> empty .)
    FLPAREN         reduce using rule 501 (expt_32 -> empty .)
    RPAREN          reduce using rule 501 (expt_32 -> empty .)
    Identifier      reduce using rule 501 (expt_32 -> empty .)
    COMMA           reduce using rule 501 (expt_32 -> empty .)
    BLPAREN         reduce using rule 501 (expt_32 -> empty .)
    LPAREN          reduce using rule 501 (expt_32 -> empty .)
    IMPLEMENTS      reduce using rule 501 (expt_32 -> empty .)
    OP_EQ           reduce using rule 501 (expt_32 -> empty .)
    OP_NE           reduce using rule 501 (expt_32 -> empty .)
    AND             reduce using rule 501 (expt_32 -> empty .)
    CARET           reduce using rule 501 (expt_32 -> empty .)
    VERTICAL        reduce using rule 501 (expt_32 -> empty .)
    OP_LAND         reduce using rule 501 (expt_32 -> empty .)
    OP_LOR          reduce using rule 501 (expt_32 -> empty .)
    QUES            reduce using rule 501 (expt_32 -> empty .)
    BRPAREN         reduce using rule 501 (expt_32 -> empty .)
    EQUALS          reduce using rule 501 (expt_32 -> empty .)
    ASS_ADD         reduce using rule 501 (expt_32 -> empty .)
    ASS_SUB         reduce using rule 501 (expt_32 -> empty .)
    ASS_MUL         reduce using rule 501 (expt_32 -> empty .)
    ASS_DIV         reduce using rule 501 (expt_32 -> empty .)
    ASS_AND         reduce using rule 501 (expt_32 -> empty .)
    ASS_OR          reduce using rule 501 (expt_32 -> empty .)
    ASS_XOR         reduce using rule 501 (expt_32 -> empty .)
    ASS_MOD         reduce using rule 501 (expt_32 -> empty .)
    ASS_SHL         reduce using rule 501 (expt_32 -> empty .)
    ASS_SHRR        reduce using rule 501 (expt_32 -> empty .)
    ASS_SHR         reduce using rule 501 (expt_32 -> empty .)
    FRPAREN         reduce using rule 501 (expt_32 -> empty .)
    COLON           reduce using rule 501 (expt_32 -> empty .)
    SEMI            reduce using rule 501 (expt_32 -> empty .)
    MORE            reduce using rule 501 (expt_32 -> empty .)
    OP_ARRAY        reduce using rule 501 (expt_32 -> empty .)
    DOT             shift and go to state 422

  ! DOT             [ reduce using rule 501 (expt_32 -> empty .) ]
  ! FLPAREN         [ reduce using rule 584 (empty -> .) ]
  ! COMMA           [ reduce using rule 584 (empty -> .) ]
  ! BLPAREN         [ reduce using rule 584 (empty -> .) ]
  ! LPAREN          [ reduce using rule 584 (empty -> .) ]
  ! RPAREN          [ reduce using rule 584 (empty -> .) ]
  ! IMPLEMENTS      [ reduce using rule 584 (empty -> .) ]
  ! OP_EQ           [ reduce using rule 584 (empty -> .) ]
  ! OP_NE           [ reduce using rule 584 (empty -> .) ]
  ! AND             [ reduce using rule 584 (empty -> .) ]
  ! CARET           [ reduce using rule 584 (empty -> .) ]
  ! VERTICAL        [ reduce using rule 584 (empty -> .) ]
  ! OP_LAND         [ reduce using rule 584 (empty -> .) ]
  ! OP_LOR          [ reduce using rule 584 (empty -> .) ]
  ! QUES            [ reduce using rule 584 (empty -> .) ]
  ! BRPAREN         [ reduce using rule 584 (empty -> .) ]
  ! EQUALS          [ reduce using rule 584 (empty -> .) ]
  ! ASS_ADD         [ reduce using rule 584 (empty -> .) ]
  ! ASS_SUB         [ reduce using rule 584 (empty -> .) ]
  ! ASS_MUL         [ reduce using rule 584 (empty -> .) ]
  ! ASS_DIV         [ reduce using rule 584 (empty -> .) ]
  ! ASS_AND         [ reduce using rule 584 (empty -> .) ]
  ! ASS_OR          [ reduce using rule 584 (empty -> .) ]
  ! ASS_XOR         [ reduce using rule 584 (empty -> .) ]
  ! ASS_MOD         [ reduce using rule 584 (empty -> .) ]
  ! ASS_SHL         [ reduce using rule 584 (empty -> .) ]
  ! ASS_SHRR        [ reduce using rule 584 (empty -> .) ]
  ! ASS_SHR         [ reduce using rule 584 (empty -> .) ]
  ! FRPAREN         [ reduce using rule 584 (empty -> .) ]
  ! COLON           [ reduce using rule 584 (empty -> .) ]
  ! SEMI            [ reduce using rule 584 (empty -> .) ]
  ! MORE            [ reduce using rule 584 (empty -> .) ]
  ! Identifier      [ reduce using rule 584 (empty -> .) ]
  ! OP_ARRAY        [ reduce using rule 584 (empty -> .) ]

    empty                          shift and go to state 425
    expt_33                        shift and go to state 426

state 283

    (480) expt_22 -> COMMA . type
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    type                           shift and go to state 427

state 284

    (75) typeList -> type expt_22 .
    (481) expt_22 -> expt_22 . COMMA type

    MORE            reduce using rule 75 (typeList -> type expt_22 .)
    BLPAREN         reduce using rule 75 (typeList -> type expt_22 .)
    COMMA           shift and go to state 428


state 285

    (76) typeList -> type empty .

    MORE            reduce using rule 76 (typeList -> type empty .)
    BLPAREN         reduce using rule 76 (typeList -> type empty .)


state 286

    (57) enumConstants -> enumConstant . expt_16
    (58) enumConstants -> enumConstant . empty
    (470) expt_16 -> . COMMA enumConstant
    (471) expt_16 -> . expt_16 COMMA enumConstant
    (584) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 430
    SEMI            reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)

  ! COMMA           [ reduce using rule 584 (empty -> .) ]

    expt_16                        shift and go to state 429
    empty                          shift and go to state 431

state 287

    (472) expt_17 -> annotations .
    (202) annotations -> annotations . annotation
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

    Identifier      reduce using rule 472 (expt_17 -> annotations .)
    AT              shift and go to state 8

    annotation                     shift and go to state 432

state 288

    (59) enumConstant -> expt_17 . Identifier expt_18 classBody
    (60) enumConstant -> expt_17 . Identifier expt_18
    (61) enumConstant -> expt_17 . Identifier classBody
    (62) enumConstant -> expt_17 . Identifier

    Identifier      shift and go to state 433


state 289

    (49) enumBody -> BLPAREN expt_13 . expt_14 expt_15 BRPAREN
    (50) enumBody -> BLPAREN expt_13 . expt_14 empty BRPAREN
    (51) enumBody -> BLPAREN expt_13 . empty expt_15 BRPAREN
    (52) enumBody -> BLPAREN expt_13 . empty empty BRPAREN
    (466) expt_14 -> . COMMA
    (467) expt_14 -> . empty
    (584) empty -> .

    COMMA           shift and go to state 435
    SEMI            reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)

    expt_14                        shift and go to state 434
    empty                          shift and go to state 436

state 290

    (464) expt_13 -> enumConstants .

    COMMA           reduce using rule 464 (expt_13 -> enumConstants .)
    SEMI            reduce using rule 464 (expt_13 -> enumConstants .)
    BRPAREN         reduce using rule 464 (expt_13 -> enumConstants .)


state 291

    (63) enumConstant -> Identifier . expt_18 classBody
    (64) enumConstant -> Identifier . expt_18
    (65) enumConstant -> Identifier . classBody
    (66) enumConstant -> Identifier .
    (474) expt_18 -> . arguments
    (475) expt_18 -> . empty
    (77) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (78) classBody -> . BLPAREN BRPAREN
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN
    (584) empty -> .

  ! shift/reduce conflict for BLPAREN resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 66 (enumConstant -> Identifier .)
  ! reduce/reduce conflict for SEMI resolved using rule 66 (enumConstant -> Identifier .)
  ! reduce/reduce conflict for BRPAREN resolved using rule 66 (enumConstant -> Identifier .)
    COMMA           reduce using rule 66 (enumConstant -> Identifier .)
    SEMI            reduce using rule 66 (enumConstant -> Identifier .)
    BRPAREN         reduce using rule 66 (enumConstant -> Identifier .)
    BLPAREN         shift and go to state 439
    LPAREN          shift and go to state 204

  ! BLPAREN         [ reduce using rule 584 (empty -> .) ]
  ! COMMA           [ reduce using rule 584 (empty -> .) ]
  ! SEMI            [ reduce using rule 584 (empty -> .) ]
  ! BRPAREN         [ reduce using rule 584 (empty -> .) ]

    classBody                      shift and go to state 437
    expt_18                        shift and go to state 438
    empty                          shift and go to state 440
    arguments                      shift and go to state 441

state 292

    (53) enumBody -> BLPAREN empty . expt_14 expt_15 BRPAREN
    (54) enumBody -> BLPAREN empty . expt_14 empty BRPAREN
    (55) enumBody -> BLPAREN empty . empty expt_15 BRPAREN
    (56) enumBody -> BLPAREN empty . empty empty BRPAREN
    (465) expt_13 -> empty .
    (473) expt_17 -> empty .
    (466) expt_14 -> . COMMA
    (467) expt_14 -> . empty
    (584) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for SEMI resolved using rule 465 (expt_13 -> empty .)
  ! reduce/reduce conflict for BRPAREN resolved using rule 465 (expt_13 -> empty .)
    SEMI            reduce using rule 465 (expt_13 -> empty .)
    BRPAREN         reduce using rule 465 (expt_13 -> empty .)
    Identifier      reduce using rule 473 (expt_17 -> empty .)
    COMMA           shift and go to state 435

  ! COMMA           [ reduce using rule 465 (expt_13 -> empty .) ]
  ! SEMI            [ reduce using rule 584 (empty -> .) ]
  ! BRPAREN         [ reduce using rule 584 (empty -> .) ]

    expt_14                        shift and go to state 442
    empty                          shift and go to state 443

state 293

    (145) modifier -> SYNCHRONIZED .

    PUBLIC          reduce using rule 145 (modifier -> SYNCHRONIZED .)
    PROTECTED       reduce using rule 145 (modifier -> SYNCHRONIZED .)
    PRIVATE         reduce using rule 145 (modifier -> SYNCHRONIZED .)
    STATIC          reduce using rule 145 (modifier -> SYNCHRONIZED .)
    ABSTRACT        reduce using rule 145 (modifier -> SYNCHRONIZED .)
    FINAL           reduce using rule 145 (modifier -> SYNCHRONIZED .)
    NATIVE          reduce using rule 145 (modifier -> SYNCHRONIZED .)
    SYNCHRONIZED    reduce using rule 145 (modifier -> SYNCHRONIZED .)
    TRANSIENT       reduce using rule 145 (modifier -> SYNCHRONIZED .)
    VOLATILE        reduce using rule 145 (modifier -> SYNCHRONIZED .)
    STRICTFP        reduce using rule 145 (modifier -> SYNCHRONIZED .)
    AT              reduce using rule 145 (modifier -> SYNCHRONIZED .)
    ENUM            reduce using rule 145 (modifier -> SYNCHRONIZED .)
    INTERFACE       reduce using rule 145 (modifier -> SYNCHRONIZED .)
    CLASS           reduce using rule 145 (modifier -> SYNCHRONIZED .)
    BOOLEAN         reduce using rule 145 (modifier -> SYNCHRONIZED .)
    CHAR            reduce using rule 145 (modifier -> SYNCHRONIZED .)
    BYTE            reduce using rule 145 (modifier -> SYNCHRONIZED .)
    SHORT           reduce using rule 145 (modifier -> SYNCHRONIZED .)
    INT             reduce using rule 145 (modifier -> SYNCHRONIZED .)
    LONG            reduce using rule 145 (modifier -> SYNCHRONIZED .)
    FLOAT           reduce using rule 145 (modifier -> SYNCHRONIZED .)
    DOUBLE          reduce using rule 145 (modifier -> SYNCHRONIZED .)
    Identifier      reduce using rule 145 (modifier -> SYNCHRONIZED .)
    VOID            reduce using rule 145 (modifier -> SYNCHRONIZED .)
    LESS            reduce using rule 145 (modifier -> SYNCHRONIZED .)


state 294

    (142) modifier -> ABSTRACT .

    PUBLIC          reduce using rule 142 (modifier -> ABSTRACT .)
    PROTECTED       reduce using rule 142 (modifier -> ABSTRACT .)
    PRIVATE         reduce using rule 142 (modifier -> ABSTRACT .)
    STATIC          reduce using rule 142 (modifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 142 (modifier -> ABSTRACT .)
    FINAL           reduce using rule 142 (modifier -> ABSTRACT .)
    NATIVE          reduce using rule 142 (modifier -> ABSTRACT .)
    SYNCHRONIZED    reduce using rule 142 (modifier -> ABSTRACT .)
    TRANSIENT       reduce using rule 142 (modifier -> ABSTRACT .)
    VOLATILE        reduce using rule 142 (modifier -> ABSTRACT .)
    STRICTFP        reduce using rule 142 (modifier -> ABSTRACT .)
    AT              reduce using rule 142 (modifier -> ABSTRACT .)
    ENUM            reduce using rule 142 (modifier -> ABSTRACT .)
    INTERFACE       reduce using rule 142 (modifier -> ABSTRACT .)
    CLASS           reduce using rule 142 (modifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 142 (modifier -> ABSTRACT .)
    CHAR            reduce using rule 142 (modifier -> ABSTRACT .)
    BYTE            reduce using rule 142 (modifier -> ABSTRACT .)
    SHORT           reduce using rule 142 (modifier -> ABSTRACT .)
    INT             reduce using rule 142 (modifier -> ABSTRACT .)
    LONG            reduce using rule 142 (modifier -> ABSTRACT .)
    FLOAT           reduce using rule 142 (modifier -> ABSTRACT .)
    DOUBLE          reduce using rule 142 (modifier -> ABSTRACT .)
    Identifier      reduce using rule 142 (modifier -> ABSTRACT .)
    VOID            reduce using rule 142 (modifier -> ABSTRACT .)
    LESS            reduce using rule 142 (modifier -> ABSTRACT .)


state 295

    (139) modifier -> PROTECTED .

    PUBLIC          reduce using rule 139 (modifier -> PROTECTED .)
    PROTECTED       reduce using rule 139 (modifier -> PROTECTED .)
    PRIVATE         reduce using rule 139 (modifier -> PROTECTED .)
    STATIC          reduce using rule 139 (modifier -> PROTECTED .)
    ABSTRACT        reduce using rule 139 (modifier -> PROTECTED .)
    FINAL           reduce using rule 139 (modifier -> PROTECTED .)
    NATIVE          reduce using rule 139 (modifier -> PROTECTED .)
    SYNCHRONIZED    reduce using rule 139 (modifier -> PROTECTED .)
    TRANSIENT       reduce using rule 139 (modifier -> PROTECTED .)
    VOLATILE        reduce using rule 139 (modifier -> PROTECTED .)
    STRICTFP        reduce using rule 139 (modifier -> PROTECTED .)
    AT              reduce using rule 139 (modifier -> PROTECTED .)
    ENUM            reduce using rule 139 (modifier -> PROTECTED .)
    INTERFACE       reduce using rule 139 (modifier -> PROTECTED .)
    CLASS           reduce using rule 139 (modifier -> PROTECTED .)
    BOOLEAN         reduce using rule 139 (modifier -> PROTECTED .)
    CHAR            reduce using rule 139 (modifier -> PROTECTED .)
    BYTE            reduce using rule 139 (modifier -> PROTECTED .)
    SHORT           reduce using rule 139 (modifier -> PROTECTED .)
    INT             reduce using rule 139 (modifier -> PROTECTED .)
    LONG            reduce using rule 139 (modifier -> PROTECTED .)
    FLOAT           reduce using rule 139 (modifier -> PROTECTED .)
    DOUBLE          reduce using rule 139 (modifier -> PROTECTED .)
    Identifier      reduce using rule 139 (modifier -> PROTECTED .)
    VOID            reduce using rule 139 (modifier -> PROTECTED .)
    LESS            reduce using rule 139 (modifier -> PROTECTED .)


state 296

    (141) modifier -> STATIC .

    PUBLIC          reduce using rule 141 (modifier -> STATIC .)
    PROTECTED       reduce using rule 141 (modifier -> STATIC .)
    PRIVATE         reduce using rule 141 (modifier -> STATIC .)
    STATIC          reduce using rule 141 (modifier -> STATIC .)
    ABSTRACT        reduce using rule 141 (modifier -> STATIC .)
    FINAL           reduce using rule 141 (modifier -> STATIC .)
    NATIVE          reduce using rule 141 (modifier -> STATIC .)
    SYNCHRONIZED    reduce using rule 141 (modifier -> STATIC .)
    TRANSIENT       reduce using rule 141 (modifier -> STATIC .)
    VOLATILE        reduce using rule 141 (modifier -> STATIC .)
    STRICTFP        reduce using rule 141 (modifier -> STATIC .)
    AT              reduce using rule 141 (modifier -> STATIC .)
    ENUM            reduce using rule 141 (modifier -> STATIC .)
    INTERFACE       reduce using rule 141 (modifier -> STATIC .)
    CLASS           reduce using rule 141 (modifier -> STATIC .)
    BOOLEAN         reduce using rule 141 (modifier -> STATIC .)
    CHAR            reduce using rule 141 (modifier -> STATIC .)
    BYTE            reduce using rule 141 (modifier -> STATIC .)
    SHORT           reduce using rule 141 (modifier -> STATIC .)
    INT             reduce using rule 141 (modifier -> STATIC .)
    LONG            reduce using rule 141 (modifier -> STATIC .)
    FLOAT           reduce using rule 141 (modifier -> STATIC .)
    DOUBLE          reduce using rule 141 (modifier -> STATIC .)
    Identifier      reduce using rule 141 (modifier -> STATIC .)
    VOID            reduce using rule 141 (modifier -> STATIC .)
    LESS            reduce using rule 141 (modifier -> STATIC .)


state 297

    (143) modifier -> FINAL .

    PUBLIC          reduce using rule 143 (modifier -> FINAL .)
    PROTECTED       reduce using rule 143 (modifier -> FINAL .)
    PRIVATE         reduce using rule 143 (modifier -> FINAL .)
    STATIC          reduce using rule 143 (modifier -> FINAL .)
    ABSTRACT        reduce using rule 143 (modifier -> FINAL .)
    FINAL           reduce using rule 143 (modifier -> FINAL .)
    NATIVE          reduce using rule 143 (modifier -> FINAL .)
    SYNCHRONIZED    reduce using rule 143 (modifier -> FINAL .)
    TRANSIENT       reduce using rule 143 (modifier -> FINAL .)
    VOLATILE        reduce using rule 143 (modifier -> FINAL .)
    STRICTFP        reduce using rule 143 (modifier -> FINAL .)
    AT              reduce using rule 143 (modifier -> FINAL .)
    ENUM            reduce using rule 143 (modifier -> FINAL .)
    INTERFACE       reduce using rule 143 (modifier -> FINAL .)
    CLASS           reduce using rule 143 (modifier -> FINAL .)
    BOOLEAN         reduce using rule 143 (modifier -> FINAL .)
    CHAR            reduce using rule 143 (modifier -> FINAL .)
    BYTE            reduce using rule 143 (modifier -> FINAL .)
    SHORT           reduce using rule 143 (modifier -> FINAL .)
    INT             reduce using rule 143 (modifier -> FINAL .)
    LONG            reduce using rule 143 (modifier -> FINAL .)
    FLOAT           reduce using rule 143 (modifier -> FINAL .)
    DOUBLE          reduce using rule 143 (modifier -> FINAL .)
    Identifier      reduce using rule 143 (modifier -> FINAL .)
    VOID            reduce using rule 143 (modifier -> FINAL .)
    LESS            reduce using rule 143 (modifier -> FINAL .)


state 298

    (144) modifier -> NATIVE .

    PUBLIC          reduce using rule 144 (modifier -> NATIVE .)
    PROTECTED       reduce using rule 144 (modifier -> NATIVE .)
    PRIVATE         reduce using rule 144 (modifier -> NATIVE .)
    STATIC          reduce using rule 144 (modifier -> NATIVE .)
    ABSTRACT        reduce using rule 144 (modifier -> NATIVE .)
    FINAL           reduce using rule 144 (modifier -> NATIVE .)
    NATIVE          reduce using rule 144 (modifier -> NATIVE .)
    SYNCHRONIZED    reduce using rule 144 (modifier -> NATIVE .)
    TRANSIENT       reduce using rule 144 (modifier -> NATIVE .)
    VOLATILE        reduce using rule 144 (modifier -> NATIVE .)
    STRICTFP        reduce using rule 144 (modifier -> NATIVE .)
    AT              reduce using rule 144 (modifier -> NATIVE .)
    ENUM            reduce using rule 144 (modifier -> NATIVE .)
    INTERFACE       reduce using rule 144 (modifier -> NATIVE .)
    CLASS           reduce using rule 144 (modifier -> NATIVE .)
    BOOLEAN         reduce using rule 144 (modifier -> NATIVE .)
    CHAR            reduce using rule 144 (modifier -> NATIVE .)
    BYTE            reduce using rule 144 (modifier -> NATIVE .)
    SHORT           reduce using rule 144 (modifier -> NATIVE .)
    INT             reduce using rule 144 (modifier -> NATIVE .)
    LONG            reduce using rule 144 (modifier -> NATIVE .)
    FLOAT           reduce using rule 144 (modifier -> NATIVE .)
    DOUBLE          reduce using rule 144 (modifier -> NATIVE .)
    Identifier      reduce using rule 144 (modifier -> NATIVE .)
    VOID            reduce using rule 144 (modifier -> NATIVE .)
    LESS            reduce using rule 144 (modifier -> NATIVE .)


state 299

    (29) modifiers -> expt_6 .
    (452) expt_6 -> expt_6 . modifier
    (137) modifier -> . annotation
    (138) modifier -> . PUBLIC
    (139) modifier -> . PROTECTED
    (140) modifier -> . PRIVATE
    (141) modifier -> . STATIC
    (142) modifier -> . ABSTRACT
    (143) modifier -> . FINAL
    (144) modifier -> . NATIVE
    (145) modifier -> . SYNCHRONIZED
    (146) modifier -> . TRANSIENT
    (147) modifier -> . VOLATILE
    (148) modifier -> . STRICTFP
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for AT resolved as shift
    ENUM            reduce using rule 29 (modifiers -> expt_6 .)
    INTERFACE       reduce using rule 29 (modifiers -> expt_6 .)
    CLASS           reduce using rule 29 (modifiers -> expt_6 .)
    BOOLEAN         reduce using rule 29 (modifiers -> expt_6 .)
    CHAR            reduce using rule 29 (modifiers -> expt_6 .)
    BYTE            reduce using rule 29 (modifiers -> expt_6 .)
    SHORT           reduce using rule 29 (modifiers -> expt_6 .)
    INT             reduce using rule 29 (modifiers -> expt_6 .)
    LONG            reduce using rule 29 (modifiers -> expt_6 .)
    FLOAT           reduce using rule 29 (modifiers -> expt_6 .)
    DOUBLE          reduce using rule 29 (modifiers -> expt_6 .)
    Identifier      reduce using rule 29 (modifiers -> expt_6 .)
    VOID            reduce using rule 29 (modifiers -> expt_6 .)
    LESS            reduce using rule 29 (modifiers -> expt_6 .)
    PUBLIC          shift and go to state 310
    PROTECTED       shift and go to state 295
    PRIVATE         shift and go to state 300
    STATIC          shift and go to state 296
    ABSTRACT        shift and go to state 294
    FINAL           shift and go to state 297
    NATIVE          shift and go to state 298
    SYNCHRONIZED    shift and go to state 293
    TRANSIENT       shift and go to state 307
    VOLATILE        shift and go to state 308
    STRICTFP        shift and go to state 301
    AT              shift and go to state 8

  ! AT              [ reduce using rule 29 (modifiers -> expt_6 .) ]

    modifier                       shift and go to state 444
    annotation                     shift and go to state 304

state 300

    (140) modifier -> PRIVATE .

    PUBLIC          reduce using rule 140 (modifier -> PRIVATE .)
    PROTECTED       reduce using rule 140 (modifier -> PRIVATE .)
    PRIVATE         reduce using rule 140 (modifier -> PRIVATE .)
    STATIC          reduce using rule 140 (modifier -> PRIVATE .)
    ABSTRACT        reduce using rule 140 (modifier -> PRIVATE .)
    FINAL           reduce using rule 140 (modifier -> PRIVATE .)
    NATIVE          reduce using rule 140 (modifier -> PRIVATE .)
    SYNCHRONIZED    reduce using rule 140 (modifier -> PRIVATE .)
    TRANSIENT       reduce using rule 140 (modifier -> PRIVATE .)
    VOLATILE        reduce using rule 140 (modifier -> PRIVATE .)
    STRICTFP        reduce using rule 140 (modifier -> PRIVATE .)
    AT              reduce using rule 140 (modifier -> PRIVATE .)
    ENUM            reduce using rule 140 (modifier -> PRIVATE .)
    INTERFACE       reduce using rule 140 (modifier -> PRIVATE .)
    CLASS           reduce using rule 140 (modifier -> PRIVATE .)
    BOOLEAN         reduce using rule 140 (modifier -> PRIVATE .)
    CHAR            reduce using rule 140 (modifier -> PRIVATE .)
    BYTE            reduce using rule 140 (modifier -> PRIVATE .)
    SHORT           reduce using rule 140 (modifier -> PRIVATE .)
    INT             reduce using rule 140 (modifier -> PRIVATE .)
    LONG            reduce using rule 140 (modifier -> PRIVATE .)
    FLOAT           reduce using rule 140 (modifier -> PRIVATE .)
    DOUBLE          reduce using rule 140 (modifier -> PRIVATE .)
    Identifier      reduce using rule 140 (modifier -> PRIVATE .)
    VOID            reduce using rule 140 (modifier -> PRIVATE .)
    LESS            reduce using rule 140 (modifier -> PRIVATE .)


state 301

    (148) modifier -> STRICTFP .

    PUBLIC          reduce using rule 148 (modifier -> STRICTFP .)
    PROTECTED       reduce using rule 148 (modifier -> STRICTFP .)
    PRIVATE         reduce using rule 148 (modifier -> STRICTFP .)
    STATIC          reduce using rule 148 (modifier -> STRICTFP .)
    ABSTRACT        reduce using rule 148 (modifier -> STRICTFP .)
    FINAL           reduce using rule 148 (modifier -> STRICTFP .)
    NATIVE          reduce using rule 148 (modifier -> STRICTFP .)
    SYNCHRONIZED    reduce using rule 148 (modifier -> STRICTFP .)
    TRANSIENT       reduce using rule 148 (modifier -> STRICTFP .)
    VOLATILE        reduce using rule 148 (modifier -> STRICTFP .)
    STRICTFP        reduce using rule 148 (modifier -> STRICTFP .)
    AT              reduce using rule 148 (modifier -> STRICTFP .)
    ENUM            reduce using rule 148 (modifier -> STRICTFP .)
    INTERFACE       reduce using rule 148 (modifier -> STRICTFP .)
    CLASS           reduce using rule 148 (modifier -> STRICTFP .)
    BOOLEAN         reduce using rule 148 (modifier -> STRICTFP .)
    CHAR            reduce using rule 148 (modifier -> STRICTFP .)
    BYTE            reduce using rule 148 (modifier -> STRICTFP .)
    SHORT           reduce using rule 148 (modifier -> STRICTFP .)
    INT             reduce using rule 148 (modifier -> STRICTFP .)
    LONG            reduce using rule 148 (modifier -> STRICTFP .)
    FLOAT           reduce using rule 148 (modifier -> STRICTFP .)
    DOUBLE          reduce using rule 148 (modifier -> STRICTFP .)
    Identifier      reduce using rule 148 (modifier -> STRICTFP .)
    VOID            reduce using rule 148 (modifier -> STRICTFP .)
    LESS            reduce using rule 148 (modifier -> STRICTFP .)


state 302

    (220) annotationTypeBody -> BLPAREN expt_47 . BRPAREN
    (529) expt_47 -> expt_47 . annotationTypeElementDeclaration
    (222) annotationTypeElementDeclaration -> . modifiers annotationTypeElementRest
    (29) modifiers -> . expt_6
    (30) modifiers -> . empty
    (451) expt_6 -> . modifier
    (452) expt_6 -> . expt_6 modifier
    (584) empty -> .
    (137) modifier -> . annotation
    (138) modifier -> . PUBLIC
    (139) modifier -> . PROTECTED
    (140) modifier -> . PRIVATE
    (141) modifier -> . STATIC
    (142) modifier -> . ABSTRACT
    (143) modifier -> . FINAL
    (144) modifier -> . NATIVE
    (145) modifier -> . SYNCHRONIZED
    (146) modifier -> . TRANSIENT
    (147) modifier -> . VOLATILE
    (148) modifier -> . STRICTFP
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for AT resolved as shift
    BRPAREN         shift and go to state 446
    ENUM            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    BOOLEAN         reduce using rule 584 (empty -> .)
    CHAR            reduce using rule 584 (empty -> .)
    BYTE            reduce using rule 584 (empty -> .)
    SHORT           reduce using rule 584 (empty -> .)
    INT             reduce using rule 584 (empty -> .)
    LONG            reduce using rule 584 (empty -> .)
    FLOAT           reduce using rule 584 (empty -> .)
    DOUBLE          reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    PUBLIC          shift and go to state 310
    PROTECTED       shift and go to state 295
    PRIVATE         shift and go to state 300
    STATIC          shift and go to state 296
    ABSTRACT        shift and go to state 294
    FINAL           shift and go to state 297
    NATIVE          shift and go to state 298
    SYNCHRONIZED    shift and go to state 293
    TRANSIENT       shift and go to state 307
    VOLATILE        shift and go to state 308
    STRICTFP        shift and go to state 301
    AT              shift and go to state 8

  ! AT              [ reduce using rule 584 (empty -> .) ]

    modifiers                      shift and go to state 306
    expt_6                         shift and go to state 299
    annotationTypeElementDeclaration shift and go to state 447
    modifier                       shift and go to state 309
    annotation                     shift and go to state 304
    empty                          shift and go to state 445

state 303

    (221) annotationTypeBody -> BLPAREN empty . BRPAREN
    (30) modifiers -> empty .

    BRPAREN         shift and go to state 448
    AT              reduce using rule 30 (modifiers -> empty .)
    ENUM            reduce using rule 30 (modifiers -> empty .)
    INTERFACE       reduce using rule 30 (modifiers -> empty .)
    CLASS           reduce using rule 30 (modifiers -> empty .)
    BOOLEAN         reduce using rule 30 (modifiers -> empty .)
    CHAR            reduce using rule 30 (modifiers -> empty .)
    BYTE            reduce using rule 30 (modifiers -> empty .)
    SHORT           reduce using rule 30 (modifiers -> empty .)
    INT             reduce using rule 30 (modifiers -> empty .)
    LONG            reduce using rule 30 (modifiers -> empty .)
    FLOAT           reduce using rule 30 (modifiers -> empty .)
    DOUBLE          reduce using rule 30 (modifiers -> empty .)
    Identifier      reduce using rule 30 (modifiers -> empty .)


state 304

    (137) modifier -> annotation .

    PUBLIC          reduce using rule 137 (modifier -> annotation .)
    PROTECTED       reduce using rule 137 (modifier -> annotation .)
    PRIVATE         reduce using rule 137 (modifier -> annotation .)
    STATIC          reduce using rule 137 (modifier -> annotation .)
    ABSTRACT        reduce using rule 137 (modifier -> annotation .)
    FINAL           reduce using rule 137 (modifier -> annotation .)
    NATIVE          reduce using rule 137 (modifier -> annotation .)
    SYNCHRONIZED    reduce using rule 137 (modifier -> annotation .)
    TRANSIENT       reduce using rule 137 (modifier -> annotation .)
    VOLATILE        reduce using rule 137 (modifier -> annotation .)
    STRICTFP        reduce using rule 137 (modifier -> annotation .)
    AT              reduce using rule 137 (modifier -> annotation .)
    ENUM            reduce using rule 137 (modifier -> annotation .)
    INTERFACE       reduce using rule 137 (modifier -> annotation .)
    CLASS           reduce using rule 137 (modifier -> annotation .)
    BOOLEAN         reduce using rule 137 (modifier -> annotation .)
    CHAR            reduce using rule 137 (modifier -> annotation .)
    BYTE            reduce using rule 137 (modifier -> annotation .)
    SHORT           reduce using rule 137 (modifier -> annotation .)
    INT             reduce using rule 137 (modifier -> annotation .)
    LONG            reduce using rule 137 (modifier -> annotation .)
    FLOAT           reduce using rule 137 (modifier -> annotation .)
    DOUBLE          reduce using rule 137 (modifier -> annotation .)
    Identifier      reduce using rule 137 (modifier -> annotation .)
    VOID            reduce using rule 137 (modifier -> annotation .)
    LESS            reduce using rule 137 (modifier -> annotation .)


state 305

    (528) expt_47 -> annotationTypeElementDeclaration .

    BRPAREN         reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    PUBLIC          reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    PROTECTED       reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    PRIVATE         reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    STATIC          reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    ABSTRACT        reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    FINAL           reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    NATIVE          reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    SYNCHRONIZED    reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    TRANSIENT       reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    VOLATILE        reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    STRICTFP        reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    AT              reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    ENUM            reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    INTERFACE       reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    CLASS           reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    BOOLEAN         reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    CHAR            reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    BYTE            reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    SHORT           reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    INT             reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    LONG            reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    FLOAT           reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    DOUBLE          reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)
    Identifier      reduce using rule 528 (expt_47 -> annotationTypeElementDeclaration .)


state 306

    (222) annotationTypeElementDeclaration -> modifiers . annotationTypeElementRest
    (223) annotationTypeElementRest -> . annotationTypeDeclaration expt_48
    (224) annotationTypeElementRest -> . annotationTypeDeclaration empty
    (225) annotationTypeElementRest -> . enumDeclaration expt_48
    (226) annotationTypeElementRest -> . enumDeclaration empty
    (227) annotationTypeElementRest -> . normalInterfaceDeclaration expt_48
    (228) annotationTypeElementRest -> . normalInterfaceDeclaration empty
    (229) annotationTypeElementRest -> . normalClassDeclaration expt_48
    (230) annotationTypeElementRest -> . normalClassDeclaration empty
    (231) annotationTypeElementRest -> . type annotationMethodOrConstantRest SEMI
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    AT              shift and go to state 70
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    CLASS           shift and go to state 35
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    normalInterfaceDeclaration     shift and go to state 449
    normalClassDeclaration         shift and go to state 450
    classOrInterfaceType           shift and go to state 164
    type                           shift and go to state 451
    enumDeclaration                shift and go to state 452
    annotationTypeElementRest      shift and go to state 453
    primitiveType                  shift and go to state 165
    annotationTypeDeclaration      shift and go to state 454

state 307

    (146) modifier -> TRANSIENT .

    PUBLIC          reduce using rule 146 (modifier -> TRANSIENT .)
    PROTECTED       reduce using rule 146 (modifier -> TRANSIENT .)
    PRIVATE         reduce using rule 146 (modifier -> TRANSIENT .)
    STATIC          reduce using rule 146 (modifier -> TRANSIENT .)
    ABSTRACT        reduce using rule 146 (modifier -> TRANSIENT .)
    FINAL           reduce using rule 146 (modifier -> TRANSIENT .)
    NATIVE          reduce using rule 146 (modifier -> TRANSIENT .)
    SYNCHRONIZED    reduce using rule 146 (modifier -> TRANSIENT .)
    TRANSIENT       reduce using rule 146 (modifier -> TRANSIENT .)
    VOLATILE        reduce using rule 146 (modifier -> TRANSIENT .)
    STRICTFP        reduce using rule 146 (modifier -> TRANSIENT .)
    AT              reduce using rule 146 (modifier -> TRANSIENT .)
    ENUM            reduce using rule 146 (modifier -> TRANSIENT .)
    INTERFACE       reduce using rule 146 (modifier -> TRANSIENT .)
    CLASS           reduce using rule 146 (modifier -> TRANSIENT .)
    BOOLEAN         reduce using rule 146 (modifier -> TRANSIENT .)
    CHAR            reduce using rule 146 (modifier -> TRANSIENT .)
    BYTE            reduce using rule 146 (modifier -> TRANSIENT .)
    SHORT           reduce using rule 146 (modifier -> TRANSIENT .)
    INT             reduce using rule 146 (modifier -> TRANSIENT .)
    LONG            reduce using rule 146 (modifier -> TRANSIENT .)
    FLOAT           reduce using rule 146 (modifier -> TRANSIENT .)
    DOUBLE          reduce using rule 146 (modifier -> TRANSIENT .)
    Identifier      reduce using rule 146 (modifier -> TRANSIENT .)
    VOID            reduce using rule 146 (modifier -> TRANSIENT .)
    LESS            reduce using rule 146 (modifier -> TRANSIENT .)


state 308

    (147) modifier -> VOLATILE .

    PUBLIC          reduce using rule 147 (modifier -> VOLATILE .)
    PROTECTED       reduce using rule 147 (modifier -> VOLATILE .)
    PRIVATE         reduce using rule 147 (modifier -> VOLATILE .)
    STATIC          reduce using rule 147 (modifier -> VOLATILE .)
    ABSTRACT        reduce using rule 147 (modifier -> VOLATILE .)
    FINAL           reduce using rule 147 (modifier -> VOLATILE .)
    NATIVE          reduce using rule 147 (modifier -> VOLATILE .)
    SYNCHRONIZED    reduce using rule 147 (modifier -> VOLATILE .)
    TRANSIENT       reduce using rule 147 (modifier -> VOLATILE .)
    VOLATILE        reduce using rule 147 (modifier -> VOLATILE .)
    STRICTFP        reduce using rule 147 (modifier -> VOLATILE .)
    AT              reduce using rule 147 (modifier -> VOLATILE .)
    ENUM            reduce using rule 147 (modifier -> VOLATILE .)
    INTERFACE       reduce using rule 147 (modifier -> VOLATILE .)
    CLASS           reduce using rule 147 (modifier -> VOLATILE .)
    BOOLEAN         reduce using rule 147 (modifier -> VOLATILE .)
    CHAR            reduce using rule 147 (modifier -> VOLATILE .)
    BYTE            reduce using rule 147 (modifier -> VOLATILE .)
    SHORT           reduce using rule 147 (modifier -> VOLATILE .)
    INT             reduce using rule 147 (modifier -> VOLATILE .)
    LONG            reduce using rule 147 (modifier -> VOLATILE .)
    FLOAT           reduce using rule 147 (modifier -> VOLATILE .)
    DOUBLE          reduce using rule 147 (modifier -> VOLATILE .)
    Identifier      reduce using rule 147 (modifier -> VOLATILE .)
    VOID            reduce using rule 147 (modifier -> VOLATILE .)
    LESS            reduce using rule 147 (modifier -> VOLATILE .)


state 309

    (451) expt_6 -> modifier .

    PUBLIC          reduce using rule 451 (expt_6 -> modifier .)
    PROTECTED       reduce using rule 451 (expt_6 -> modifier .)
    PRIVATE         reduce using rule 451 (expt_6 -> modifier .)
    STATIC          reduce using rule 451 (expt_6 -> modifier .)
    ABSTRACT        reduce using rule 451 (expt_6 -> modifier .)
    FINAL           reduce using rule 451 (expt_6 -> modifier .)
    NATIVE          reduce using rule 451 (expt_6 -> modifier .)
    SYNCHRONIZED    reduce using rule 451 (expt_6 -> modifier .)
    TRANSIENT       reduce using rule 451 (expt_6 -> modifier .)
    VOLATILE        reduce using rule 451 (expt_6 -> modifier .)
    STRICTFP        reduce using rule 451 (expt_6 -> modifier .)
    AT              reduce using rule 451 (expt_6 -> modifier .)
    VOID            reduce using rule 451 (expt_6 -> modifier .)
    Identifier      reduce using rule 451 (expt_6 -> modifier .)
    LESS            reduce using rule 451 (expt_6 -> modifier .)
    INTERFACE       reduce using rule 451 (expt_6 -> modifier .)
    CLASS           reduce using rule 451 (expt_6 -> modifier .)
    ENUM            reduce using rule 451 (expt_6 -> modifier .)
    BOOLEAN         reduce using rule 451 (expt_6 -> modifier .)
    CHAR            reduce using rule 451 (expt_6 -> modifier .)
    BYTE            reduce using rule 451 (expt_6 -> modifier .)
    SHORT           reduce using rule 451 (expt_6 -> modifier .)
    INT             reduce using rule 451 (expt_6 -> modifier .)
    LONG            reduce using rule 451 (expt_6 -> modifier .)
    FLOAT           reduce using rule 451 (expt_6 -> modifier .)
    DOUBLE          reduce using rule 451 (expt_6 -> modifier .)


state 310

    (138) modifier -> PUBLIC .

    PUBLIC          reduce using rule 138 (modifier -> PUBLIC .)
    PROTECTED       reduce using rule 138 (modifier -> PUBLIC .)
    PRIVATE         reduce using rule 138 (modifier -> PUBLIC .)
    STATIC          reduce using rule 138 (modifier -> PUBLIC .)
    ABSTRACT        reduce using rule 138 (modifier -> PUBLIC .)
    FINAL           reduce using rule 138 (modifier -> PUBLIC .)
    NATIVE          reduce using rule 138 (modifier -> PUBLIC .)
    SYNCHRONIZED    reduce using rule 138 (modifier -> PUBLIC .)
    TRANSIENT       reduce using rule 138 (modifier -> PUBLIC .)
    VOLATILE        reduce using rule 138 (modifier -> PUBLIC .)
    STRICTFP        reduce using rule 138 (modifier -> PUBLIC .)
    AT              reduce using rule 138 (modifier -> PUBLIC .)
    ENUM            reduce using rule 138 (modifier -> PUBLIC .)
    INTERFACE       reduce using rule 138 (modifier -> PUBLIC .)
    CLASS           reduce using rule 138 (modifier -> PUBLIC .)
    BOOLEAN         reduce using rule 138 (modifier -> PUBLIC .)
    CHAR            reduce using rule 138 (modifier -> PUBLIC .)
    BYTE            reduce using rule 138 (modifier -> PUBLIC .)
    SHORT           reduce using rule 138 (modifier -> PUBLIC .)
    INT             reduce using rule 138 (modifier -> PUBLIC .)
    LONG            reduce using rule 138 (modifier -> PUBLIC .)
    FLOAT           reduce using rule 138 (modifier -> PUBLIC .)
    DOUBLE          reduce using rule 138 (modifier -> PUBLIC .)
    Identifier      reduce using rule 138 (modifier -> PUBLIC .)
    VOID            reduce using rule 138 (modifier -> PUBLIC .)
    LESS            reduce using rule 138 (modifier -> PUBLIC .)


state 311

    (458) expt_10 -> COMMA . typeParameter
    (43) typeParameter -> . Identifier expt_11
    (44) typeParameter -> . Identifier empty

    Identifier      shift and go to state 174

    typeParameter                  shift and go to state 455

state 312

    (41) typeParameters -> LESS typeParameter expt_10 . MORE
    (459) expt_10 -> expt_10 . COMMA typeParameter

    MORE            shift and go to state 456
    COMMA           shift and go to state 457


state 313

    (42) typeParameters -> LESS typeParameter empty . MORE

    MORE            shift and go to state 458


state 314

    (460) expt_11 -> EXTENDS . typeBound
    (45) typeBound -> . type expt_12
    (46) typeBound -> . type empty
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    typeBound                      shift and go to state 459
    type                           shift and go to state 460

state 315

    (44) typeParameter -> Identifier empty .
    (461) expt_11 -> empty .

  ! reduce/reduce conflict for COMMA resolved using rule 44 (typeParameter -> Identifier empty .)
  ! reduce/reduce conflict for MORE resolved using rule 44 (typeParameter -> Identifier empty .)
    MORE            reduce using rule 44 (typeParameter -> Identifier empty .)
    COMMA           reduce using rule 44 (typeParameter -> Identifier empty .)

  ! COMMA           [ reduce using rule 461 (expt_11 -> empty .) ]
  ! MORE            [ reduce using rule 461 (expt_11 -> empty .) ]


state 316

    (43) typeParameter -> Identifier expt_11 .

    MORE            reduce using rule 43 (typeParameter -> Identifier expt_11 .)
    COMMA           reduce using rule 43 (typeParameter -> Identifier expt_11 .)


state 317

    (33) normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 . classBody
    (77) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (78) classBody -> . BLPAREN BRPAREN

    BLPAREN         shift and go to state 439

    classBody                      shift and go to state 461

state 318

    (34) normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty . classBody
    (457) expt_9 -> empty .
    (77) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (78) classBody -> . BLPAREN BRPAREN

  ! shift/reduce conflict for BLPAREN resolved as shift
    BLPAREN         shift and go to state 439

  ! BLPAREN         [ reduce using rule 457 (expt_9 -> empty .) ]

    classBody                      shift and go to state 462

state 319

    (455) expt_8 -> EXTENDS type .

    IMPLEMENTS      reduce using rule 455 (expt_8 -> EXTENDS type .)
    BLPAREN         reduce using rule 455 (expt_8 -> EXTENDS type .)


state 320

    (35) normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 . classBody
    (77) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (78) classBody -> . BLPAREN BRPAREN

    BLPAREN         shift and go to state 439

    classBody                      shift and go to state 463

state 321

    (36) normalClassDeclaration -> CLASS Identifier typeParameters empty empty . classBody
    (457) expt_9 -> empty .
    (77) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (78) classBody -> . BLPAREN BRPAREN

  ! shift/reduce conflict for BLPAREN resolved as shift
    BLPAREN         shift and go to state 439

  ! BLPAREN         [ reduce using rule 457 (expt_9 -> empty .) ]

    classBody                      shift and go to state 464

state 322

    (37) normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 . classBody
    (77) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (78) classBody -> . BLPAREN BRPAREN

    BLPAREN         shift and go to state 439

    classBody                      shift and go to state 465

state 323

    (38) normalClassDeclaration -> CLASS Identifier empty expt_8 empty . classBody
    (457) expt_9 -> empty .
    (77) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (78) classBody -> . BLPAREN BRPAREN

  ! shift/reduce conflict for BLPAREN resolved as shift
    BLPAREN         shift and go to state 439

  ! BLPAREN         [ reduce using rule 457 (expt_9 -> empty .) ]

    classBody                      shift and go to state 466

state 324

    (39) normalClassDeclaration -> CLASS Identifier empty empty expt_9 . classBody
    (77) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (78) classBody -> . BLPAREN BRPAREN

    BLPAREN         shift and go to state 439

    classBody                      shift and go to state 467

state 325

    (40) normalClassDeclaration -> CLASS Identifier empty empty empty . classBody
    (457) expt_9 -> empty .
    (77) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (78) classBody -> . BLPAREN BRPAREN

  ! shift/reduce conflict for BLPAREN resolved as shift
    BLPAREN         shift and go to state 439

  ! BLPAREN         [ reduce using rule 457 (expt_9 -> empty .) ]

    classBody                      shift and go to state 468

state 326

    (71) normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .

    BRPAREN         reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    SEMI            reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    Identifier      reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    CONTINUE        reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    BREAK           reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    THROW           reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    RETURN          reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    SYNCHRONIZED    reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    SWITCH          reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    TRY             reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    DO              reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    WHILE           reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    FOR             reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    IF              reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    ASSERT          reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    BLPAREN         reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    BOOLEAN         reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    CHAR            reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    BYTE            reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    SHORT           reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    INT             reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    LONG            reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    FLOAT           reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    DOUBLE          reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    PUBLIC          reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    PROTECTED       reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    PRIVATE         reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    ABSTRACT        reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    STATIC          reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    FINAL           reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    STRICTFP        reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    CLASS           reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    ENUM            reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    INTERFACE       reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    AT              reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    PLUS            reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    DASH            reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    OP_INC          reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    OP_DEC          reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    EXCLAMATION     reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    TILDE           reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    VOID            reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    NEW             reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    SUPER           reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    THIS            reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    LPAREN          reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    CharacterLiteral reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    StringLiteral   reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    NULL            reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    NUMBER          reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    HEX_NUMBER      reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    LONG_NUMBER     reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    LONG_HEX_NUMBER reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    NON_INTEGER_1   reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    NON_INTEGER_2   reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    NON_INTEGER_3   reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    TRUE            reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    FALSE           reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    $end            reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    NATIVE          reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    TRANSIENT       reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    VOLATILE        reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    LESS            reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    CASE            reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)
    DEFAULT         reduce using rule 71 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters expt_21 interfaceBody .)


state 327

    (79) interfaceBody -> BLPAREN . expt_23 BRPAREN
    (80) interfaceBody -> BLPAREN . empty BRPAREN
    (482) expt_23 -> . interfaceBodyDeclaration
    (483) expt_23 -> . expt_23 interfaceBodyDeclaration
    (584) empty -> .
    (97) interfaceBodyDeclaration -> . modifiers interfaceMemberDecl
    (98) interfaceBodyDeclaration -> . SEMI
    (29) modifiers -> . expt_6
    (30) modifiers -> . empty
    (451) expt_6 -> . modifier
    (452) expt_6 -> . expt_6 modifier
    (137) modifier -> . annotation
    (138) modifier -> . PUBLIC
    (139) modifier -> . PROTECTED
    (140) modifier -> . PRIVATE
    (141) modifier -> . STATIC
    (142) modifier -> . ABSTRACT
    (143) modifier -> . FINAL
    (144) modifier -> . NATIVE
    (145) modifier -> . SYNCHRONIZED
    (146) modifier -> . TRANSIENT
    (147) modifier -> . VOLATILE
    (148) modifier -> . STRICTFP
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for AT resolved as shift
    BRPAREN         reduce using rule 584 (empty -> .)
    VOID            reduce using rule 584 (empty -> .)
    LESS            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    BOOLEAN         reduce using rule 584 (empty -> .)
    CHAR            reduce using rule 584 (empty -> .)
    BYTE            reduce using rule 584 (empty -> .)
    SHORT           reduce using rule 584 (empty -> .)
    INT             reduce using rule 584 (empty -> .)
    LONG            reduce using rule 584 (empty -> .)
    FLOAT           reduce using rule 584 (empty -> .)
    DOUBLE          reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    SEMI            shift and go to state 469
    PUBLIC          shift and go to state 310
    PROTECTED       shift and go to state 295
    PRIVATE         shift and go to state 300
    STATIC          shift and go to state 296
    ABSTRACT        shift and go to state 294
    FINAL           shift and go to state 297
    NATIVE          shift and go to state 298
    SYNCHRONIZED    shift and go to state 293
    TRANSIENT       shift and go to state 307
    VOLATILE        shift and go to state 308
    STRICTFP        shift and go to state 301
    AT              shift and go to state 8

  ! AT              [ reduce using rule 584 (empty -> .) ]

    modifiers                      shift and go to state 473
    expt_6                         shift and go to state 299
    expt_23                        shift and go to state 471
    interfaceBodyDeclaration       shift and go to state 472
    modifier                       shift and go to state 309
    annotation                     shift and go to state 304
    empty                          shift and go to state 470

state 328

    (478) expt_21 -> EXTENDS typeList .

    BLPAREN         reduce using rule 478 (expt_21 -> EXTENDS typeList .)


state 329

    (72) normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .

    BRPAREN         reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    SEMI            reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    Identifier      reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    CONTINUE        reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    BREAK           reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    THROW           reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    RETURN          reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    SYNCHRONIZED    reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    SWITCH          reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    TRY             reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    DO              reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    WHILE           reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    FOR             reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    IF              reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    ASSERT          reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    BLPAREN         reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    BOOLEAN         reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    CHAR            reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    BYTE            reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    SHORT           reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    INT             reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    LONG            reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    FLOAT           reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    DOUBLE          reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    PUBLIC          reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    PROTECTED       reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    PRIVATE         reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    ABSTRACT        reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    STATIC          reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    FINAL           reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    STRICTFP        reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    CLASS           reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    ENUM            reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    INTERFACE       reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    AT              reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    PLUS            reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    DASH            reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    OP_INC          reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    OP_DEC          reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    EXCLAMATION     reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    TILDE           reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    VOID            reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    NEW             reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    SUPER           reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    THIS            reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    LPAREN          reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    CharacterLiteral reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    StringLiteral   reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    NULL            reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    NUMBER          reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    HEX_NUMBER      reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    LONG_NUMBER     reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    LONG_HEX_NUMBER reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    NON_INTEGER_1   reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    NON_INTEGER_2   reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    NON_INTEGER_3   reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    TRUE            reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    FALSE           reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    $end            reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    NATIVE          reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    TRANSIENT       reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    VOLATILE        reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    LESS            reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    CASE            reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)
    DEFAULT         reduce using rule 72 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters empty interfaceBody .)


state 330

    (73) normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .

    BRPAREN         reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    SEMI            reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    Identifier      reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    CONTINUE        reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    BREAK           reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    THROW           reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    RETURN          reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    SYNCHRONIZED    reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    SWITCH          reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    TRY             reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    DO              reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    WHILE           reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    FOR             reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    IF              reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    ASSERT          reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    BLPAREN         reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    BOOLEAN         reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    CHAR            reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    BYTE            reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    SHORT           reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    INT             reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    LONG            reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    FLOAT           reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    DOUBLE          reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    PUBLIC          reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    PROTECTED       reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    PRIVATE         reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    ABSTRACT        reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    STATIC          reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    FINAL           reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    STRICTFP        reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    CLASS           reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    ENUM            reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    INTERFACE       reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    AT              reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    PLUS            reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    DASH            reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    OP_INC          reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    OP_DEC          reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    EXCLAMATION     reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    TILDE           reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    VOID            reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    NEW             reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    SUPER           reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    THIS            reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    LPAREN          reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    CharacterLiteral reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    StringLiteral   reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    NULL            reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    NUMBER          reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    HEX_NUMBER      reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    LONG_NUMBER     reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    LONG_HEX_NUMBER reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    NON_INTEGER_1   reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    NON_INTEGER_2   reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    NON_INTEGER_3   reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    TRUE            reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    FALSE           reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    $end            reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    NATIVE          reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    TRANSIENT       reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    VOLATILE        reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    LESS            reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    CASE            reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)
    DEFAULT         reduce using rule 73 (normalInterfaceDeclaration -> INTERFACE Identifier empty expt_21 interfaceBody .)


state 331

    (74) normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .

    BRPAREN         reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    SEMI            reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    Identifier      reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    CONTINUE        reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    BREAK           reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    THROW           reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    RETURN          reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    SYNCHRONIZED    reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    SWITCH          reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    TRY             reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    DO              reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    WHILE           reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    FOR             reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    IF              reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    ASSERT          reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    BLPAREN         reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    BOOLEAN         reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    CHAR            reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    BYTE            reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    SHORT           reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    INT             reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    LONG            reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    FLOAT           reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    DOUBLE          reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    PUBLIC          reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    PROTECTED       reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    PRIVATE         reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    ABSTRACT        reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    STATIC          reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    FINAL           reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    STRICTFP        reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    CLASS           reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    ENUM            reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    INTERFACE       reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    AT              reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    PLUS            reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    DASH            reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    OP_INC          reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    OP_DEC          reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    EXCLAMATION     reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    TILDE           reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    VOID            reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    NEW             reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    SUPER           reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    THIS            reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    LPAREN          reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    CharacterLiteral reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    StringLiteral   reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    NULL            reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    NUMBER          reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    HEX_NUMBER      reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    LONG_NUMBER     reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    LONG_HEX_NUMBER reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    NON_INTEGER_1   reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    NON_INTEGER_2   reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    NON_INTEGER_3   reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    TRUE            reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    FALSE           reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    $end            reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    NATIVE          reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    TRANSIENT       reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    VOLATILE        reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    LESS            reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    CASE            reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)
    DEFAULT         reduce using rule 74 (normalInterfaceDeclaration -> INTERFACE Identifier empty empty interfaceBody .)


state 332

    (357) primary -> VOID DOT CLASS .

    OP_INC          reduce using rule 357 (primary -> VOID DOT CLASS .)
    OP_DEC          reduce using rule 357 (primary -> VOID DOT CLASS .)
    FLPAREN         reduce using rule 357 (primary -> VOID DOT CLASS .)
    DOT             reduce using rule 357 (primary -> VOID DOT CLASS .)
    MULT            reduce using rule 357 (primary -> VOID DOT CLASS .)
    SLASH           reduce using rule 357 (primary -> VOID DOT CLASS .)
    PERCENT         reduce using rule 357 (primary -> VOID DOT CLASS .)
    PLUS            reduce using rule 357 (primary -> VOID DOT CLASS .)
    DASH            reduce using rule 357 (primary -> VOID DOT CLASS .)
    OP_SHR          reduce using rule 357 (primary -> VOID DOT CLASS .)
    OP_SHL          reduce using rule 357 (primary -> VOID DOT CLASS .)
    OP_SHRR         reduce using rule 357 (primary -> VOID DOT CLASS .)
    OP_LE           reduce using rule 357 (primary -> VOID DOT CLASS .)
    OP_GE           reduce using rule 357 (primary -> VOID DOT CLASS .)
    LESS            reduce using rule 357 (primary -> VOID DOT CLASS .)
    MORE            reduce using rule 357 (primary -> VOID DOT CLASS .)
    INSTANCEOF      reduce using rule 357 (primary -> VOID DOT CLASS .)
    OP_EQ           reduce using rule 357 (primary -> VOID DOT CLASS .)
    OP_NE           reduce using rule 357 (primary -> VOID DOT CLASS .)
    AND             reduce using rule 357 (primary -> VOID DOT CLASS .)
    CARET           reduce using rule 357 (primary -> VOID DOT CLASS .)
    VERTICAL        reduce using rule 357 (primary -> VOID DOT CLASS .)
    OP_LAND         reduce using rule 357 (primary -> VOID DOT CLASS .)
    OP_LOR          reduce using rule 357 (primary -> VOID DOT CLASS .)
    QUES            reduce using rule 357 (primary -> VOID DOT CLASS .)
    RPAREN          reduce using rule 357 (primary -> VOID DOT CLASS .)
    COMMA           reduce using rule 357 (primary -> VOID DOT CLASS .)
    BRPAREN         reduce using rule 357 (primary -> VOID DOT CLASS .)
    EQUALS          reduce using rule 357 (primary -> VOID DOT CLASS .)
    ASS_ADD         reduce using rule 357 (primary -> VOID DOT CLASS .)
    ASS_SUB         reduce using rule 357 (primary -> VOID DOT CLASS .)
    ASS_MUL         reduce using rule 357 (primary -> VOID DOT CLASS .)
    ASS_DIV         reduce using rule 357 (primary -> VOID DOT CLASS .)
    ASS_AND         reduce using rule 357 (primary -> VOID DOT CLASS .)
    ASS_OR          reduce using rule 357 (primary -> VOID DOT CLASS .)
    ASS_XOR         reduce using rule 357 (primary -> VOID DOT CLASS .)
    ASS_MOD         reduce using rule 357 (primary -> VOID DOT CLASS .)
    ASS_SHL         reduce using rule 357 (primary -> VOID DOT CLASS .)
    ASS_SHRR        reduce using rule 357 (primary -> VOID DOT CLASS .)
    ASS_SHR         reduce using rule 357 (primary -> VOID DOT CLASS .)
    FRPAREN         reduce using rule 357 (primary -> VOID DOT CLASS .)
    COLON           reduce using rule 357 (primary -> VOID DOT CLASS .)
    SEMI            reduce using rule 357 (primary -> VOID DOT CLASS .)


state 333

    (553) expt_63 -> expt_63 OP_LOR . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 474
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121

state 334

    (552) expt_63 -> OP_LOR conditionalAndExpression .

    OP_LOR          reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    QUES            reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    RPAREN          reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    COMMA           reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    BRPAREN         reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    EQUALS          reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    ASS_ADD         reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    ASS_SUB         reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    ASS_MUL         reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    ASS_DIV         reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    ASS_AND         reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    ASS_OR          reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    ASS_XOR         reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    ASS_MOD         reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    ASS_SHL         reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    ASS_SHRR        reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    ASS_SHR         reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    FRPAREN         reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    COLON           reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)
    SEMI            reduce using rule 552 (expt_63 -> OP_LOR conditionalAndExpression .)


state 335

    (556) expt_65 -> VERTICAL exclusiveOrExpression .

    VERTICAL        reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    OP_LAND         reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    OP_LOR          reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    QUES            reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    RPAREN          reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    COMMA           reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    BRPAREN         reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    EQUALS          reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    ASS_ADD         reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    ASS_SUB         reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    ASS_MUL         reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    ASS_DIV         reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    ASS_AND         reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    ASS_OR          reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    ASS_XOR         reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    ASS_MOD         reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    ASS_SHL         reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    ASS_SHRR        reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    ASS_SHR         reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    FRPAREN         reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    COLON           reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)
    SEMI            reduce using rule 556 (expt_65 -> VERTICAL exclusiveOrExpression .)


state 336

    (557) expt_65 -> expt_65 VERTICAL . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 475
    primary                        shift and go to state 125
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    relationalExpression           shift and go to state 107
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121

state 337

    (326) instanceOfExpression -> relationalExpression INSTANCEOF type .

    OP_EQ           reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    OP_NE           reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    AND             reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    CARET           reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    VERTICAL        reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    OP_LAND         reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    OP_LOR          reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    QUES            reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    RPAREN          reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    COMMA           reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    BRPAREN         reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    EQUALS          reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    ASS_ADD         reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    ASS_SUB         reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    ASS_MUL         reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    ASS_DIV         reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    ASS_AND         reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    ASS_OR          reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    ASS_XOR         reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    ASS_MOD         reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    ASS_SHL         reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    ASS_SHRR        reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    ASS_SHR         reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    FRPAREN         reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    COLON           reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)
    SEMI            reduce using rule 326 (instanceOfExpression -> relationalExpression INSTANCEOF type .)


state 338

    (563) expt_68 -> expt_68 expr_11 . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    multiplicativeExpression       shift and go to state 145
    primary                        shift and go to state 125
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    relationalExpression           shift and go to state 107
    instanceOfExpression           shift and go to state 476
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138

state 339

    (562) expt_68 -> expr_11 instanceOfExpression .

    OP_EQ           reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    OP_NE           reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    AND             reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    CARET           reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    VERTICAL        reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    OP_LAND         reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    OP_LOR          reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    QUES            reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    RPAREN          reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    COMMA           reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    BRPAREN         reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    EQUALS          reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    ASS_ADD         reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    ASS_SUB         reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    ASS_MUL         reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    ASS_DIV         reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    ASS_AND         reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    ASS_OR          reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    ASS_XOR         reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    ASS_MOD         reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    ASS_SHL         reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    ASS_SHRR        reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    ASS_SHR         reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    FRPAREN         reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    COLON           reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)
    SEMI            reduce using rule 562 (expt_68 -> expr_11 instanceOfExpression .)


state 340

    (372) identifierSuffix -> suffixStatements DOT . CLASS

    CLASS           shift and go to state 477


state 341

    (434) suffixStatements -> suffixStatements FLPAREN . FRPAREN

    FRPAREN         shift and go to state 478


state 342

    (433) suffixStatements -> FLPAREN FRPAREN .

    DOT             reduce using rule 433 (suffixStatements -> FLPAREN FRPAREN .)
    FLPAREN         reduce using rule 433 (suffixStatements -> FLPAREN FRPAREN .)


state 343

    (435) suffixExprStatements -> FLPAREN expression . FRPAREN

    FRPAREN         shift and go to state 479


state 344

    (436) suffixExprStatements -> suffixExprStatements FLPAREN . expression FRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 480

state 345

    (402) arguments -> LPAREN RPAREN .

    OP_INC          reduce using rule 402 (arguments -> LPAREN RPAREN .)
    OP_DEC          reduce using rule 402 (arguments -> LPAREN RPAREN .)
    FLPAREN         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    DOT             reduce using rule 402 (arguments -> LPAREN RPAREN .)
    MULT            reduce using rule 402 (arguments -> LPAREN RPAREN .)
    SLASH           reduce using rule 402 (arguments -> LPAREN RPAREN .)
    PERCENT         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    PLUS            reduce using rule 402 (arguments -> LPAREN RPAREN .)
    DASH            reduce using rule 402 (arguments -> LPAREN RPAREN .)
    OP_SHR          reduce using rule 402 (arguments -> LPAREN RPAREN .)
    OP_SHL          reduce using rule 402 (arguments -> LPAREN RPAREN .)
    OP_SHRR         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    OP_LE           reduce using rule 402 (arguments -> LPAREN RPAREN .)
    OP_GE           reduce using rule 402 (arguments -> LPAREN RPAREN .)
    LESS            reduce using rule 402 (arguments -> LPAREN RPAREN .)
    MORE            reduce using rule 402 (arguments -> LPAREN RPAREN .)
    INSTANCEOF      reduce using rule 402 (arguments -> LPAREN RPAREN .)
    OP_EQ           reduce using rule 402 (arguments -> LPAREN RPAREN .)
    OP_NE           reduce using rule 402 (arguments -> LPAREN RPAREN .)
    AND             reduce using rule 402 (arguments -> LPAREN RPAREN .)
    CARET           reduce using rule 402 (arguments -> LPAREN RPAREN .)
    VERTICAL        reduce using rule 402 (arguments -> LPAREN RPAREN .)
    OP_LAND         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    OP_LOR          reduce using rule 402 (arguments -> LPAREN RPAREN .)
    QUES            reduce using rule 402 (arguments -> LPAREN RPAREN .)
    EQUALS          reduce using rule 402 (arguments -> LPAREN RPAREN .)
    ASS_ADD         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    ASS_SUB         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    ASS_MUL         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    ASS_DIV         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    ASS_AND         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    ASS_OR          reduce using rule 402 (arguments -> LPAREN RPAREN .)
    ASS_XOR         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    ASS_MOD         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    ASS_SHL         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    ASS_SHRR        reduce using rule 402 (arguments -> LPAREN RPAREN .)
    ASS_SHR         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    SEMI            reduce using rule 402 (arguments -> LPAREN RPAREN .)
    RPAREN          reduce using rule 402 (arguments -> LPAREN RPAREN .)
    COMMA           reduce using rule 402 (arguments -> LPAREN RPAREN .)
    BRPAREN         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    FRPAREN         reduce using rule 402 (arguments -> LPAREN RPAREN .)
    COLON           reduce using rule 402 (arguments -> LPAREN RPAREN .)
    BLPAREN         reduce using rule 402 (arguments -> LPAREN RPAREN .)


state 346

    (401) arguments -> LPAREN expressionList . RPAREN

    RPAREN          shift and go to state 481


state 347

    (294) expressionList -> expression . expt_60
    (295) expressionList -> expression .
    (550) expt_60 -> . COMMA expression
    (551) expt_60 -> . expt_60 COMMA expression

    SEMI            reduce using rule 295 (expressionList -> expression .)
    RPAREN          reduce using rule 295 (expressionList -> expression .)
    COMMA           shift and go to state 482

    expt_60                        shift and go to state 483

state 348

    (377) identifierSuffix -> DOT THIS .

    OP_INC          reduce using rule 377 (identifierSuffix -> DOT THIS .)
    OP_DEC          reduce using rule 377 (identifierSuffix -> DOT THIS .)
    FLPAREN         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    DOT             reduce using rule 377 (identifierSuffix -> DOT THIS .)
    MULT            reduce using rule 377 (identifierSuffix -> DOT THIS .)
    SLASH           reduce using rule 377 (identifierSuffix -> DOT THIS .)
    PERCENT         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    PLUS            reduce using rule 377 (identifierSuffix -> DOT THIS .)
    DASH            reduce using rule 377 (identifierSuffix -> DOT THIS .)
    OP_SHR          reduce using rule 377 (identifierSuffix -> DOT THIS .)
    OP_SHL          reduce using rule 377 (identifierSuffix -> DOT THIS .)
    OP_SHRR         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    OP_LE           reduce using rule 377 (identifierSuffix -> DOT THIS .)
    OP_GE           reduce using rule 377 (identifierSuffix -> DOT THIS .)
    LESS            reduce using rule 377 (identifierSuffix -> DOT THIS .)
    MORE            reduce using rule 377 (identifierSuffix -> DOT THIS .)
    INSTANCEOF      reduce using rule 377 (identifierSuffix -> DOT THIS .)
    OP_EQ           reduce using rule 377 (identifierSuffix -> DOT THIS .)
    OP_NE           reduce using rule 377 (identifierSuffix -> DOT THIS .)
    AND             reduce using rule 377 (identifierSuffix -> DOT THIS .)
    CARET           reduce using rule 377 (identifierSuffix -> DOT THIS .)
    VERTICAL        reduce using rule 377 (identifierSuffix -> DOT THIS .)
    OP_LAND         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    OP_LOR          reduce using rule 377 (identifierSuffix -> DOT THIS .)
    QUES            reduce using rule 377 (identifierSuffix -> DOT THIS .)
    RPAREN          reduce using rule 377 (identifierSuffix -> DOT THIS .)
    COMMA           reduce using rule 377 (identifierSuffix -> DOT THIS .)
    BRPAREN         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    EQUALS          reduce using rule 377 (identifierSuffix -> DOT THIS .)
    ASS_ADD         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    ASS_SUB         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    ASS_MUL         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    ASS_DIV         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    ASS_AND         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    ASS_OR          reduce using rule 377 (identifierSuffix -> DOT THIS .)
    ASS_XOR         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    ASS_MOD         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    ASS_SHL         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    ASS_SHRR        reduce using rule 377 (identifierSuffix -> DOT THIS .)
    ASS_SHR         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    FRPAREN         reduce using rule 377 (identifierSuffix -> DOT THIS .)
    COLON           reduce using rule 377 (identifierSuffix -> DOT THIS .)
    SEMI            reduce using rule 377 (identifierSuffix -> DOT THIS .)


state 349

    (376) identifierSuffix -> DOT explicitGenericInvocation .

    OP_INC          reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_DEC          reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    FLPAREN         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    DOT             reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    MULT            reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    SLASH           reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    PERCENT         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    PLUS            reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    DASH            reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_SHR          reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_SHL          reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_SHRR         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_LE           reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_GE           reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    LESS            reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    MORE            reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    INSTANCEOF      reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_EQ           reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_NE           reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    AND             reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    CARET           reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    VERTICAL        reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_LAND         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_LOR          reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    QUES            reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    RPAREN          reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    COMMA           reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    BRPAREN         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    EQUALS          reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_ADD         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_SUB         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_MUL         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_DIV         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_AND         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_OR          reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_XOR         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_MOD         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_SHL         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_SHRR        reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_SHR         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    FRPAREN         reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    COLON           reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)
    SEMI            reduce using rule 376 (identifierSuffix -> DOT explicitGenericInvocation .)


state 350

    (390) explicitGenericInvocation -> nonWildcardTypeArguments . Identifier arguments

    Identifier      shift and go to state 484


state 351

    (379) identifierSuffix -> DOT NEW . innerCreator
    (385) innerCreator -> . expt_41 Identifier classCreatorRest
    (386) innerCreator -> . empty Identifier classCreatorRest
    (518) expt_41 -> . nonWildcardTypeArguments
    (519) expt_41 -> . empty
    (584) empty -> .
    (391) nonWildcardTypeArguments -> . LESS typeList MORE

    Identifier      reduce using rule 584 (empty -> .)
    LESS            shift and go to state 238

    innerCreator                   shift and go to state 485
    nonWildcardTypeArguments       shift and go to state 486
    expt_41                        shift and go to state 488
    empty                          shift and go to state 487

state 352

    (378) identifierSuffix -> DOT SUPER . arguments
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

    LPAREN          shift and go to state 204

    arguments                      shift and go to state 489

state 353

    (375) identifierSuffix -> DOT CLASS .

    OP_INC          reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    OP_DEC          reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    FLPAREN         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    DOT             reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    MULT            reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    SLASH           reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    PERCENT         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    PLUS            reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    DASH            reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    OP_SHR          reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    OP_SHL          reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    OP_SHRR         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    OP_LE           reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    OP_GE           reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    LESS            reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    MORE            reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    INSTANCEOF      reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    OP_EQ           reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    OP_NE           reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    AND             reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    CARET           reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    VERTICAL        reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    OP_LAND         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    OP_LOR          reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    QUES            reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    RPAREN          reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    COMMA           reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    BRPAREN         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    EQUALS          reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    ASS_ADD         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    ASS_SUB         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    ASS_MUL         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    ASS_DIV         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    ASS_AND         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    ASS_OR          reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    ASS_XOR         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    ASS_MOD         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    ASS_SHL         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    ASS_SHRR        reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    ASS_SHR         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    FRPAREN         reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    COLON           reduce using rule 375 (identifierSuffix -> DOT CLASS .)
    SEMI            reduce using rule 375 (identifierSuffix -> DOT CLASS .)


state 354

    (367) primary -> THIS expt_42 identifierSuffix .

    OP_INC          reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    OP_DEC          reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    FLPAREN         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    DOT             reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    MULT            reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    SLASH           reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    PERCENT         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    PLUS            reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    DASH            reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    OP_SHR          reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    OP_SHL          reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    OP_SHRR         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    OP_LE           reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    OP_GE           reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    LESS            reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    MORE            reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    INSTANCEOF      reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    OP_EQ           reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    OP_NE           reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    AND             reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    CARET           reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    VERTICAL        reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    OP_LAND         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    OP_LOR          reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    QUES            reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    RPAREN          reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    COMMA           reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    BRPAREN         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    EQUALS          reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    ASS_ADD         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    ASS_SUB         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    ASS_MUL         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    ASS_DIV         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    ASS_AND         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    ASS_OR          reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    ASS_XOR         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    ASS_MOD         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    ASS_SHL         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    ASS_SHRR        reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    ASS_SHR         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    FRPAREN         reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    COLON           reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)
    SEMI            reduce using rule 367 (primary -> THIS expt_42 identifierSuffix .)


state 355

    (521) expt_42 -> expt_42 DOT . Identifier
    (375) identifierSuffix -> DOT . CLASS
    (376) identifierSuffix -> DOT . explicitGenericInvocation
    (377) identifierSuffix -> DOT . THIS
    (378) identifierSuffix -> DOT . SUPER arguments
    (379) identifierSuffix -> DOT . NEW innerCreator
    (390) explicitGenericInvocation -> . nonWildcardTypeArguments Identifier arguments
    (391) nonWildcardTypeArguments -> . LESS typeList MORE

    Identifier      shift and go to state 158
    CLASS           shift and go to state 353
    THIS            shift and go to state 348
    SUPER           shift and go to state 352
    NEW             shift and go to state 351
    LESS            shift and go to state 238

    explicitGenericInvocation      shift and go to state 349
    nonWildcardTypeArguments       shift and go to state 350

state 356

    (554) expt_64 -> OP_LAND inclusiveOrExpression .

    OP_LAND         reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    OP_LOR          reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    QUES            reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    RPAREN          reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    COMMA           reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    BRPAREN         reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    EQUALS          reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    ASS_ADD         reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    ASS_SUB         reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    ASS_MUL         reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    ASS_DIV         reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    ASS_AND         reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    ASS_OR          reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    ASS_XOR         reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    ASS_MOD         reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    ASS_SHL         reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    ASS_SHRR        reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    ASS_SHR         reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    FRPAREN         reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    COLON           reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)
    SEMI            reduce using rule 554 (expt_64 -> OP_LAND inclusiveOrExpression .)


state 357

    (555) expt_64 -> expt_64 OP_LAND . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 490
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    primary                        shift and go to state 125
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    relationalExpression           shift and go to state 107
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121

state 358

    (523) expt_44 -> expt_44 COMMA . elementValuePair
    (211) elementValuePair -> . Identifier EQUALS elementValue

    Identifier      shift and go to state 359

    elementValuePair               shift and go to state 491

state 359

    (211) elementValuePair -> Identifier . EQUALS elementValue

    EQUALS          shift and go to state 218


state 360

    (522) expt_44 -> COMMA elementValuePair .

    COMMA           reduce using rule 522 (expt_44 -> COMMA elementValuePair .)
    RPAREN          reduce using rule 522 (expt_44 -> COMMA elementValuePair .)


state 361

    (567) expt_71 -> expt_71 shiftOp . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    multiplicativeExpression       shift and go to state 145
    primary                        shift and go to state 125
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 492
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138

state 362

    (566) expt_71 -> shiftOp additiveExpression .

    OP_SHR          reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    OP_SHL          reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    OP_SHRR         reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    OP_LE           reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    OP_GE           reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    LESS            reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    MORE            reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    INSTANCEOF      reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    OP_EQ           reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    OP_NE           reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    AND             reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    CARET           reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    VERTICAL        reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    OP_LAND         reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    OP_LOR          reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    QUES            reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    RPAREN          reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    COMMA           reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    BRPAREN         reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    EQUALS          reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    ASS_ADD         reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    ASS_SUB         reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    ASS_MUL         reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    ASS_DIV         reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    ASS_AND         reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    ASS_OR          reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    ASS_XOR         reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    ASS_MOD         reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    ASS_SHL         reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    ASS_SHRR        reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    ASS_SHR         reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    FRPAREN         reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    COLON           reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)
    SEMI            reduce using rule 566 (expt_71 -> shiftOp additiveExpression .)


state 363

    (211) elementValuePair -> Identifier EQUALS elementValue .

    COMMA           reduce using rule 211 (elementValuePair -> Identifier EQUALS elementValue .)
    RPAREN          reduce using rule 211 (elementValuePair -> Identifier EQUALS elementValue .)


state 364

    (360) primary -> Identifier expt_42 identifierSuffix .

    OP_INC          reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    OP_DEC          reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    FLPAREN         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    DOT             reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    MULT            reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    SLASH           reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    PERCENT         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    PLUS            reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    DASH            reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    OP_SHR          reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    OP_SHL          reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    OP_SHRR         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    OP_LE           reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    OP_GE           reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    LESS            reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    MORE            reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    INSTANCEOF      reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    OP_EQ           reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    OP_NE           reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    AND             reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    CARET           reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    VERTICAL        reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    OP_LAND         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    OP_LOR          reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    QUES            reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    RPAREN          reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    COMMA           reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    BRPAREN         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    EQUALS          reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    ASS_ADD         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    ASS_SUB         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    ASS_MUL         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    ASS_DIV         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    ASS_AND         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    ASS_OR          reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    ASS_XOR         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    ASS_MOD         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    ASS_SHL         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    ASS_SHRR        reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    ASS_SHR         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    FRPAREN         reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    COLON           reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)
    SEMI            reduce using rule 360 (primary -> Identifier expt_42 identifierSuffix .)


state 365

    (558) expt_66 -> CARET andExpression .

    CARET           reduce using rule 558 (expt_66 -> CARET andExpression .)
    VERTICAL        reduce using rule 558 (expt_66 -> CARET andExpression .)
    OP_LAND         reduce using rule 558 (expt_66 -> CARET andExpression .)
    OP_LOR          reduce using rule 558 (expt_66 -> CARET andExpression .)
    QUES            reduce using rule 558 (expt_66 -> CARET andExpression .)
    RPAREN          reduce using rule 558 (expt_66 -> CARET andExpression .)
    COMMA           reduce using rule 558 (expt_66 -> CARET andExpression .)
    BRPAREN         reduce using rule 558 (expt_66 -> CARET andExpression .)
    EQUALS          reduce using rule 558 (expt_66 -> CARET andExpression .)
    ASS_ADD         reduce using rule 558 (expt_66 -> CARET andExpression .)
    ASS_SUB         reduce using rule 558 (expt_66 -> CARET andExpression .)
    ASS_MUL         reduce using rule 558 (expt_66 -> CARET andExpression .)
    ASS_DIV         reduce using rule 558 (expt_66 -> CARET andExpression .)
    ASS_AND         reduce using rule 558 (expt_66 -> CARET andExpression .)
    ASS_OR          reduce using rule 558 (expt_66 -> CARET andExpression .)
    ASS_XOR         reduce using rule 558 (expt_66 -> CARET andExpression .)
    ASS_MOD         reduce using rule 558 (expt_66 -> CARET andExpression .)
    ASS_SHL         reduce using rule 558 (expt_66 -> CARET andExpression .)
    ASS_SHRR        reduce using rule 558 (expt_66 -> CARET andExpression .)
    ASS_SHR         reduce using rule 558 (expt_66 -> CARET andExpression .)
    FRPAREN         reduce using rule 558 (expt_66 -> CARET andExpression .)
    COLON           reduce using rule 558 (expt_66 -> CARET andExpression .)
    SEMI            reduce using rule 558 (expt_66 -> CARET andExpression .)


state 366

    (559) expt_66 -> expt_66 CARET . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    multiplicativeExpression       shift and go to state 145
    primary                        shift and go to state 125
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    relationalExpression           shift and go to state 107
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 493

state 367

    (215) elementValueArrayInitializer -> BLPAREN expt_46 expt_30 . BRPAREN

    BRPAREN         shift and go to state 494


state 368

    (496) expt_30 -> COMMA .

    BRPAREN         reduce using rule 496 (expt_30 -> COMMA .)


state 369

    (216) elementValueArrayInitializer -> BLPAREN expt_46 empty . BRPAREN
    (497) expt_30 -> empty .

  ! shift/reduce conflict for BRPAREN resolved as shift
    BRPAREN         shift and go to state 495

  ! BRPAREN         [ reduce using rule 497 (expt_30 -> empty .) ]


state 370

    (217) elementValueArrayInitializer -> BLPAREN empty expt_30 . BRPAREN

    BRPAREN         shift and go to state 496


state 371

    (218) elementValueArrayInitializer -> BLPAREN empty empty . BRPAREN
    (497) expt_30 -> empty .

  ! shift/reduce conflict for BRPAREN resolved as shift
    BRPAREN         shift and go to state 497

  ! BRPAREN         [ reduce using rule 497 (expt_30 -> empty .) ]


state 372

    (527) expt_46 -> elementValue expt_45 .
    (525) expt_45 -> expt_45 . COMMA elementValue

  ! shift/reduce conflict for COMMA resolved as shift
    BRPAREN         reduce using rule 527 (expt_46 -> elementValue expt_45 .)
    COMMA           shift and go to state 498

  ! COMMA           [ reduce using rule 527 (expt_46 -> elementValue expt_45 .) ]


state 373

    (524) expt_45 -> COMMA . elementValue
    (212) elementValue -> . conditionalExpression
    (213) elementValue -> . annotation
    (214) elementValue -> . elementValueArrayInitializer
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (215) elementValueArrayInitializer -> . BLPAREN expt_46 expt_30 BRPAREN
    (216) elementValueArrayInitializer -> . BLPAREN expt_46 empty BRPAREN
    (217) elementValueArrayInitializer -> . BLPAREN empty expt_30 BRPAREN
    (218) elementValueArrayInitializer -> . BLPAREN empty empty BRPAREN
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    AT              shift and go to state 8
    BLPAREN         shift and go to state 122
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 133
    unaryExpression                shift and go to state 149
    exclusiveOrExpression          shift and go to state 105
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    annotation                     shift and go to state 153
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    elementValueArrayInitializer   shift and go to state 140
    andExpression                  shift and go to state 121
    elementValue                   shift and go to state 499

state 374

    (526) expt_45 -> empty .

    COMMA           reduce using rule 526 (expt_45 -> empty .)
    BRPAREN         reduce using rule 526 (expt_45 -> empty .)


state 375

    (560) expt_67 -> AND equalityExpression .

    AND             reduce using rule 560 (expt_67 -> AND equalityExpression .)
    CARET           reduce using rule 560 (expt_67 -> AND equalityExpression .)
    VERTICAL        reduce using rule 560 (expt_67 -> AND equalityExpression .)
    OP_LAND         reduce using rule 560 (expt_67 -> AND equalityExpression .)
    OP_LOR          reduce using rule 560 (expt_67 -> AND equalityExpression .)
    QUES            reduce using rule 560 (expt_67 -> AND equalityExpression .)
    RPAREN          reduce using rule 560 (expt_67 -> AND equalityExpression .)
    COMMA           reduce using rule 560 (expt_67 -> AND equalityExpression .)
    BRPAREN         reduce using rule 560 (expt_67 -> AND equalityExpression .)
    EQUALS          reduce using rule 560 (expt_67 -> AND equalityExpression .)
    ASS_ADD         reduce using rule 560 (expt_67 -> AND equalityExpression .)
    ASS_SUB         reduce using rule 560 (expt_67 -> AND equalityExpression .)
    ASS_MUL         reduce using rule 560 (expt_67 -> AND equalityExpression .)
    ASS_DIV         reduce using rule 560 (expt_67 -> AND equalityExpression .)
    ASS_AND         reduce using rule 560 (expt_67 -> AND equalityExpression .)
    ASS_OR          reduce using rule 560 (expt_67 -> AND equalityExpression .)
    ASS_XOR         reduce using rule 560 (expt_67 -> AND equalityExpression .)
    ASS_MOD         reduce using rule 560 (expt_67 -> AND equalityExpression .)
    ASS_SHL         reduce using rule 560 (expt_67 -> AND equalityExpression .)
    ASS_SHRR        reduce using rule 560 (expt_67 -> AND equalityExpression .)
    ASS_SHR         reduce using rule 560 (expt_67 -> AND equalityExpression .)
    FRPAREN         reduce using rule 560 (expt_67 -> AND equalityExpression .)
    COLON           reduce using rule 560 (expt_67 -> AND equalityExpression .)
    SEMI            reduce using rule 560 (expt_67 -> AND equalityExpression .)


state 376

    (561) expt_67 -> expt_67 AND . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 500
    multiplicativeExpression       shift and go to state 145
    primary                        shift and go to state 125
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    relationalExpression           shift and go to state 107
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138

state 377

    (312) conditionalExpression -> conditionalOrExpression QUES expression . COLON expression

    COLON           shift and go to state 501


state 378

    (392) selector -> FLPAREN expression . FRPAREN

    FRPAREN         shift and go to state 502


state 379

    (574) expt_74 -> expt_74 selector .

    OP_INC          reduce using rule 574 (expt_74 -> expt_74 selector .)
    OP_DEC          reduce using rule 574 (expt_74 -> expt_74 selector .)
    FLPAREN         reduce using rule 574 (expt_74 -> expt_74 selector .)
    DOT             reduce using rule 574 (expt_74 -> expt_74 selector .)
    MULT            reduce using rule 574 (expt_74 -> expt_74 selector .)
    SLASH           reduce using rule 574 (expt_74 -> expt_74 selector .)
    PERCENT         reduce using rule 574 (expt_74 -> expt_74 selector .)
    PLUS            reduce using rule 574 (expt_74 -> expt_74 selector .)
    DASH            reduce using rule 574 (expt_74 -> expt_74 selector .)
    OP_SHR          reduce using rule 574 (expt_74 -> expt_74 selector .)
    OP_SHL          reduce using rule 574 (expt_74 -> expt_74 selector .)
    OP_SHRR         reduce using rule 574 (expt_74 -> expt_74 selector .)
    OP_LE           reduce using rule 574 (expt_74 -> expt_74 selector .)
    OP_GE           reduce using rule 574 (expt_74 -> expt_74 selector .)
    LESS            reduce using rule 574 (expt_74 -> expt_74 selector .)
    MORE            reduce using rule 574 (expt_74 -> expt_74 selector .)
    INSTANCEOF      reduce using rule 574 (expt_74 -> expt_74 selector .)
    OP_EQ           reduce using rule 574 (expt_74 -> expt_74 selector .)
    OP_NE           reduce using rule 574 (expt_74 -> expt_74 selector .)
    AND             reduce using rule 574 (expt_74 -> expt_74 selector .)
    CARET           reduce using rule 574 (expt_74 -> expt_74 selector .)
    VERTICAL        reduce using rule 574 (expt_74 -> expt_74 selector .)
    OP_LAND         reduce using rule 574 (expt_74 -> expt_74 selector .)
    OP_LOR          reduce using rule 574 (expt_74 -> expt_74 selector .)
    QUES            reduce using rule 574 (expt_74 -> expt_74 selector .)
    RPAREN          reduce using rule 574 (expt_74 -> expt_74 selector .)
    COMMA           reduce using rule 574 (expt_74 -> expt_74 selector .)
    BRPAREN         reduce using rule 574 (expt_74 -> expt_74 selector .)
    EQUALS          reduce using rule 574 (expt_74 -> expt_74 selector .)
    ASS_ADD         reduce using rule 574 (expt_74 -> expt_74 selector .)
    ASS_SUB         reduce using rule 574 (expt_74 -> expt_74 selector .)
    ASS_MUL         reduce using rule 574 (expt_74 -> expt_74 selector .)
    ASS_DIV         reduce using rule 574 (expt_74 -> expt_74 selector .)
    ASS_AND         reduce using rule 574 (expt_74 -> expt_74 selector .)
    ASS_OR          reduce using rule 574 (expt_74 -> expt_74 selector .)
    ASS_XOR         reduce using rule 574 (expt_74 -> expt_74 selector .)
    ASS_MOD         reduce using rule 574 (expt_74 -> expt_74 selector .)
    ASS_SHL         reduce using rule 574 (expt_74 -> expt_74 selector .)
    ASS_SHRR        reduce using rule 574 (expt_74 -> expt_74 selector .)
    ASS_SHR         reduce using rule 574 (expt_74 -> expt_74 selector .)
    FRPAREN         reduce using rule 574 (expt_74 -> expt_74 selector .)
    COLON           reduce using rule 574 (expt_74 -> expt_74 selector .)
    SEMI            reduce using rule 574 (expt_74 -> expt_74 selector .)


state 380

    (348) unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .

    MULT            reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    SLASH           reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    PERCENT         reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    PLUS            reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    DASH            reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    OP_SHR          reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    OP_SHL          reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    OP_SHRR         reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    OP_LE           reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    OP_GE           reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    LESS            reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    MORE            reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    INSTANCEOF      reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    OP_EQ           reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    OP_NE           reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    AND             reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    CARET           reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    VERTICAL        reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    OP_LAND         reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    OP_LOR          reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    QUES            reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    EQUALS          reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    ASS_ADD         reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    ASS_SUB         reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    ASS_MUL         reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    ASS_DIV         reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    ASS_AND         reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    ASS_OR          reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    ASS_XOR         reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    ASS_MOD         reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    ASS_SHL         reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    ASS_SHRR        reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    ASS_SHR         reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    FRPAREN         reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    RPAREN          reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    COMMA           reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    BRPAREN         reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    COLON           reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)
    SEMI            reduce using rule 348 (unaryExpressionNotPlusMinus -> primary expt_74 expr_14 .)


state 381

    (395) selector -> DOT THIS .

    OP_INC          reduce using rule 395 (selector -> DOT THIS .)
    OP_DEC          reduce using rule 395 (selector -> DOT THIS .)
    FLPAREN         reduce using rule 395 (selector -> DOT THIS .)
    DOT             reduce using rule 395 (selector -> DOT THIS .)
    MULT            reduce using rule 395 (selector -> DOT THIS .)
    SLASH           reduce using rule 395 (selector -> DOT THIS .)
    PERCENT         reduce using rule 395 (selector -> DOT THIS .)
    PLUS            reduce using rule 395 (selector -> DOT THIS .)
    DASH            reduce using rule 395 (selector -> DOT THIS .)
    OP_SHR          reduce using rule 395 (selector -> DOT THIS .)
    OP_SHL          reduce using rule 395 (selector -> DOT THIS .)
    OP_SHRR         reduce using rule 395 (selector -> DOT THIS .)
    OP_LE           reduce using rule 395 (selector -> DOT THIS .)
    OP_GE           reduce using rule 395 (selector -> DOT THIS .)
    LESS            reduce using rule 395 (selector -> DOT THIS .)
    MORE            reduce using rule 395 (selector -> DOT THIS .)
    INSTANCEOF      reduce using rule 395 (selector -> DOT THIS .)
    OP_EQ           reduce using rule 395 (selector -> DOT THIS .)
    OP_NE           reduce using rule 395 (selector -> DOT THIS .)
    AND             reduce using rule 395 (selector -> DOT THIS .)
    CARET           reduce using rule 395 (selector -> DOT THIS .)
    VERTICAL        reduce using rule 395 (selector -> DOT THIS .)
    OP_LAND         reduce using rule 395 (selector -> DOT THIS .)
    OP_LOR          reduce using rule 395 (selector -> DOT THIS .)
    QUES            reduce using rule 395 (selector -> DOT THIS .)
    RPAREN          reduce using rule 395 (selector -> DOT THIS .)
    COMMA           reduce using rule 395 (selector -> DOT THIS .)
    BRPAREN         reduce using rule 395 (selector -> DOT THIS .)
    EQUALS          reduce using rule 395 (selector -> DOT THIS .)
    ASS_ADD         reduce using rule 395 (selector -> DOT THIS .)
    ASS_SUB         reduce using rule 395 (selector -> DOT THIS .)
    ASS_MUL         reduce using rule 395 (selector -> DOT THIS .)
    ASS_DIV         reduce using rule 395 (selector -> DOT THIS .)
    ASS_AND         reduce using rule 395 (selector -> DOT THIS .)
    ASS_OR          reduce using rule 395 (selector -> DOT THIS .)
    ASS_XOR         reduce using rule 395 (selector -> DOT THIS .)
    ASS_MOD         reduce using rule 395 (selector -> DOT THIS .)
    ASS_SHL         reduce using rule 395 (selector -> DOT THIS .)
    ASS_SHRR        reduce using rule 395 (selector -> DOT THIS .)
    ASS_SHR         reduce using rule 395 (selector -> DOT THIS .)
    FRPAREN         reduce using rule 395 (selector -> DOT THIS .)
    COLON           reduce using rule 395 (selector -> DOT THIS .)
    SEMI            reduce using rule 395 (selector -> DOT THIS .)


state 382

    (394) selector -> DOT SUPER . superSuffix
    (398) superSuffix -> . DOT Identifier expt_18
    (399) superSuffix -> . DOT Identifier empty
    (400) superSuffix -> . arguments
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

    DOT             shift and go to state 271
    LPAREN          shift and go to state 204

    superSuffix                    shift and go to state 503
    arguments                      shift and go to state 272

state 383

    (393) selector -> DOT NEW . innerCreator
    (385) innerCreator -> . expt_41 Identifier classCreatorRest
    (386) innerCreator -> . empty Identifier classCreatorRest
    (518) expt_41 -> . nonWildcardTypeArguments
    (519) expt_41 -> . empty
    (584) empty -> .
    (391) nonWildcardTypeArguments -> . LESS typeList MORE

    Identifier      reduce using rule 584 (empty -> .)
    LESS            shift and go to state 238

    innerCreator                   shift and go to state 504
    nonWildcardTypeArguments       shift and go to state 486
    expt_41                        shift and go to state 488
    empty                          shift and go to state 487

state 384

    (396) selector -> DOT Identifier . expt_18
    (397) selector -> DOT Identifier . empty
    (474) expt_18 -> . arguments
    (475) expt_18 -> . empty
    (584) empty -> .
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

    OP_INC          reduce using rule 584 (empty -> .)
    OP_DEC          reduce using rule 584 (empty -> .)
    FLPAREN         reduce using rule 584 (empty -> .)
    DOT             reduce using rule 584 (empty -> .)
    MULT            reduce using rule 584 (empty -> .)
    SLASH           reduce using rule 584 (empty -> .)
    PERCENT         reduce using rule 584 (empty -> .)
    PLUS            reduce using rule 584 (empty -> .)
    DASH            reduce using rule 584 (empty -> .)
    OP_SHR          reduce using rule 584 (empty -> .)
    OP_SHL          reduce using rule 584 (empty -> .)
    OP_SHRR         reduce using rule 584 (empty -> .)
    OP_LE           reduce using rule 584 (empty -> .)
    OP_GE           reduce using rule 584 (empty -> .)
    LESS            reduce using rule 584 (empty -> .)
    MORE            reduce using rule 584 (empty -> .)
    INSTANCEOF      reduce using rule 584 (empty -> .)
    OP_EQ           reduce using rule 584 (empty -> .)
    OP_NE           reduce using rule 584 (empty -> .)
    AND             reduce using rule 584 (empty -> .)
    CARET           reduce using rule 584 (empty -> .)
    VERTICAL        reduce using rule 584 (empty -> .)
    OP_LAND         reduce using rule 584 (empty -> .)
    OP_LOR          reduce using rule 584 (empty -> .)
    QUES            reduce using rule 584 (empty -> .)
    RPAREN          reduce using rule 584 (empty -> .)
    COMMA           reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)
    EQUALS          reduce using rule 584 (empty -> .)
    ASS_ADD         reduce using rule 584 (empty -> .)
    ASS_SUB         reduce using rule 584 (empty -> .)
    ASS_MUL         reduce using rule 584 (empty -> .)
    ASS_DIV         reduce using rule 584 (empty -> .)
    ASS_AND         reduce using rule 584 (empty -> .)
    ASS_OR          reduce using rule 584 (empty -> .)
    ASS_XOR         reduce using rule 584 (empty -> .)
    ASS_MOD         reduce using rule 584 (empty -> .)
    ASS_SHL         reduce using rule 584 (empty -> .)
    ASS_SHRR        reduce using rule 584 (empty -> .)
    ASS_SHR         reduce using rule 584 (empty -> .)
    FRPAREN         reduce using rule 584 (empty -> .)
    COLON           reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)
    LPAREN          shift and go to state 204

    empty                          shift and go to state 506
    expt_18                        shift and go to state 505
    arguments                      shift and go to state 441

state 385

    (391) nonWildcardTypeArguments -> LESS typeList . MORE

    MORE            shift and go to state 507


state 386

    (380) creator -> nonWildcardTypeArguments createdName . classCreatorRest
    (388) classCreatorRest -> . arguments
    (389) classCreatorRest -> . arguments classBody
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

    LPAREN          shift and go to state 204

    classCreatorRest               shift and go to state 508
    arguments                      shift and go to state 390

state 387

    (387) arrayCreatorRest -> FLPAREN . expr_19
    (437) expr_19 -> . FRPAREN expt_24 arrayInitializer
    (438) expr_19 -> . expression FRPAREN expt_76 expt_24
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    FRPAREN         shift and go to state 510
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    expr_19                        shift and go to state 511
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 509

state 388

    (381) creator -> createdName classCreatorRest .

    OP_INC          reduce using rule 381 (creator -> createdName classCreatorRest .)
    OP_DEC          reduce using rule 381 (creator -> createdName classCreatorRest .)
    FLPAREN         reduce using rule 381 (creator -> createdName classCreatorRest .)
    DOT             reduce using rule 381 (creator -> createdName classCreatorRest .)
    MULT            reduce using rule 381 (creator -> createdName classCreatorRest .)
    SLASH           reduce using rule 381 (creator -> createdName classCreatorRest .)
    PERCENT         reduce using rule 381 (creator -> createdName classCreatorRest .)
    PLUS            reduce using rule 381 (creator -> createdName classCreatorRest .)
    DASH            reduce using rule 381 (creator -> createdName classCreatorRest .)
    OP_SHR          reduce using rule 381 (creator -> createdName classCreatorRest .)
    OP_SHL          reduce using rule 381 (creator -> createdName classCreatorRest .)
    OP_SHRR         reduce using rule 381 (creator -> createdName classCreatorRest .)
    OP_LE           reduce using rule 381 (creator -> createdName classCreatorRest .)
    OP_GE           reduce using rule 381 (creator -> createdName classCreatorRest .)
    LESS            reduce using rule 381 (creator -> createdName classCreatorRest .)
    MORE            reduce using rule 381 (creator -> createdName classCreatorRest .)
    INSTANCEOF      reduce using rule 381 (creator -> createdName classCreatorRest .)
    OP_EQ           reduce using rule 381 (creator -> createdName classCreatorRest .)
    OP_NE           reduce using rule 381 (creator -> createdName classCreatorRest .)
    AND             reduce using rule 381 (creator -> createdName classCreatorRest .)
    CARET           reduce using rule 381 (creator -> createdName classCreatorRest .)
    VERTICAL        reduce using rule 381 (creator -> createdName classCreatorRest .)
    OP_LAND         reduce using rule 381 (creator -> createdName classCreatorRest .)
    OP_LOR          reduce using rule 381 (creator -> createdName classCreatorRest .)
    QUES            reduce using rule 381 (creator -> createdName classCreatorRest .)
    RPAREN          reduce using rule 381 (creator -> createdName classCreatorRest .)
    COMMA           reduce using rule 381 (creator -> createdName classCreatorRest .)
    BRPAREN         reduce using rule 381 (creator -> createdName classCreatorRest .)
    EQUALS          reduce using rule 381 (creator -> createdName classCreatorRest .)
    ASS_ADD         reduce using rule 381 (creator -> createdName classCreatorRest .)
    ASS_SUB         reduce using rule 381 (creator -> createdName classCreatorRest .)
    ASS_MUL         reduce using rule 381 (creator -> createdName classCreatorRest .)
    ASS_DIV         reduce using rule 381 (creator -> createdName classCreatorRest .)
    ASS_AND         reduce using rule 381 (creator -> createdName classCreatorRest .)
    ASS_OR          reduce using rule 381 (creator -> createdName classCreatorRest .)
    ASS_XOR         reduce using rule 381 (creator -> createdName classCreatorRest .)
    ASS_MOD         reduce using rule 381 (creator -> createdName classCreatorRest .)
    ASS_SHL         reduce using rule 381 (creator -> createdName classCreatorRest .)
    ASS_SHRR        reduce using rule 381 (creator -> createdName classCreatorRest .)
    ASS_SHR         reduce using rule 381 (creator -> createdName classCreatorRest .)
    FRPAREN         reduce using rule 381 (creator -> createdName classCreatorRest .)
    COLON           reduce using rule 381 (creator -> createdName classCreatorRest .)
    SEMI            reduce using rule 381 (creator -> createdName classCreatorRest .)


state 389

    (382) creator -> createdName arrayCreatorRest .

    OP_INC          reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    OP_DEC          reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    FLPAREN         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    DOT             reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    MULT            reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    SLASH           reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    PERCENT         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    PLUS            reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    DASH            reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    OP_SHR          reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    OP_SHL          reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    OP_SHRR         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    OP_LE           reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    OP_GE           reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    LESS            reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    MORE            reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    INSTANCEOF      reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    OP_EQ           reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    OP_NE           reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    AND             reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    CARET           reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    VERTICAL        reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    OP_LAND         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    OP_LOR          reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    QUES            reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    RPAREN          reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    COMMA           reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    BRPAREN         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    EQUALS          reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    ASS_ADD         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    ASS_SUB         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    ASS_MUL         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    ASS_DIV         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    ASS_AND         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    ASS_OR          reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    ASS_XOR         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    ASS_MOD         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    ASS_SHL         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    ASS_SHRR        reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    ASS_SHR         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    FRPAREN         reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    COLON           reduce using rule 382 (creator -> createdName arrayCreatorRest .)
    SEMI            reduce using rule 382 (creator -> createdName arrayCreatorRest .)


state 390

    (388) classCreatorRest -> arguments .
    (389) classCreatorRest -> arguments . classBody
    (77) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (78) classBody -> . BLPAREN BRPAREN

    OP_INC          reduce using rule 388 (classCreatorRest -> arguments .)
    OP_DEC          reduce using rule 388 (classCreatorRest -> arguments .)
    FLPAREN         reduce using rule 388 (classCreatorRest -> arguments .)
    DOT             reduce using rule 388 (classCreatorRest -> arguments .)
    MULT            reduce using rule 388 (classCreatorRest -> arguments .)
    SLASH           reduce using rule 388 (classCreatorRest -> arguments .)
    PERCENT         reduce using rule 388 (classCreatorRest -> arguments .)
    PLUS            reduce using rule 388 (classCreatorRest -> arguments .)
    DASH            reduce using rule 388 (classCreatorRest -> arguments .)
    OP_SHR          reduce using rule 388 (classCreatorRest -> arguments .)
    OP_SHL          reduce using rule 388 (classCreatorRest -> arguments .)
    OP_SHRR         reduce using rule 388 (classCreatorRest -> arguments .)
    OP_LE           reduce using rule 388 (classCreatorRest -> arguments .)
    OP_GE           reduce using rule 388 (classCreatorRest -> arguments .)
    LESS            reduce using rule 388 (classCreatorRest -> arguments .)
    MORE            reduce using rule 388 (classCreatorRest -> arguments .)
    INSTANCEOF      reduce using rule 388 (classCreatorRest -> arguments .)
    OP_EQ           reduce using rule 388 (classCreatorRest -> arguments .)
    OP_NE           reduce using rule 388 (classCreatorRest -> arguments .)
    AND             reduce using rule 388 (classCreatorRest -> arguments .)
    CARET           reduce using rule 388 (classCreatorRest -> arguments .)
    VERTICAL        reduce using rule 388 (classCreatorRest -> arguments .)
    OP_LAND         reduce using rule 388 (classCreatorRest -> arguments .)
    OP_LOR          reduce using rule 388 (classCreatorRest -> arguments .)
    QUES            reduce using rule 388 (classCreatorRest -> arguments .)
    RPAREN          reduce using rule 388 (classCreatorRest -> arguments .)
    COMMA           reduce using rule 388 (classCreatorRest -> arguments .)
    BRPAREN         reduce using rule 388 (classCreatorRest -> arguments .)
    EQUALS          reduce using rule 388 (classCreatorRest -> arguments .)
    ASS_ADD         reduce using rule 388 (classCreatorRest -> arguments .)
    ASS_SUB         reduce using rule 388 (classCreatorRest -> arguments .)
    ASS_MUL         reduce using rule 388 (classCreatorRest -> arguments .)
    ASS_DIV         reduce using rule 388 (classCreatorRest -> arguments .)
    ASS_AND         reduce using rule 388 (classCreatorRest -> arguments .)
    ASS_OR          reduce using rule 388 (classCreatorRest -> arguments .)
    ASS_XOR         reduce using rule 388 (classCreatorRest -> arguments .)
    ASS_MOD         reduce using rule 388 (classCreatorRest -> arguments .)
    ASS_SHL         reduce using rule 388 (classCreatorRest -> arguments .)
    ASS_SHRR        reduce using rule 388 (classCreatorRest -> arguments .)
    ASS_SHR         reduce using rule 388 (classCreatorRest -> arguments .)
    FRPAREN         reduce using rule 388 (classCreatorRest -> arguments .)
    COLON           reduce using rule 388 (classCreatorRest -> arguments .)
    SEMI            reduce using rule 388 (classCreatorRest -> arguments .)
    BLPAREN         shift and go to state 439

    classBody                      shift and go to state 512

state 391

    (485) expt_24 -> expt_24 FLPAREN . FRPAREN

    FRPAREN         shift and go to state 513


state 392

    (358) primary -> primitiveType expt_24 DOT . CLASS

    CLASS           shift and go to state 514


state 393

    (484) expt_24 -> FLPAREN FRPAREN .

    FLPAREN         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    COMMA           reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    BLPAREN         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    IMPLEMENTS      reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    OP_EQ           reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    OP_NE           reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    AND             reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    CARET           reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    VERTICAL        reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    OP_LAND         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    OP_LOR          reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    QUES            reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    RPAREN          reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    BRPAREN         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    EQUALS          reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    ASS_ADD         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    ASS_SUB         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    ASS_MUL         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    ASS_DIV         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    ASS_AND         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    ASS_OR          reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    ASS_XOR         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    ASS_MOD         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    ASS_SHL         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    ASS_SHRR        reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    ASS_SHR         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    FRPAREN         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    COLON           reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    SEMI            reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    MORE            reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    Identifier      reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    OP_ARRAY        reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    THROWS          reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    DOT             reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    OP_INC          reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    OP_DEC          reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    MULT            reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    SLASH           reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    PERCENT         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    PLUS            reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    DASH            reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    OP_SHR          reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    OP_SHL          reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    OP_SHRR         reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    OP_LE           reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    OP_GE           reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    LESS            reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)
    INSTANCEOF      reduce using rule 484 (expt_24 -> FLPAREN FRPAREN .)


state 394

    (359) primary -> primitiveType DOT CLASS .

    OP_INC          reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    OP_DEC          reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    FLPAREN         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    DOT             reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    MULT            reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    SLASH           reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    PERCENT         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    PLUS            reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    DASH            reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    OP_SHR          reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    OP_SHL          reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    OP_SHRR         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    OP_LE           reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    OP_GE           reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    LESS            reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    MORE            reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    INSTANCEOF      reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    OP_EQ           reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    OP_NE           reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    AND             reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    CARET           reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    VERTICAL        reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    OP_LAND         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    OP_LOR          reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    QUES            reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    RPAREN          reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    COMMA           reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    BRPAREN         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    EQUALS          reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    ASS_ADD         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    ASS_SUB         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    ASS_MUL         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    ASS_DIV         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    ASS_AND         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    ASS_OR          reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    ASS_XOR         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    ASS_MOD         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    ASS_SHL         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    ASS_SHRR        reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    ASS_SHR         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    FRPAREN         reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    COLON           reduce using rule 359 (primary -> primitiveType DOT CLASS .)
    SEMI            reduce using rule 359 (primary -> primitiveType DOT CLASS .)


state 395

    (569) expt_72 -> expt_72 expr_12 . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    multiplicativeExpression       shift and go to state 515
    primary                        shift and go to state 125
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138

state 396

    (568) expt_72 -> expr_12 multiplicativeExpression .

    PLUS            reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    DASH            reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    OP_SHR          reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    OP_SHL          reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    OP_SHRR         reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    OP_LE           reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    OP_GE           reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    LESS            reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    MORE            reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    INSTANCEOF      reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    OP_EQ           reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    OP_NE           reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    AND             reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    CARET           reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    VERTICAL        reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    OP_LAND         reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    OP_LOR          reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    QUES            reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    RPAREN          reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    COMMA           reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    BRPAREN         reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    EQUALS          reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    ASS_ADD         reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    ASS_SUB         reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    ASS_MUL         reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    ASS_DIV         reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    ASS_AND         reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    ASS_OR          reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    ASS_XOR         reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    ASS_MOD         reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    ASS_SHL         reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    ASS_SHRR        reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    ASS_SHR         reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    FRPAREN         reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    COLON           reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)
    SEMI            reduce using rule 568 (expt_72 -> expr_12 multiplicativeExpression .)


state 397

    (565) expt_70 -> expt_70 relationalOp . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    multiplicativeExpression       shift and go to state 145
    primary                        shift and go to state 125
    shiftExpression                shift and go to state 516
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    unaryExpression                shift and go to state 149
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138

state 398

    (564) expt_70 -> relationalOp shiftExpression .

    OP_LE           reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    OP_GE           reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    LESS            reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    MORE            reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    INSTANCEOF      reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    OP_EQ           reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    OP_NE           reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    AND             reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    CARET           reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    VERTICAL        reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    OP_LAND         reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    OP_LOR          reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    QUES            reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    RPAREN          reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    COMMA           reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    BRPAREN         reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    EQUALS          reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    ASS_ADD         reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    ASS_SUB         reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    ASS_MUL         reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    ASS_DIV         reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    ASS_AND         reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    ASS_OR          reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    ASS_XOR         reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    ASS_MOD         reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    ASS_SHL         reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    ASS_SHRR        reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    ASS_SHR         reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    FRPAREN         reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    COLON           reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)
    SEMI            reduce using rule 564 (expt_70 -> relationalOp shiftExpression .)


state 399

    (572) expt_73 -> expt_73 sub_expt_73 .

    MULT            reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    SLASH           reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    PERCENT         reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    PLUS            reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    DASH            reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    OP_SHR          reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    OP_SHL          reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    OP_SHRR         reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    OP_LE           reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    OP_GE           reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    LESS            reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    MORE            reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    INSTANCEOF      reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    OP_EQ           reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    OP_NE           reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    AND             reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    CARET           reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    VERTICAL        reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    OP_LAND         reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    OP_LOR          reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    QUES            reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    RPAREN          reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    COMMA           reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    BRPAREN         reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    EQUALS          reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    ASS_ADD         reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    ASS_SUB         reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    ASS_MUL         reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    ASS_DIV         reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    ASS_AND         reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    ASS_OR          reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    ASS_XOR         reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    ASS_MOD         reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    ASS_SHL         reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    ASS_SHRR        reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    ASS_SHR         reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    FRPAREN         reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    COLON           reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)
    SEMI            reduce using rule 572 (expt_73 -> expt_73 sub_expt_73 .)


state 400

    (570) sub_expt_73 -> expr_13 unaryExpression .

    MULT            reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    SLASH           reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    PERCENT         reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    PLUS            reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    DASH            reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    OP_SHR          reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    OP_SHL          reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    OP_SHRR         reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    OP_LE           reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    OP_GE           reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    LESS            reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    MORE            reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    INSTANCEOF      reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    OP_EQ           reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    OP_NE           reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    AND             reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    CARET           reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    VERTICAL        reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    OP_LAND         reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    OP_LOR          reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    QUES            reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    RPAREN          reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    COMMA           reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    BRPAREN         reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    EQUALS          reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    ASS_ADD         reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    ASS_SUB         reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    ASS_MUL         reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    ASS_DIV         reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    ASS_AND         reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    ASS_OR          reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    ASS_XOR         reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    ASS_MOD         reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    ASS_SHL         reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    ASS_SHRR        reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    ASS_SHR         reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    FRPAREN         reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    COLON           reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)
    SEMI            reduce using rule 570 (sub_expt_73 -> expr_13 unaryExpression .)


state 401

    (304) assignmentOperator -> ASS_DIV .

    PLUS            reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    DASH            reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    OP_INC          reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    OP_DEC          reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    EXCLAMATION     reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    TILDE           reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    VOID            reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    Identifier      reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    NEW             reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    SUPER           reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    THIS            reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    LPAREN          reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    BOOLEAN         reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    CHAR            reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    BYTE            reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    SHORT           reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    INT             reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    LONG            reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    FLOAT           reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    DOUBLE          reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    CharacterLiteral reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    StringLiteral   reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    NULL            reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    NUMBER          reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    HEX_NUMBER      reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    LONG_NUMBER     reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    LONG_HEX_NUMBER reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    NON_INTEGER_1   reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    NON_INTEGER_2   reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    NON_INTEGER_3   reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    TRUE            reduce using rule 304 (assignmentOperator -> ASS_DIV .)
    FALSE           reduce using rule 304 (assignmentOperator -> ASS_DIV .)


state 402

    (301) assignmentOperator -> ASS_ADD .

    PLUS            reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    DASH            reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    OP_INC          reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    OP_DEC          reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    EXCLAMATION     reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    TILDE           reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    VOID            reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    Identifier      reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    NEW             reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    SUPER           reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    THIS            reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    LPAREN          reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    BOOLEAN         reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    CHAR            reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    BYTE            reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    SHORT           reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    INT             reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    LONG            reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    FLOAT           reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    DOUBLE          reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    CharacterLiteral reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    StringLiteral   reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    NULL            reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    NUMBER          reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    HEX_NUMBER      reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    LONG_NUMBER     reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    LONG_HEX_NUMBER reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    NON_INTEGER_1   reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    NON_INTEGER_2   reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    NON_INTEGER_3   reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    TRUE            reduce using rule 301 (assignmentOperator -> ASS_ADD .)
    FALSE           reduce using rule 301 (assignmentOperator -> ASS_ADD .)


state 403

    (307) assignmentOperator -> ASS_XOR .

    PLUS            reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    DASH            reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    OP_INC          reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    OP_DEC          reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    EXCLAMATION     reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    TILDE           reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    VOID            reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    Identifier      reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    NEW             reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    SUPER           reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    THIS            reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    LPAREN          reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    BOOLEAN         reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    CHAR            reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    BYTE            reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    SHORT           reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    INT             reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    LONG            reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    FLOAT           reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    DOUBLE          reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    CharacterLiteral reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    StringLiteral   reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    NULL            reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    NUMBER          reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    HEX_NUMBER      reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    LONG_NUMBER     reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    LONG_HEX_NUMBER reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    NON_INTEGER_1   reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    NON_INTEGER_2   reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    NON_INTEGER_3   reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    TRUE            reduce using rule 307 (assignmentOperator -> ASS_XOR .)
    FALSE           reduce using rule 307 (assignmentOperator -> ASS_XOR .)


state 404

    (310) assignmentOperator -> ASS_SHRR .

    PLUS            reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    DASH            reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    OP_INC          reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    OP_DEC          reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    EXCLAMATION     reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    TILDE           reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    VOID            reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    Identifier      reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    NEW             reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    SUPER           reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    THIS            reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    LPAREN          reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    BOOLEAN         reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    CHAR            reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    BYTE            reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    SHORT           reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    INT             reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    LONG            reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    FLOAT           reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    DOUBLE          reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    CharacterLiteral reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    StringLiteral   reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    NULL            reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    NUMBER          reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    HEX_NUMBER      reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    LONG_NUMBER     reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    LONG_HEX_NUMBER reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    NON_INTEGER_1   reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    NON_INTEGER_2   reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    NON_INTEGER_3   reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    TRUE            reduce using rule 310 (assignmentOperator -> ASS_SHRR .)
    FALSE           reduce using rule 310 (assignmentOperator -> ASS_SHRR .)


state 405

    (306) assignmentOperator -> ASS_OR .

    PLUS            reduce using rule 306 (assignmentOperator -> ASS_OR .)
    DASH            reduce using rule 306 (assignmentOperator -> ASS_OR .)
    OP_INC          reduce using rule 306 (assignmentOperator -> ASS_OR .)
    OP_DEC          reduce using rule 306 (assignmentOperator -> ASS_OR .)
    EXCLAMATION     reduce using rule 306 (assignmentOperator -> ASS_OR .)
    TILDE           reduce using rule 306 (assignmentOperator -> ASS_OR .)
    VOID            reduce using rule 306 (assignmentOperator -> ASS_OR .)
    Identifier      reduce using rule 306 (assignmentOperator -> ASS_OR .)
    NEW             reduce using rule 306 (assignmentOperator -> ASS_OR .)
    SUPER           reduce using rule 306 (assignmentOperator -> ASS_OR .)
    THIS            reduce using rule 306 (assignmentOperator -> ASS_OR .)
    LPAREN          reduce using rule 306 (assignmentOperator -> ASS_OR .)
    BOOLEAN         reduce using rule 306 (assignmentOperator -> ASS_OR .)
    CHAR            reduce using rule 306 (assignmentOperator -> ASS_OR .)
    BYTE            reduce using rule 306 (assignmentOperator -> ASS_OR .)
    SHORT           reduce using rule 306 (assignmentOperator -> ASS_OR .)
    INT             reduce using rule 306 (assignmentOperator -> ASS_OR .)
    LONG            reduce using rule 306 (assignmentOperator -> ASS_OR .)
    FLOAT           reduce using rule 306 (assignmentOperator -> ASS_OR .)
    DOUBLE          reduce using rule 306 (assignmentOperator -> ASS_OR .)
    CharacterLiteral reduce using rule 306 (assignmentOperator -> ASS_OR .)
    StringLiteral   reduce using rule 306 (assignmentOperator -> ASS_OR .)
    NULL            reduce using rule 306 (assignmentOperator -> ASS_OR .)
    NUMBER          reduce using rule 306 (assignmentOperator -> ASS_OR .)
    HEX_NUMBER      reduce using rule 306 (assignmentOperator -> ASS_OR .)
    LONG_NUMBER     reduce using rule 306 (assignmentOperator -> ASS_OR .)
    LONG_HEX_NUMBER reduce using rule 306 (assignmentOperator -> ASS_OR .)
    NON_INTEGER_1   reduce using rule 306 (assignmentOperator -> ASS_OR .)
    NON_INTEGER_2   reduce using rule 306 (assignmentOperator -> ASS_OR .)
    NON_INTEGER_3   reduce using rule 306 (assignmentOperator -> ASS_OR .)
    TRUE            reduce using rule 306 (assignmentOperator -> ASS_OR .)
    FALSE           reduce using rule 306 (assignmentOperator -> ASS_OR .)


state 406

    (298) expression -> conditionalExpression assignmentOperator . expression
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 517

state 407

    (300) assignmentOperator -> EQUALS .

    PLUS            reduce using rule 300 (assignmentOperator -> EQUALS .)
    DASH            reduce using rule 300 (assignmentOperator -> EQUALS .)
    OP_INC          reduce using rule 300 (assignmentOperator -> EQUALS .)
    OP_DEC          reduce using rule 300 (assignmentOperator -> EQUALS .)
    EXCLAMATION     reduce using rule 300 (assignmentOperator -> EQUALS .)
    TILDE           reduce using rule 300 (assignmentOperator -> EQUALS .)
    VOID            reduce using rule 300 (assignmentOperator -> EQUALS .)
    Identifier      reduce using rule 300 (assignmentOperator -> EQUALS .)
    NEW             reduce using rule 300 (assignmentOperator -> EQUALS .)
    SUPER           reduce using rule 300 (assignmentOperator -> EQUALS .)
    THIS            reduce using rule 300 (assignmentOperator -> EQUALS .)
    LPAREN          reduce using rule 300 (assignmentOperator -> EQUALS .)
    BOOLEAN         reduce using rule 300 (assignmentOperator -> EQUALS .)
    CHAR            reduce using rule 300 (assignmentOperator -> EQUALS .)
    BYTE            reduce using rule 300 (assignmentOperator -> EQUALS .)
    SHORT           reduce using rule 300 (assignmentOperator -> EQUALS .)
    INT             reduce using rule 300 (assignmentOperator -> EQUALS .)
    LONG            reduce using rule 300 (assignmentOperator -> EQUALS .)
    FLOAT           reduce using rule 300 (assignmentOperator -> EQUALS .)
    DOUBLE          reduce using rule 300 (assignmentOperator -> EQUALS .)
    CharacterLiteral reduce using rule 300 (assignmentOperator -> EQUALS .)
    StringLiteral   reduce using rule 300 (assignmentOperator -> EQUALS .)
    NULL            reduce using rule 300 (assignmentOperator -> EQUALS .)
    NUMBER          reduce using rule 300 (assignmentOperator -> EQUALS .)
    HEX_NUMBER      reduce using rule 300 (assignmentOperator -> EQUALS .)
    LONG_NUMBER     reduce using rule 300 (assignmentOperator -> EQUALS .)
    LONG_HEX_NUMBER reduce using rule 300 (assignmentOperator -> EQUALS .)
    NON_INTEGER_1   reduce using rule 300 (assignmentOperator -> EQUALS .)
    NON_INTEGER_2   reduce using rule 300 (assignmentOperator -> EQUALS .)
    NON_INTEGER_3   reduce using rule 300 (assignmentOperator -> EQUALS .)
    TRUE            reduce using rule 300 (assignmentOperator -> EQUALS .)
    FALSE           reduce using rule 300 (assignmentOperator -> EQUALS .)


state 408

    (303) assignmentOperator -> ASS_MUL .

    PLUS            reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    DASH            reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    OP_INC          reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    OP_DEC          reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    EXCLAMATION     reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    TILDE           reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    VOID            reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    Identifier      reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    NEW             reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    SUPER           reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    THIS            reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    LPAREN          reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    BOOLEAN         reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    CHAR            reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    BYTE            reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    SHORT           reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    INT             reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    LONG            reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    FLOAT           reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    DOUBLE          reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    CharacterLiteral reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    StringLiteral   reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    NULL            reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    NUMBER          reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    HEX_NUMBER      reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    LONG_NUMBER     reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    LONG_HEX_NUMBER reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    NON_INTEGER_1   reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    NON_INTEGER_2   reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    NON_INTEGER_3   reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    TRUE            reduce using rule 303 (assignmentOperator -> ASS_MUL .)
    FALSE           reduce using rule 303 (assignmentOperator -> ASS_MUL .)


state 409

    (305) assignmentOperator -> ASS_AND .

    PLUS            reduce using rule 305 (assignmentOperator -> ASS_AND .)
    DASH            reduce using rule 305 (assignmentOperator -> ASS_AND .)
    OP_INC          reduce using rule 305 (assignmentOperator -> ASS_AND .)
    OP_DEC          reduce using rule 305 (assignmentOperator -> ASS_AND .)
    EXCLAMATION     reduce using rule 305 (assignmentOperator -> ASS_AND .)
    TILDE           reduce using rule 305 (assignmentOperator -> ASS_AND .)
    VOID            reduce using rule 305 (assignmentOperator -> ASS_AND .)
    Identifier      reduce using rule 305 (assignmentOperator -> ASS_AND .)
    NEW             reduce using rule 305 (assignmentOperator -> ASS_AND .)
    SUPER           reduce using rule 305 (assignmentOperator -> ASS_AND .)
    THIS            reduce using rule 305 (assignmentOperator -> ASS_AND .)
    LPAREN          reduce using rule 305 (assignmentOperator -> ASS_AND .)
    BOOLEAN         reduce using rule 305 (assignmentOperator -> ASS_AND .)
    CHAR            reduce using rule 305 (assignmentOperator -> ASS_AND .)
    BYTE            reduce using rule 305 (assignmentOperator -> ASS_AND .)
    SHORT           reduce using rule 305 (assignmentOperator -> ASS_AND .)
    INT             reduce using rule 305 (assignmentOperator -> ASS_AND .)
    LONG            reduce using rule 305 (assignmentOperator -> ASS_AND .)
    FLOAT           reduce using rule 305 (assignmentOperator -> ASS_AND .)
    DOUBLE          reduce using rule 305 (assignmentOperator -> ASS_AND .)
    CharacterLiteral reduce using rule 305 (assignmentOperator -> ASS_AND .)
    StringLiteral   reduce using rule 305 (assignmentOperator -> ASS_AND .)
    NULL            reduce using rule 305 (assignmentOperator -> ASS_AND .)
    NUMBER          reduce using rule 305 (assignmentOperator -> ASS_AND .)
    HEX_NUMBER      reduce using rule 305 (assignmentOperator -> ASS_AND .)
    LONG_NUMBER     reduce using rule 305 (assignmentOperator -> ASS_AND .)
    LONG_HEX_NUMBER reduce using rule 305 (assignmentOperator -> ASS_AND .)
    NON_INTEGER_1   reduce using rule 305 (assignmentOperator -> ASS_AND .)
    NON_INTEGER_2   reduce using rule 305 (assignmentOperator -> ASS_AND .)
    NON_INTEGER_3   reduce using rule 305 (assignmentOperator -> ASS_AND .)
    TRUE            reduce using rule 305 (assignmentOperator -> ASS_AND .)
    FALSE           reduce using rule 305 (assignmentOperator -> ASS_AND .)


state 410

    (302) assignmentOperator -> ASS_SUB .

    PLUS            reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    DASH            reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    OP_INC          reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    OP_DEC          reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    EXCLAMATION     reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    TILDE           reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    VOID            reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    Identifier      reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    NEW             reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    SUPER           reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    THIS            reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    LPAREN          reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    BOOLEAN         reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    CHAR            reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    BYTE            reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    SHORT           reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    INT             reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    LONG            reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    FLOAT           reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    DOUBLE          reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    CharacterLiteral reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    StringLiteral   reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    NULL            reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    NUMBER          reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    HEX_NUMBER      reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    LONG_NUMBER     reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    LONG_HEX_NUMBER reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    NON_INTEGER_1   reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    NON_INTEGER_2   reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    NON_INTEGER_3   reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    TRUE            reduce using rule 302 (assignmentOperator -> ASS_SUB .)
    FALSE           reduce using rule 302 (assignmentOperator -> ASS_SUB .)


state 411

    (311) assignmentOperator -> ASS_SHR .

    PLUS            reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    DASH            reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    OP_INC          reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    OP_DEC          reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    EXCLAMATION     reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    TILDE           reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    VOID            reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    Identifier      reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    NEW             reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    SUPER           reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    THIS            reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    LPAREN          reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    BOOLEAN         reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    CHAR            reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    BYTE            reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    SHORT           reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    INT             reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    LONG            reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    FLOAT           reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    DOUBLE          reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    CharacterLiteral reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    StringLiteral   reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    NULL            reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    NUMBER          reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    HEX_NUMBER      reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    LONG_NUMBER     reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    LONG_HEX_NUMBER reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    NON_INTEGER_1   reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    NON_INTEGER_2   reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    NON_INTEGER_3   reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    TRUE            reduce using rule 311 (assignmentOperator -> ASS_SHR .)
    FALSE           reduce using rule 311 (assignmentOperator -> ASS_SHR .)


state 412

    (309) assignmentOperator -> ASS_SHL .

    PLUS            reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    DASH            reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    OP_INC          reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    OP_DEC          reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    EXCLAMATION     reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    TILDE           reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    VOID            reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    Identifier      reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    NEW             reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    SUPER           reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    THIS            reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    LPAREN          reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    BOOLEAN         reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    CHAR            reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    BYTE            reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    SHORT           reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    INT             reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    LONG            reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    FLOAT           reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    DOUBLE          reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    CharacterLiteral reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    StringLiteral   reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    NULL            reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    NUMBER          reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    HEX_NUMBER      reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    LONG_NUMBER     reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    LONG_HEX_NUMBER reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    NON_INTEGER_1   reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    NON_INTEGER_2   reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    NON_INTEGER_3   reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    TRUE            reduce using rule 309 (assignmentOperator -> ASS_SHL .)
    FALSE           reduce using rule 309 (assignmentOperator -> ASS_SHL .)


state 413

    (308) assignmentOperator -> ASS_MOD .

    PLUS            reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    DASH            reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    OP_INC          reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    OP_DEC          reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    EXCLAMATION     reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    TILDE           reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    VOID            reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    Identifier      reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    NEW             reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    SUPER           reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    THIS            reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    LPAREN          reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    BOOLEAN         reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    CHAR            reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    BYTE            reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    SHORT           reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    INT             reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    LONG            reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    FLOAT           reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    DOUBLE          reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    CharacterLiteral reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    StringLiteral   reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    NULL            reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    NUMBER          reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    HEX_NUMBER      reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    LONG_NUMBER     reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    LONG_HEX_NUMBER reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    NON_INTEGER_1   reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    NON_INTEGER_2   reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    NON_INTEGER_3   reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    TRUE            reduce using rule 308 (assignmentOperator -> ASS_MOD .)
    FALSE           reduce using rule 308 (assignmentOperator -> ASS_MOD .)


state 414

    (356) castExpression -> LPAREN expr_15 RPAREN . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 518
    parExpression                  shift and go to state 150
    primary                        shift and go to state 125
    primitiveType                  shift and go to state 138
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    FloatingPointLiteral           shift and go to state 134
    integerLiteral                 shift and go to state 111

state 415

    (150) type -> primitiveType expt_24 .
    (358) primary -> primitiveType expt_24 . DOT CLASS
    (485) expt_24 -> expt_24 . FLPAREN FRPAREN

    Identifier      reduce using rule 150 (type -> primitiveType expt_24 .)
    RPAREN          reduce using rule 150 (type -> primitiveType expt_24 .)
    DOT             shift and go to state 392
    FLPAREN         shift and go to state 391


state 416

    (355) castExpression -> LPAREN primitiveType RPAREN . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    unaryExpression                shift and go to state 519
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    parExpression                  shift and go to state 150
    primary                        shift and go to state 125
    primitiveType                  shift and go to state 138
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    FloatingPointLiteral           shift and go to state 134
    integerLiteral                 shift and go to state 111

state 417

    (293) parExpression -> LPAREN expression RPAREN .

    OP_INC          reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    OP_DEC          reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    FLPAREN         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    MULT            reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    SLASH           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    PERCENT         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    DASH            reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    OP_SHR          reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    OP_SHL          reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    OP_SHRR         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    OP_LE           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    OP_GE           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    MORE            reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    INSTANCEOF      reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    OP_EQ           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    OP_NE           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    AND             reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    CARET           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    VERTICAL        reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    OP_LAND         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    OP_LOR          reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    QUES            reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    ASS_ADD         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    ASS_SUB         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    ASS_MUL         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    ASS_DIV         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    ASS_AND         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    ASS_OR          reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    ASS_XOR         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    ASS_MOD         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    ASS_SHL         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    ASS_SHRR        reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    ASS_SHR         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    BRPAREN         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    FRPAREN         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    BLPAREN         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    Identifier      reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    CONTINUE        reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    THROW           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    SYNCHRONIZED    reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    SWITCH          reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    TRY             reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    DO              reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    IF              reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    ASSERT          reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    EXCLAMATION     reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    TILDE           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    VOID            reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    NEW             reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    SUPER           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    THIS            reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    CHAR            reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    BYTE            reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    SHORT           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    INT             reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    LONG            reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    DOUBLE          reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    CharacterLiteral reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    StringLiteral   reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    NULL            reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    HEX_NUMBER      reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    LONG_NUMBER     reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    LONG_HEX_NUMBER reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    NON_INTEGER_1   reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    NON_INTEGER_2   reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    NON_INTEGER_3   reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 293 (parExpression -> LPAREN expression RPAREN .)


state 418

    (398) superSuffix -> DOT Identifier . expt_18
    (399) superSuffix -> DOT Identifier . empty
    (474) expt_18 -> . arguments
    (475) expt_18 -> . empty
    (584) empty -> .
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

    OP_INC          reduce using rule 584 (empty -> .)
    OP_DEC          reduce using rule 584 (empty -> .)
    FLPAREN         reduce using rule 584 (empty -> .)
    DOT             reduce using rule 584 (empty -> .)
    MULT            reduce using rule 584 (empty -> .)
    SLASH           reduce using rule 584 (empty -> .)
    PERCENT         reduce using rule 584 (empty -> .)
    PLUS            reduce using rule 584 (empty -> .)
    DASH            reduce using rule 584 (empty -> .)
    OP_SHR          reduce using rule 584 (empty -> .)
    OP_SHL          reduce using rule 584 (empty -> .)
    OP_SHRR         reduce using rule 584 (empty -> .)
    OP_LE           reduce using rule 584 (empty -> .)
    OP_GE           reduce using rule 584 (empty -> .)
    LESS            reduce using rule 584 (empty -> .)
    MORE            reduce using rule 584 (empty -> .)
    INSTANCEOF      reduce using rule 584 (empty -> .)
    OP_EQ           reduce using rule 584 (empty -> .)
    OP_NE           reduce using rule 584 (empty -> .)
    AND             reduce using rule 584 (empty -> .)
    CARET           reduce using rule 584 (empty -> .)
    VERTICAL        reduce using rule 584 (empty -> .)
    OP_LAND         reduce using rule 584 (empty -> .)
    OP_LOR          reduce using rule 584 (empty -> .)
    QUES            reduce using rule 584 (empty -> .)
    RPAREN          reduce using rule 584 (empty -> .)
    COMMA           reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)
    EQUALS          reduce using rule 584 (empty -> .)
    ASS_ADD         reduce using rule 584 (empty -> .)
    ASS_SUB         reduce using rule 584 (empty -> .)
    ASS_MUL         reduce using rule 584 (empty -> .)
    ASS_DIV         reduce using rule 584 (empty -> .)
    ASS_AND         reduce using rule 584 (empty -> .)
    ASS_OR          reduce using rule 584 (empty -> .)
    ASS_XOR         reduce using rule 584 (empty -> .)
    ASS_MOD         reduce using rule 584 (empty -> .)
    ASS_SHL         reduce using rule 584 (empty -> .)
    ASS_SHRR        reduce using rule 584 (empty -> .)
    ASS_SHR         reduce using rule 584 (empty -> .)
    FRPAREN         reduce using rule 584 (empty -> .)
    COLON           reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)
    LPAREN          shift and go to state 204

    empty                          shift and go to state 521
    expt_18                        shift and go to state 520
    arguments                      shift and go to state 441

state 419

    (172) typeArgument -> type .

    MORE            reduce using rule 172 (typeArgument -> type .)
    COMMA           reduce using rule 172 (typeArgument -> type .)


state 420

    (168) typeArguments -> LESS typeArgument . expt_34 MORE
    (169) typeArguments -> LESS typeArgument . MORE
    (504) expt_34 -> . COMMA typeArgument
    (505) expt_34 -> . expt_34 COMMA typeArgument

    MORE            shift and go to state 523
    COMMA           shift and go to state 524

    expt_34                        shift and go to state 522

state 421

    (170) typeArgument -> QUES . expt_35
    (171) typeArgument -> QUES . empty
    (506) expt_35 -> . expr_5 type
    (507) expt_35 -> . empty
    (584) empty -> .
    (413) expr_5 -> . EXTENDS
    (414) expr_5 -> . SUPER

    MORE            reduce using rule 584 (empty -> .)
    COMMA           reduce using rule 584 (empty -> .)
    EXTENDS         shift and go to state 527
    SUPER           shift and go to state 526

    expt_35                        shift and go to state 525
    expr_5                         shift and go to state 528
    empty                          shift and go to state 529

state 422

    (502) expt_33 -> DOT . Identifier expt_32

    Identifier      shift and go to state 530


state 423

    (155) classOrInterfaceType -> Identifier expt_32 empty .

    FLPAREN         reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    AND             reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    COMMA           reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    MORE            reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    Identifier      reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    BLPAREN         reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    OP_ARRAY        reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    RPAREN          reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    LPAREN          reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    IMPLEMENTS      reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    OP_EQ           reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    OP_NE           reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    CARET           reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    VERTICAL        reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    OP_LAND         reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    OP_LOR          reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    QUES            reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    BRPAREN         reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    EQUALS          reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    ASS_ADD         reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    ASS_SUB         reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    ASS_MUL         reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    ASS_DIV         reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    ASS_AND         reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    ASS_OR          reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    ASS_XOR         reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    ASS_MOD         reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    ASS_SHL         reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    ASS_SHRR        reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    ASS_SHR         reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    FRPAREN         reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    COLON           reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)
    SEMI            reduce using rule 155 (classOrInterfaceType -> Identifier expt_32 empty .)


state 424

    (154) classOrInterfaceType -> Identifier expt_32 expt_33 .
    (503) expt_33 -> expt_33 . DOT Identifier expt_32

    FLPAREN         reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    AND             reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    COMMA           reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    MORE            reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    Identifier      reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    BLPAREN         reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    OP_ARRAY        reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    RPAREN          reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    LPAREN          reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    IMPLEMENTS      reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    OP_EQ           reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    OP_NE           reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    CARET           reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    VERTICAL        reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    OP_LAND         reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    OP_LOR          reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    QUES            reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    BRPAREN         reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    EQUALS          reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    ASS_ADD         reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    ASS_SUB         reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    ASS_MUL         reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    ASS_DIV         reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    ASS_AND         reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    ASS_OR          reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    ASS_XOR         reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    ASS_MOD         reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    ASS_SHL         reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    ASS_SHRR        reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    ASS_SHR         reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    FRPAREN         reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    COLON           reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    SEMI            reduce using rule 154 (classOrInterfaceType -> Identifier expt_32 expt_33 .)
    DOT             shift and go to state 531


state 425

    (157) classOrInterfaceType -> Identifier empty empty .

    FLPAREN         reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    AND             reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    COMMA           reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    MORE            reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    Identifier      reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    BLPAREN         reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    OP_ARRAY        reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    RPAREN          reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    LPAREN          reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    IMPLEMENTS      reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    OP_EQ           reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    OP_NE           reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    CARET           reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    VERTICAL        reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    OP_LAND         reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    OP_LOR          reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    QUES            reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    BRPAREN         reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    EQUALS          reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    ASS_ADD         reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    ASS_SUB         reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    ASS_MUL         reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    ASS_DIV         reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    ASS_AND         reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    ASS_OR          reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    ASS_XOR         reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    ASS_MOD         reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    ASS_SHL         reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    ASS_SHRR        reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    ASS_SHR         reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    FRPAREN         reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    COLON           reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)
    SEMI            reduce using rule 157 (classOrInterfaceType -> Identifier empty empty .)


state 426

    (156) classOrInterfaceType -> Identifier empty expt_33 .
    (503) expt_33 -> expt_33 . DOT Identifier expt_32

    FLPAREN         reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    AND             reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    COMMA           reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    MORE            reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    Identifier      reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    BLPAREN         reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    OP_ARRAY        reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    RPAREN          reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    LPAREN          reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    IMPLEMENTS      reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    OP_EQ           reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    OP_NE           reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    CARET           reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    VERTICAL        reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    OP_LAND         reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    OP_LOR          reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    QUES            reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    BRPAREN         reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    EQUALS          reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    ASS_ADD         reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    ASS_SUB         reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    ASS_MUL         reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    ASS_DIV         reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    ASS_AND         reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    ASS_OR          reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    ASS_XOR         reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    ASS_MOD         reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    ASS_SHL         reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    ASS_SHRR        reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    ASS_SHR         reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    FRPAREN         reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    COLON           reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    SEMI            reduce using rule 156 (classOrInterfaceType -> Identifier empty expt_33 .)
    DOT             shift and go to state 531


state 427

    (480) expt_22 -> COMMA type .

    COMMA           reduce using rule 480 (expt_22 -> COMMA type .)
    BLPAREN         reduce using rule 480 (expt_22 -> COMMA type .)
    MORE            reduce using rule 480 (expt_22 -> COMMA type .)


state 428

    (481) expt_22 -> expt_22 COMMA . type
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    type                           shift and go to state 532

state 429

    (57) enumConstants -> enumConstant expt_16 .
    (471) expt_16 -> expt_16 . COMMA enumConstant

  ! shift/reduce conflict for COMMA resolved as shift
    SEMI            reduce using rule 57 (enumConstants -> enumConstant expt_16 .)
    BRPAREN         reduce using rule 57 (enumConstants -> enumConstant expt_16 .)
    COMMA           shift and go to state 533

  ! COMMA           [ reduce using rule 57 (enumConstants -> enumConstant expt_16 .) ]


state 430

    (470) expt_16 -> COMMA . enumConstant
    (59) enumConstant -> . expt_17 Identifier expt_18 classBody
    (60) enumConstant -> . expt_17 Identifier expt_18
    (61) enumConstant -> . expt_17 Identifier classBody
    (62) enumConstant -> . expt_17 Identifier
    (63) enumConstant -> . Identifier expt_18 classBody
    (64) enumConstant -> . Identifier expt_18
    (65) enumConstant -> . Identifier classBody
    (66) enumConstant -> . Identifier
    (472) expt_17 -> . annotations
    (473) expt_17 -> . empty
    (201) annotations -> . annotation
    (202) annotations -> . annotations annotation
    (584) empty -> .
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for Identifier resolved as shift
    Identifier      shift and go to state 291
    AT              shift and go to state 8

  ! Identifier      [ reduce using rule 584 (empty -> .) ]

    enumConstant                   shift and go to state 534
    annotation                     shift and go to state 4
    expt_17                        shift and go to state 288
    annotations                    shift and go to state 287
    empty                          shift and go to state 535

state 431

    (58) enumConstants -> enumConstant empty .

    COMMA           reduce using rule 58 (enumConstants -> enumConstant empty .)
    SEMI            reduce using rule 58 (enumConstants -> enumConstant empty .)
    BRPAREN         reduce using rule 58 (enumConstants -> enumConstant empty .)


state 432

    (202) annotations -> annotations annotation .

    AT              reduce using rule 202 (annotations -> annotations annotation .)
    Identifier      reduce using rule 202 (annotations -> annotations annotation .)


state 433

    (59) enumConstant -> expt_17 Identifier . expt_18 classBody
    (60) enumConstant -> expt_17 Identifier . expt_18
    (61) enumConstant -> expt_17 Identifier . classBody
    (62) enumConstant -> expt_17 Identifier .
    (474) expt_18 -> . arguments
    (475) expt_18 -> . empty
    (77) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (78) classBody -> . BLPAREN BRPAREN
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN
    (584) empty -> .

  ! shift/reduce conflict for BLPAREN resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 62 (enumConstant -> expt_17 Identifier .)
  ! reduce/reduce conflict for SEMI resolved using rule 62 (enumConstant -> expt_17 Identifier .)
  ! reduce/reduce conflict for BRPAREN resolved using rule 62 (enumConstant -> expt_17 Identifier .)
    COMMA           reduce using rule 62 (enumConstant -> expt_17 Identifier .)
    SEMI            reduce using rule 62 (enumConstant -> expt_17 Identifier .)
    BRPAREN         reduce using rule 62 (enumConstant -> expt_17 Identifier .)
    BLPAREN         shift and go to state 439
    LPAREN          shift and go to state 204

  ! BLPAREN         [ reduce using rule 584 (empty -> .) ]
  ! COMMA           [ reduce using rule 584 (empty -> .) ]
  ! SEMI            [ reduce using rule 584 (empty -> .) ]
  ! BRPAREN         [ reduce using rule 584 (empty -> .) ]

    classBody                      shift and go to state 536
    expt_18                        shift and go to state 537
    empty                          shift and go to state 440
    arguments                      shift and go to state 441

state 434

    (49) enumBody -> BLPAREN expt_13 expt_14 . expt_15 BRPAREN
    (50) enumBody -> BLPAREN expt_13 expt_14 . empty BRPAREN
    (468) expt_15 -> . enumBodyDeclarations
    (469) expt_15 -> . empty
    (584) empty -> .
    (67) enumBodyDeclarations -> . SEMI classBodyDeclarations
    (68) enumBodyDeclarations -> . SEMI

    BRPAREN         reduce using rule 584 (empty -> .)
    SEMI            shift and go to state 538

    enumBodyDeclarations           shift and go to state 539
    expt_15                        shift and go to state 540
    empty                          shift and go to state 541

state 435

    (466) expt_14 -> COMMA .

    SEMI            reduce using rule 466 (expt_14 -> COMMA .)
    BRPAREN         reduce using rule 466 (expt_14 -> COMMA .)


state 436

    (51) enumBody -> BLPAREN expt_13 empty . expt_15 BRPAREN
    (52) enumBody -> BLPAREN expt_13 empty . empty BRPAREN
    (467) expt_14 -> empty .
    (468) expt_15 -> . enumBodyDeclarations
    (469) expt_15 -> . empty
    (584) empty -> .
    (67) enumBodyDeclarations -> . SEMI classBodyDeclarations
    (68) enumBodyDeclarations -> . SEMI

  ! reduce/reduce conflict for BRPAREN resolved using rule 467 (expt_14 -> empty .)
  ! shift/reduce conflict for SEMI resolved as shift
    BRPAREN         reduce using rule 467 (expt_14 -> empty .)
    SEMI            shift and go to state 538

  ! SEMI            [ reduce using rule 467 (expt_14 -> empty .) ]
  ! BRPAREN         [ reduce using rule 584 (empty -> .) ]

    expt_15                        shift and go to state 542
    enumBodyDeclarations           shift and go to state 539
    empty                          shift and go to state 543

state 437

    (65) enumConstant -> Identifier classBody .

    COMMA           reduce using rule 65 (enumConstant -> Identifier classBody .)
    SEMI            reduce using rule 65 (enumConstant -> Identifier classBody .)
    BRPAREN         reduce using rule 65 (enumConstant -> Identifier classBody .)


state 438

    (63) enumConstant -> Identifier expt_18 . classBody
    (64) enumConstant -> Identifier expt_18 .
    (77) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (78) classBody -> . BLPAREN BRPAREN

    COMMA           reduce using rule 64 (enumConstant -> Identifier expt_18 .)
    SEMI            reduce using rule 64 (enumConstant -> Identifier expt_18 .)
    BRPAREN         reduce using rule 64 (enumConstant -> Identifier expt_18 .)
    BLPAREN         shift and go to state 439

    classBody                      shift and go to state 544

state 439

    (77) classBody -> BLPAREN . classBodyDeclarations BRPAREN
    (78) classBody -> BLPAREN . BRPAREN
    (476) classBodyDeclarations -> . classBodyDeclaration
    (477) classBodyDeclarations -> . classBodyDeclarations classBodyDeclaration
    (81) classBodyDeclaration -> . modifiers memberDecl
    (82) classBodyDeclaration -> . expt_3 block
    (83) classBodyDeclaration -> . empty block
    (84) classBodyDeclaration -> . SEMI
    (29) modifiers -> . expt_6
    (30) modifiers -> . empty
    (445) expt_3 -> . STATIC
    (446) expt_3 -> . empty
    (584) empty -> .
    (451) expt_6 -> . modifier
    (452) expt_6 -> . expt_6 modifier
    (137) modifier -> . annotation
    (138) modifier -> . PUBLIC
    (139) modifier -> . PROTECTED
    (140) modifier -> . PRIVATE
    (141) modifier -> . STATIC
    (142) modifier -> . ABSTRACT
    (143) modifier -> . FINAL
    (144) modifier -> . NATIVE
    (145) modifier -> . SYNCHRONIZED
    (146) modifier -> . TRANSIENT
    (147) modifier -> . VOLATILE
    (148) modifier -> . STRICTFP
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for AT resolved as shift
    BRPAREN         shift and go to state 549
    SEMI            shift and go to state 546
    STATIC          shift and go to state 545
    BLPAREN         reduce using rule 584 (empty -> .)
    VOID            reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    LESS            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    BOOLEAN         reduce using rule 584 (empty -> .)
    CHAR            reduce using rule 584 (empty -> .)
    BYTE            reduce using rule 584 (empty -> .)
    SHORT           reduce using rule 584 (empty -> .)
    INT             reduce using rule 584 (empty -> .)
    LONG            reduce using rule 584 (empty -> .)
    FLOAT           reduce using rule 584 (empty -> .)
    DOUBLE          reduce using rule 584 (empty -> .)
    PUBLIC          shift and go to state 310
    PROTECTED       shift and go to state 295
    PRIVATE         shift and go to state 300
    ABSTRACT        shift and go to state 294
    FINAL           shift and go to state 297
    NATIVE          shift and go to state 298
    SYNCHRONIZED    shift and go to state 293
    TRANSIENT       shift and go to state 307
    VOLATILE        shift and go to state 308
    STRICTFP        shift and go to state 301
    AT              shift and go to state 8

  ! AT              [ reduce using rule 584 (empty -> .) ]

    modifiers                      shift and go to state 551
    classBodyDeclarations          shift and go to state 552
    expt_6                         shift and go to state 299
    expt_3                         shift and go to state 547
    empty                          shift and go to state 548
    classBodyDeclaration           shift and go to state 550
    modifier                       shift and go to state 309
    annotation                     shift and go to state 304

state 440

    (475) expt_18 -> empty .

    BLPAREN         reduce using rule 475 (expt_18 -> empty .)
    COMMA           reduce using rule 475 (expt_18 -> empty .)
    SEMI            reduce using rule 475 (expt_18 -> empty .)
    BRPAREN         reduce using rule 475 (expt_18 -> empty .)


state 441

    (474) expt_18 -> arguments .

    BLPAREN         reduce using rule 474 (expt_18 -> arguments .)
    COMMA           reduce using rule 474 (expt_18 -> arguments .)
    SEMI            reduce using rule 474 (expt_18 -> arguments .)
    BRPAREN         reduce using rule 474 (expt_18 -> arguments .)
    OP_INC          reduce using rule 474 (expt_18 -> arguments .)
    OP_DEC          reduce using rule 474 (expt_18 -> arguments .)
    FLPAREN         reduce using rule 474 (expt_18 -> arguments .)
    DOT             reduce using rule 474 (expt_18 -> arguments .)
    MULT            reduce using rule 474 (expt_18 -> arguments .)
    SLASH           reduce using rule 474 (expt_18 -> arguments .)
    PERCENT         reduce using rule 474 (expt_18 -> arguments .)
    PLUS            reduce using rule 474 (expt_18 -> arguments .)
    DASH            reduce using rule 474 (expt_18 -> arguments .)
    OP_SHR          reduce using rule 474 (expt_18 -> arguments .)
    OP_SHL          reduce using rule 474 (expt_18 -> arguments .)
    OP_SHRR         reduce using rule 474 (expt_18 -> arguments .)
    OP_LE           reduce using rule 474 (expt_18 -> arguments .)
    OP_GE           reduce using rule 474 (expt_18 -> arguments .)
    LESS            reduce using rule 474 (expt_18 -> arguments .)
    MORE            reduce using rule 474 (expt_18 -> arguments .)
    INSTANCEOF      reduce using rule 474 (expt_18 -> arguments .)
    OP_EQ           reduce using rule 474 (expt_18 -> arguments .)
    OP_NE           reduce using rule 474 (expt_18 -> arguments .)
    AND             reduce using rule 474 (expt_18 -> arguments .)
    CARET           reduce using rule 474 (expt_18 -> arguments .)
    VERTICAL        reduce using rule 474 (expt_18 -> arguments .)
    OP_LAND         reduce using rule 474 (expt_18 -> arguments .)
    OP_LOR          reduce using rule 474 (expt_18 -> arguments .)
    QUES            reduce using rule 474 (expt_18 -> arguments .)
    RPAREN          reduce using rule 474 (expt_18 -> arguments .)
    EQUALS          reduce using rule 474 (expt_18 -> arguments .)
    ASS_ADD         reduce using rule 474 (expt_18 -> arguments .)
    ASS_SUB         reduce using rule 474 (expt_18 -> arguments .)
    ASS_MUL         reduce using rule 474 (expt_18 -> arguments .)
    ASS_DIV         reduce using rule 474 (expt_18 -> arguments .)
    ASS_AND         reduce using rule 474 (expt_18 -> arguments .)
    ASS_OR          reduce using rule 474 (expt_18 -> arguments .)
    ASS_XOR         reduce using rule 474 (expt_18 -> arguments .)
    ASS_MOD         reduce using rule 474 (expt_18 -> arguments .)
    ASS_SHL         reduce using rule 474 (expt_18 -> arguments .)
    ASS_SHRR        reduce using rule 474 (expt_18 -> arguments .)
    ASS_SHR         reduce using rule 474 (expt_18 -> arguments .)
    FRPAREN         reduce using rule 474 (expt_18 -> arguments .)
    COLON           reduce using rule 474 (expt_18 -> arguments .)


state 442

    (53) enumBody -> BLPAREN empty expt_14 . expt_15 BRPAREN
    (54) enumBody -> BLPAREN empty expt_14 . empty BRPAREN
    (468) expt_15 -> . enumBodyDeclarations
    (469) expt_15 -> . empty
    (584) empty -> .
    (67) enumBodyDeclarations -> . SEMI classBodyDeclarations
    (68) enumBodyDeclarations -> . SEMI

    BRPAREN         reduce using rule 584 (empty -> .)
    SEMI            shift and go to state 538

    expt_15                        shift and go to state 553
    enumBodyDeclarations           shift and go to state 539
    empty                          shift and go to state 554

state 443

    (55) enumBody -> BLPAREN empty empty . expt_15 BRPAREN
    (56) enumBody -> BLPAREN empty empty . empty BRPAREN
    (467) expt_14 -> empty .
    (468) expt_15 -> . enumBodyDeclarations
    (469) expt_15 -> . empty
    (584) empty -> .
    (67) enumBodyDeclarations -> . SEMI classBodyDeclarations
    (68) enumBodyDeclarations -> . SEMI

  ! reduce/reduce conflict for BRPAREN resolved using rule 467 (expt_14 -> empty .)
  ! shift/reduce conflict for SEMI resolved as shift
    BRPAREN         reduce using rule 467 (expt_14 -> empty .)
    SEMI            shift and go to state 538

  ! SEMI            [ reduce using rule 467 (expt_14 -> empty .) ]
  ! BRPAREN         [ reduce using rule 584 (empty -> .) ]

    expt_15                        shift and go to state 555
    enumBodyDeclarations           shift and go to state 539
    empty                          shift and go to state 556

state 444

    (452) expt_6 -> expt_6 modifier .

    PUBLIC          reduce using rule 452 (expt_6 -> expt_6 modifier .)
    PROTECTED       reduce using rule 452 (expt_6 -> expt_6 modifier .)
    PRIVATE         reduce using rule 452 (expt_6 -> expt_6 modifier .)
    STATIC          reduce using rule 452 (expt_6 -> expt_6 modifier .)
    ABSTRACT        reduce using rule 452 (expt_6 -> expt_6 modifier .)
    FINAL           reduce using rule 452 (expt_6 -> expt_6 modifier .)
    NATIVE          reduce using rule 452 (expt_6 -> expt_6 modifier .)
    SYNCHRONIZED    reduce using rule 452 (expt_6 -> expt_6 modifier .)
    TRANSIENT       reduce using rule 452 (expt_6 -> expt_6 modifier .)
    VOLATILE        reduce using rule 452 (expt_6 -> expt_6 modifier .)
    STRICTFP        reduce using rule 452 (expt_6 -> expt_6 modifier .)
    AT              reduce using rule 452 (expt_6 -> expt_6 modifier .)
    VOID            reduce using rule 452 (expt_6 -> expt_6 modifier .)
    Identifier      reduce using rule 452 (expt_6 -> expt_6 modifier .)
    LESS            reduce using rule 452 (expt_6 -> expt_6 modifier .)
    INTERFACE       reduce using rule 452 (expt_6 -> expt_6 modifier .)
    CLASS           reduce using rule 452 (expt_6 -> expt_6 modifier .)
    ENUM            reduce using rule 452 (expt_6 -> expt_6 modifier .)
    BOOLEAN         reduce using rule 452 (expt_6 -> expt_6 modifier .)
    CHAR            reduce using rule 452 (expt_6 -> expt_6 modifier .)
    BYTE            reduce using rule 452 (expt_6 -> expt_6 modifier .)
    SHORT           reduce using rule 452 (expt_6 -> expt_6 modifier .)
    INT             reduce using rule 452 (expt_6 -> expt_6 modifier .)
    LONG            reduce using rule 452 (expt_6 -> expt_6 modifier .)
    FLOAT           reduce using rule 452 (expt_6 -> expt_6 modifier .)
    DOUBLE          reduce using rule 452 (expt_6 -> expt_6 modifier .)


state 445

    (30) modifiers -> empty .

    AT              reduce using rule 30 (modifiers -> empty .)
    ENUM            reduce using rule 30 (modifiers -> empty .)
    INTERFACE       reduce using rule 30 (modifiers -> empty .)
    CLASS           reduce using rule 30 (modifiers -> empty .)
    BOOLEAN         reduce using rule 30 (modifiers -> empty .)
    CHAR            reduce using rule 30 (modifiers -> empty .)
    BYTE            reduce using rule 30 (modifiers -> empty .)
    SHORT           reduce using rule 30 (modifiers -> empty .)
    INT             reduce using rule 30 (modifiers -> empty .)
    LONG            reduce using rule 30 (modifiers -> empty .)
    FLOAT           reduce using rule 30 (modifiers -> empty .)
    DOUBLE          reduce using rule 30 (modifiers -> empty .)
    Identifier      reduce using rule 30 (modifiers -> empty .)
    VOID            reduce using rule 30 (modifiers -> empty .)
    LESS            reduce using rule 30 (modifiers -> empty .)


state 446

    (220) annotationTypeBody -> BLPAREN expt_47 BRPAREN .

    SEMI            reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    PUBLIC          reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    PROTECTED       reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    PRIVATE         reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    ABSTRACT        reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    STATIC          reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    FINAL           reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    STRICTFP        reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    CLASS           reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    ENUM            reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    INTERFACE       reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    AT              reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    $end            reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    BRPAREN         reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    Identifier      reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    CONTINUE        reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    BREAK           reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    THROW           reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    RETURN          reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    SYNCHRONIZED    reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    SWITCH          reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    TRY             reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    DO              reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    WHILE           reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    FOR             reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    IF              reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    ASSERT          reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    BLPAREN         reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    BOOLEAN         reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    CHAR            reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    BYTE            reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    SHORT           reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    INT             reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    LONG            reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    FLOAT           reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    DOUBLE          reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    PLUS            reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    DASH            reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    OP_INC          reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    OP_DEC          reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    EXCLAMATION     reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    TILDE           reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    VOID            reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    NEW             reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    SUPER           reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    THIS            reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    LPAREN          reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    CharacterLiteral reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    StringLiteral   reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    NULL            reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    NUMBER          reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    HEX_NUMBER      reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    LONG_NUMBER     reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    NON_INTEGER_1   reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    NON_INTEGER_2   reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    NON_INTEGER_3   reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    TRUE            reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    FALSE           reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    CASE            reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    DEFAULT         reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    NATIVE          reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    TRANSIENT       reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    VOLATILE        reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)
    LESS            reduce using rule 220 (annotationTypeBody -> BLPAREN expt_47 BRPAREN .)


state 447

    (529) expt_47 -> expt_47 annotationTypeElementDeclaration .

    BRPAREN         reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    PUBLIC          reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    PROTECTED       reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    PRIVATE         reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    STATIC          reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    ABSTRACT        reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    FINAL           reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    NATIVE          reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    SYNCHRONIZED    reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    TRANSIENT       reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    VOLATILE        reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    STRICTFP        reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    AT              reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    ENUM            reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    INTERFACE       reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    CLASS           reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    BOOLEAN         reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    CHAR            reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    BYTE            reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    SHORT           reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    INT             reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    LONG            reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    FLOAT           reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    DOUBLE          reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)
    Identifier      reduce using rule 529 (expt_47 -> expt_47 annotationTypeElementDeclaration .)


state 448

    (221) annotationTypeBody -> BLPAREN empty BRPAREN .

    SEMI            reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    PUBLIC          reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    PROTECTED       reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    PRIVATE         reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    ABSTRACT        reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    STATIC          reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    FINAL           reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    STRICTFP        reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    CLASS           reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    ENUM            reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    INTERFACE       reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    AT              reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    $end            reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    BRPAREN         reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    Identifier      reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    CONTINUE        reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    BREAK           reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    THROW           reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    RETURN          reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    SYNCHRONIZED    reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    SWITCH          reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    TRY             reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    DO              reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    WHILE           reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    FOR             reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    IF              reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    ASSERT          reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    BLPAREN         reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    BOOLEAN         reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    CHAR            reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    BYTE            reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    SHORT           reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    INT             reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    LONG            reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    FLOAT           reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    DOUBLE          reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    PLUS            reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    DASH            reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    OP_INC          reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    OP_DEC          reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    EXCLAMATION     reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    TILDE           reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    VOID            reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    NEW             reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    SUPER           reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    THIS            reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    LPAREN          reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    CharacterLiteral reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    StringLiteral   reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    NULL            reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    NUMBER          reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    HEX_NUMBER      reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    LONG_NUMBER     reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    NON_INTEGER_1   reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    NON_INTEGER_2   reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    NON_INTEGER_3   reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    TRUE            reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    FALSE           reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    CASE            reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    DEFAULT         reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    NATIVE          reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    TRANSIENT       reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    VOLATILE        reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)
    LESS            reduce using rule 221 (annotationTypeBody -> BLPAREN empty BRPAREN .)


state 449

    (227) annotationTypeElementRest -> normalInterfaceDeclaration . expt_48
    (228) annotationTypeElementRest -> normalInterfaceDeclaration . empty
    (530) expt_48 -> . SEMI
    (531) expt_48 -> . empty
    (584) empty -> .

    SEMI            shift and go to state 559
    BRPAREN         reduce using rule 584 (empty -> .)
    PUBLIC          reduce using rule 584 (empty -> .)
    PROTECTED       reduce using rule 584 (empty -> .)
    PRIVATE         reduce using rule 584 (empty -> .)
    STATIC          reduce using rule 584 (empty -> .)
    ABSTRACT        reduce using rule 584 (empty -> .)
    FINAL           reduce using rule 584 (empty -> .)
    NATIVE          reduce using rule 584 (empty -> .)
    SYNCHRONIZED    reduce using rule 584 (empty -> .)
    TRANSIENT       reduce using rule 584 (empty -> .)
    VOLATILE        reduce using rule 584 (empty -> .)
    STRICTFP        reduce using rule 584 (empty -> .)
    AT              reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    BOOLEAN         reduce using rule 584 (empty -> .)
    CHAR            reduce using rule 584 (empty -> .)
    BYTE            reduce using rule 584 (empty -> .)
    SHORT           reduce using rule 584 (empty -> .)
    INT             reduce using rule 584 (empty -> .)
    LONG            reduce using rule 584 (empty -> .)
    FLOAT           reduce using rule 584 (empty -> .)
    DOUBLE          reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)

    expt_48                        shift and go to state 557
    empty                          shift and go to state 558

state 450

    (229) annotationTypeElementRest -> normalClassDeclaration . expt_48
    (230) annotationTypeElementRest -> normalClassDeclaration . empty
    (530) expt_48 -> . SEMI
    (531) expt_48 -> . empty
    (584) empty -> .

    SEMI            shift and go to state 559
    BRPAREN         reduce using rule 584 (empty -> .)
    PUBLIC          reduce using rule 584 (empty -> .)
    PROTECTED       reduce using rule 584 (empty -> .)
    PRIVATE         reduce using rule 584 (empty -> .)
    STATIC          reduce using rule 584 (empty -> .)
    ABSTRACT        reduce using rule 584 (empty -> .)
    FINAL           reduce using rule 584 (empty -> .)
    NATIVE          reduce using rule 584 (empty -> .)
    SYNCHRONIZED    reduce using rule 584 (empty -> .)
    TRANSIENT       reduce using rule 584 (empty -> .)
    VOLATILE        reduce using rule 584 (empty -> .)
    STRICTFP        reduce using rule 584 (empty -> .)
    AT              reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    BOOLEAN         reduce using rule 584 (empty -> .)
    CHAR            reduce using rule 584 (empty -> .)
    BYTE            reduce using rule 584 (empty -> .)
    SHORT           reduce using rule 584 (empty -> .)
    INT             reduce using rule 584 (empty -> .)
    LONG            reduce using rule 584 (empty -> .)
    FLOAT           reduce using rule 584 (empty -> .)
    DOUBLE          reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)

    expt_48                        shift and go to state 560
    empty                          shift and go to state 561

state 451

    (231) annotationTypeElementRest -> type . annotationMethodOrConstantRest SEMI
    (232) annotationMethodOrConstantRest -> . annotationMethodRest
    (233) annotationMethodOrConstantRest -> . annotationConstantRest
    (234) annotationMethodRest -> . Identifier LPAREN RPAREN expt_49
    (235) annotationMethodRest -> . Identifier LPAREN RPAREN empty
    (236) annotationConstantRest -> . variableDeclarators
    (123) variableDeclarators -> . variableDeclarator expt_26
    (124) variableDeclarators -> . variableDeclarator empty
    (125) variableDeclarator -> . variableDeclaratorId expt_27
    (126) variableDeclarator -> . variableDeclaratorId empty
    (131) variableDeclaratorId -> . Identifier expt_24
    (132) variableDeclaratorId -> . Identifier empty

    Identifier      shift and go to state 566

    annotationMethodOrConstantRest shift and go to state 562
    variableDeclarators            shift and go to state 563
    annotationConstantRest         shift and go to state 564
    annotationMethodRest           shift and go to state 567
    variableDeclaratorId           shift and go to state 565
    variableDeclarator             shift and go to state 568

state 452

    (225) annotationTypeElementRest -> enumDeclaration . expt_48
    (226) annotationTypeElementRest -> enumDeclaration . empty
    (530) expt_48 -> . SEMI
    (531) expt_48 -> . empty
    (584) empty -> .

    SEMI            shift and go to state 559
    BRPAREN         reduce using rule 584 (empty -> .)
    PUBLIC          reduce using rule 584 (empty -> .)
    PROTECTED       reduce using rule 584 (empty -> .)
    PRIVATE         reduce using rule 584 (empty -> .)
    STATIC          reduce using rule 584 (empty -> .)
    ABSTRACT        reduce using rule 584 (empty -> .)
    FINAL           reduce using rule 584 (empty -> .)
    NATIVE          reduce using rule 584 (empty -> .)
    SYNCHRONIZED    reduce using rule 584 (empty -> .)
    TRANSIENT       reduce using rule 584 (empty -> .)
    VOLATILE        reduce using rule 584 (empty -> .)
    STRICTFP        reduce using rule 584 (empty -> .)
    AT              reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    BOOLEAN         reduce using rule 584 (empty -> .)
    CHAR            reduce using rule 584 (empty -> .)
    BYTE            reduce using rule 584 (empty -> .)
    SHORT           reduce using rule 584 (empty -> .)
    INT             reduce using rule 584 (empty -> .)
    LONG            reduce using rule 584 (empty -> .)
    FLOAT           reduce using rule 584 (empty -> .)
    DOUBLE          reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)

    empty                          shift and go to state 569
    expt_48                        shift and go to state 570

state 453

    (222) annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .

    BRPAREN         reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    PUBLIC          reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    PROTECTED       reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    PRIVATE         reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    STATIC          reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    ABSTRACT        reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    FINAL           reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    NATIVE          reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    SYNCHRONIZED    reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    TRANSIENT       reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    VOLATILE        reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    STRICTFP        reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    AT              reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    ENUM            reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    INTERFACE       reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    CLASS           reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    BOOLEAN         reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    CHAR            reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    BYTE            reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    SHORT           reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    INT             reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    LONG            reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    FLOAT           reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    DOUBLE          reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    Identifier      reduce using rule 222 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)


state 454

    (223) annotationTypeElementRest -> annotationTypeDeclaration . expt_48
    (224) annotationTypeElementRest -> annotationTypeDeclaration . empty
    (530) expt_48 -> . SEMI
    (531) expt_48 -> . empty
    (584) empty -> .

    SEMI            shift and go to state 559
    BRPAREN         reduce using rule 584 (empty -> .)
    PUBLIC          reduce using rule 584 (empty -> .)
    PROTECTED       reduce using rule 584 (empty -> .)
    PRIVATE         reduce using rule 584 (empty -> .)
    STATIC          reduce using rule 584 (empty -> .)
    ABSTRACT        reduce using rule 584 (empty -> .)
    FINAL           reduce using rule 584 (empty -> .)
    NATIVE          reduce using rule 584 (empty -> .)
    SYNCHRONIZED    reduce using rule 584 (empty -> .)
    TRANSIENT       reduce using rule 584 (empty -> .)
    VOLATILE        reduce using rule 584 (empty -> .)
    STRICTFP        reduce using rule 584 (empty -> .)
    AT              reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    BOOLEAN         reduce using rule 584 (empty -> .)
    CHAR            reduce using rule 584 (empty -> .)
    BYTE            reduce using rule 584 (empty -> .)
    SHORT           reduce using rule 584 (empty -> .)
    INT             reduce using rule 584 (empty -> .)
    LONG            reduce using rule 584 (empty -> .)
    FLOAT           reduce using rule 584 (empty -> .)
    DOUBLE          reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)

    expt_48                        shift and go to state 571
    empty                          shift and go to state 572

state 455

    (458) expt_10 -> COMMA typeParameter .

    MORE            reduce using rule 458 (expt_10 -> COMMA typeParameter .)
    COMMA           reduce using rule 458 (expt_10 -> COMMA typeParameter .)


state 456

    (41) typeParameters -> LESS typeParameter expt_10 MORE .

    EXTENDS         reduce using rule 41 (typeParameters -> LESS typeParameter expt_10 MORE .)
    BLPAREN         reduce using rule 41 (typeParameters -> LESS typeParameter expt_10 MORE .)
    IMPLEMENTS      reduce using rule 41 (typeParameters -> LESS typeParameter expt_10 MORE .)
    VOID            reduce using rule 41 (typeParameters -> LESS typeParameter expt_10 MORE .)
    BOOLEAN         reduce using rule 41 (typeParameters -> LESS typeParameter expt_10 MORE .)
    CHAR            reduce using rule 41 (typeParameters -> LESS typeParameter expt_10 MORE .)
    BYTE            reduce using rule 41 (typeParameters -> LESS typeParameter expt_10 MORE .)
    SHORT           reduce using rule 41 (typeParameters -> LESS typeParameter expt_10 MORE .)
    INT             reduce using rule 41 (typeParameters -> LESS typeParameter expt_10 MORE .)
    LONG            reduce using rule 41 (typeParameters -> LESS typeParameter expt_10 MORE .)
    FLOAT           reduce using rule 41 (typeParameters -> LESS typeParameter expt_10 MORE .)
    DOUBLE          reduce using rule 41 (typeParameters -> LESS typeParameter expt_10 MORE .)
    Identifier      reduce using rule 41 (typeParameters -> LESS typeParameter expt_10 MORE .)


state 457

    (459) expt_10 -> expt_10 COMMA . typeParameter
    (43) typeParameter -> . Identifier expt_11
    (44) typeParameter -> . Identifier empty

    Identifier      shift and go to state 174

    typeParameter                  shift and go to state 573

state 458

    (42) typeParameters -> LESS typeParameter empty MORE .

    EXTENDS         reduce using rule 42 (typeParameters -> LESS typeParameter empty MORE .)
    BLPAREN         reduce using rule 42 (typeParameters -> LESS typeParameter empty MORE .)
    IMPLEMENTS      reduce using rule 42 (typeParameters -> LESS typeParameter empty MORE .)
    VOID            reduce using rule 42 (typeParameters -> LESS typeParameter empty MORE .)
    BOOLEAN         reduce using rule 42 (typeParameters -> LESS typeParameter empty MORE .)
    CHAR            reduce using rule 42 (typeParameters -> LESS typeParameter empty MORE .)
    BYTE            reduce using rule 42 (typeParameters -> LESS typeParameter empty MORE .)
    SHORT           reduce using rule 42 (typeParameters -> LESS typeParameter empty MORE .)
    INT             reduce using rule 42 (typeParameters -> LESS typeParameter empty MORE .)
    LONG            reduce using rule 42 (typeParameters -> LESS typeParameter empty MORE .)
    FLOAT           reduce using rule 42 (typeParameters -> LESS typeParameter empty MORE .)
    DOUBLE          reduce using rule 42 (typeParameters -> LESS typeParameter empty MORE .)
    Identifier      reduce using rule 42 (typeParameters -> LESS typeParameter empty MORE .)


state 459

    (460) expt_11 -> EXTENDS typeBound .

    COMMA           reduce using rule 460 (expt_11 -> EXTENDS typeBound .)
    MORE            reduce using rule 460 (expt_11 -> EXTENDS typeBound .)


state 460

    (45) typeBound -> type . expt_12
    (46) typeBound -> type . empty
    (462) expt_12 -> . AND type
    (463) expt_12 -> . expt_12 AND type
    (584) empty -> .

    AND             shift and go to state 574
    COMMA           reduce using rule 584 (empty -> .)
    MORE            reduce using rule 584 (empty -> .)

    expt_12                        shift and go to state 575
    empty                          shift and go to state 576

state 461

    (33) normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .

    BRPAREN         reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    SEMI            reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    Identifier      reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    CONTINUE        reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    BREAK           reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    THROW           reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    RETURN          reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    SYNCHRONIZED    reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    SWITCH          reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    TRY             reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    DO              reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    WHILE           reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    FOR             reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    IF              reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    ASSERT          reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    BLPAREN         reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    BOOLEAN         reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    CHAR            reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    BYTE            reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    SHORT           reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    INT             reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    LONG            reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    FLOAT           reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    DOUBLE          reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    PUBLIC          reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    PROTECTED       reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    PRIVATE         reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    ABSTRACT        reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    STATIC          reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    FINAL           reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    STRICTFP        reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    CLASS           reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    ENUM            reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    INTERFACE       reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    AT              reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    PLUS            reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    DASH            reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    OP_INC          reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    OP_DEC          reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    EXCLAMATION     reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    TILDE           reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    VOID            reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    NEW             reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    SUPER           reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    THIS            reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    LPAREN          reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    CharacterLiteral reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    StringLiteral   reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    NULL            reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    NUMBER          reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    HEX_NUMBER      reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    LONG_NUMBER     reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    LONG_HEX_NUMBER reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    NON_INTEGER_1   reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    NON_INTEGER_2   reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    NON_INTEGER_3   reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    TRUE            reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    FALSE           reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    $end            reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    CASE            reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    DEFAULT         reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    NATIVE          reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    TRANSIENT       reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    VOLATILE        reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)
    LESS            reduce using rule 33 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 expt_9 classBody .)


state 462

    (34) normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .

    BRPAREN         reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    SEMI            reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    Identifier      reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    CONTINUE        reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    BREAK           reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    THROW           reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    RETURN          reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    SYNCHRONIZED    reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    SWITCH          reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    TRY             reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    DO              reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    WHILE           reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    FOR             reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    IF              reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    ASSERT          reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    BLPAREN         reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    BOOLEAN         reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    CHAR            reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    BYTE            reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    SHORT           reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    INT             reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    LONG            reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    FLOAT           reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    DOUBLE          reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    PUBLIC          reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    PROTECTED       reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    PRIVATE         reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    ABSTRACT        reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    STATIC          reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    FINAL           reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    STRICTFP        reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    CLASS           reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    ENUM            reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    INTERFACE       reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    AT              reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    PLUS            reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    DASH            reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    OP_INC          reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    OP_DEC          reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    EXCLAMATION     reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    TILDE           reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    VOID            reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    NEW             reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    SUPER           reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    THIS            reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    LPAREN          reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    CharacterLiteral reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    StringLiteral   reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    NULL            reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    NUMBER          reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    HEX_NUMBER      reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    LONG_NUMBER     reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    LONG_HEX_NUMBER reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    NON_INTEGER_1   reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    NON_INTEGER_2   reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    NON_INTEGER_3   reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    TRUE            reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    FALSE           reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    $end            reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    CASE            reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    DEFAULT         reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    NATIVE          reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    TRANSIENT       reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    VOLATILE        reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)
    LESS            reduce using rule 34 (normalClassDeclaration -> CLASS Identifier typeParameters expt_8 empty classBody .)


state 463

    (35) normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .

    BRPAREN         reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    SEMI            reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    Identifier      reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    CONTINUE        reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    BREAK           reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    THROW           reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    RETURN          reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    SYNCHRONIZED    reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    SWITCH          reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    TRY             reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    DO              reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    WHILE           reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    FOR             reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    IF              reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    ASSERT          reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    BLPAREN         reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    BOOLEAN         reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    CHAR            reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    BYTE            reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    SHORT           reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    INT             reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    LONG            reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    FLOAT           reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    DOUBLE          reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    PUBLIC          reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    PROTECTED       reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    PRIVATE         reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    ABSTRACT        reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    STATIC          reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    FINAL           reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    STRICTFP        reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    CLASS           reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    ENUM            reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    INTERFACE       reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    AT              reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    PLUS            reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    DASH            reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    OP_INC          reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    OP_DEC          reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    EXCLAMATION     reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    TILDE           reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    VOID            reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    NEW             reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    SUPER           reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    THIS            reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    LPAREN          reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    CharacterLiteral reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    StringLiteral   reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    NULL            reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    NUMBER          reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    HEX_NUMBER      reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    LONG_NUMBER     reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    LONG_HEX_NUMBER reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    NON_INTEGER_1   reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    NON_INTEGER_2   reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    NON_INTEGER_3   reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    TRUE            reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    FALSE           reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    $end            reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    CASE            reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    DEFAULT         reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    NATIVE          reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    TRANSIENT       reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    VOLATILE        reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)
    LESS            reduce using rule 35 (normalClassDeclaration -> CLASS Identifier typeParameters empty expt_9 classBody .)


state 464

    (36) normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .

    BRPAREN         reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    SEMI            reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    Identifier      reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    CONTINUE        reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    BREAK           reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    THROW           reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    RETURN          reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    SYNCHRONIZED    reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    SWITCH          reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    TRY             reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    DO              reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    WHILE           reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    FOR             reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    IF              reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    ASSERT          reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    BLPAREN         reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    BOOLEAN         reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    CHAR            reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    BYTE            reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    SHORT           reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    INT             reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    LONG            reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    FLOAT           reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    DOUBLE          reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    PUBLIC          reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    PROTECTED       reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    PRIVATE         reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    ABSTRACT        reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    STATIC          reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    FINAL           reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    STRICTFP        reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    CLASS           reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    ENUM            reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    INTERFACE       reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    AT              reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    PLUS            reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    DASH            reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    OP_INC          reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    OP_DEC          reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    EXCLAMATION     reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    TILDE           reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    VOID            reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    NEW             reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    SUPER           reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    THIS            reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    LPAREN          reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    CharacterLiteral reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    StringLiteral   reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    NULL            reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    NUMBER          reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    HEX_NUMBER      reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    LONG_NUMBER     reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    LONG_HEX_NUMBER reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    NON_INTEGER_1   reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    NON_INTEGER_2   reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    NON_INTEGER_3   reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    TRUE            reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    FALSE           reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    $end            reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    CASE            reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    DEFAULT         reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    NATIVE          reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    TRANSIENT       reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    VOLATILE        reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)
    LESS            reduce using rule 36 (normalClassDeclaration -> CLASS Identifier typeParameters empty empty classBody .)


state 465

    (37) normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .

    BRPAREN         reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    SEMI            reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    Identifier      reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    CONTINUE        reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    BREAK           reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    THROW           reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    RETURN          reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    SYNCHRONIZED    reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    SWITCH          reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    TRY             reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    DO              reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    WHILE           reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    FOR             reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    IF              reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    ASSERT          reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    BLPAREN         reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    BOOLEAN         reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    CHAR            reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    BYTE            reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    SHORT           reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    INT             reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    LONG            reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    FLOAT           reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    DOUBLE          reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    PUBLIC          reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    PROTECTED       reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    PRIVATE         reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    ABSTRACT        reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    STATIC          reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    FINAL           reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    STRICTFP        reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    CLASS           reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    ENUM            reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    INTERFACE       reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    AT              reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    PLUS            reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    DASH            reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    OP_INC          reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    OP_DEC          reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    EXCLAMATION     reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    TILDE           reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    VOID            reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    NEW             reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    SUPER           reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    THIS            reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    LPAREN          reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    CharacterLiteral reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    StringLiteral   reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    NULL            reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    NUMBER          reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    HEX_NUMBER      reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    LONG_NUMBER     reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    LONG_HEX_NUMBER reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    NON_INTEGER_1   reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    NON_INTEGER_2   reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    NON_INTEGER_3   reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    TRUE            reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    FALSE           reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    $end            reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    CASE            reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    DEFAULT         reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    NATIVE          reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    TRANSIENT       reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    VOLATILE        reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)
    LESS            reduce using rule 37 (normalClassDeclaration -> CLASS Identifier empty expt_8 expt_9 classBody .)


state 466

    (38) normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .

    BRPAREN         reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    SEMI            reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    Identifier      reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    CONTINUE        reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    BREAK           reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    THROW           reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    RETURN          reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    SYNCHRONIZED    reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    SWITCH          reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    TRY             reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    DO              reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    WHILE           reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    FOR             reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    IF              reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    ASSERT          reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    BLPAREN         reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    BOOLEAN         reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    CHAR            reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    BYTE            reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    SHORT           reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    INT             reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    LONG            reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    FLOAT           reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    DOUBLE          reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    PUBLIC          reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    PROTECTED       reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    PRIVATE         reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    ABSTRACT        reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    STATIC          reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    FINAL           reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    STRICTFP        reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    CLASS           reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    ENUM            reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    INTERFACE       reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    AT              reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    PLUS            reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    DASH            reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    OP_INC          reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    OP_DEC          reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    EXCLAMATION     reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    TILDE           reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    VOID            reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    NEW             reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    SUPER           reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    THIS            reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    LPAREN          reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    CharacterLiteral reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    StringLiteral   reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    NULL            reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    NUMBER          reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    HEX_NUMBER      reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    LONG_NUMBER     reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    LONG_HEX_NUMBER reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    NON_INTEGER_1   reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    NON_INTEGER_2   reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    NON_INTEGER_3   reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    TRUE            reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    FALSE           reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    $end            reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    CASE            reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    DEFAULT         reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    NATIVE          reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    TRANSIENT       reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    VOLATILE        reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)
    LESS            reduce using rule 38 (normalClassDeclaration -> CLASS Identifier empty expt_8 empty classBody .)


state 467

    (39) normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .

    BRPAREN         reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    SEMI            reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    Identifier      reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    CONTINUE        reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    BREAK           reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    THROW           reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    RETURN          reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    SYNCHRONIZED    reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    SWITCH          reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    TRY             reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    DO              reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    WHILE           reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    FOR             reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    IF              reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    ASSERT          reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    BLPAREN         reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    BOOLEAN         reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    CHAR            reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    BYTE            reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    SHORT           reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    INT             reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    LONG            reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    FLOAT           reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    DOUBLE          reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    PUBLIC          reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    PROTECTED       reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    PRIVATE         reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    ABSTRACT        reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    STATIC          reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    FINAL           reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    STRICTFP        reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    CLASS           reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    ENUM            reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    INTERFACE       reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    AT              reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    PLUS            reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    DASH            reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    OP_INC          reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    OP_DEC          reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    EXCLAMATION     reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    TILDE           reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    VOID            reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    NEW             reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    SUPER           reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    THIS            reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    LPAREN          reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    CharacterLiteral reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    StringLiteral   reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    NULL            reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    NUMBER          reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    HEX_NUMBER      reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    LONG_NUMBER     reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    LONG_HEX_NUMBER reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    NON_INTEGER_1   reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    NON_INTEGER_2   reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    NON_INTEGER_3   reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    TRUE            reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    FALSE           reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    $end            reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    CASE            reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    DEFAULT         reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    NATIVE          reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    TRANSIENT       reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    VOLATILE        reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)
    LESS            reduce using rule 39 (normalClassDeclaration -> CLASS Identifier empty empty expt_9 classBody .)


state 468

    (40) normalClassDeclaration -> CLASS Identifier empty empty empty classBody .

    BRPAREN         reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    SEMI            reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    Identifier      reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    CONTINUE        reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    BREAK           reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    THROW           reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    RETURN          reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    SYNCHRONIZED    reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    SWITCH          reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    TRY             reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    DO              reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    WHILE           reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    FOR             reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    IF              reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    ASSERT          reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    BLPAREN         reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    BOOLEAN         reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    CHAR            reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    BYTE            reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    SHORT           reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    INT             reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    LONG            reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    FLOAT           reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    DOUBLE          reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    PUBLIC          reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    PROTECTED       reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    PRIVATE         reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    ABSTRACT        reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    STATIC          reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    FINAL           reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    STRICTFP        reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    CLASS           reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    ENUM            reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    INTERFACE       reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    AT              reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    PLUS            reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    DASH            reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    OP_INC          reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    OP_DEC          reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    EXCLAMATION     reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    TILDE           reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    VOID            reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    NEW             reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    SUPER           reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    THIS            reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    LPAREN          reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    CharacterLiteral reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    StringLiteral   reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    NULL            reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    NUMBER          reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    HEX_NUMBER      reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    LONG_NUMBER     reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    LONG_HEX_NUMBER reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    NON_INTEGER_1   reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    NON_INTEGER_2   reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    NON_INTEGER_3   reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    TRUE            reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    FALSE           reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    $end            reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    CASE            reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    DEFAULT         reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    NATIVE          reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    TRANSIENT       reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    VOLATILE        reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)
    LESS            reduce using rule 40 (normalClassDeclaration -> CLASS Identifier empty empty empty classBody .)


state 469

    (98) interfaceBodyDeclaration -> SEMI .

    BRPAREN         reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    SEMI            reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    PUBLIC          reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    PROTECTED       reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    PRIVATE         reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    STATIC          reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    ABSTRACT        reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    FINAL           reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    NATIVE          reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    SYNCHRONIZED    reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    TRANSIENT       reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    VOLATILE        reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    STRICTFP        reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    AT              reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    VOID            reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    LESS            reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    INTERFACE       reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    CLASS           reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    ENUM            reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    BOOLEAN         reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    CHAR            reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    BYTE            reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    SHORT           reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    INT             reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    LONG            reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    FLOAT           reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    DOUBLE          reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)
    Identifier      reduce using rule 98 (interfaceBodyDeclaration -> SEMI .)


state 470

    (80) interfaceBody -> BLPAREN empty . BRPAREN
    (30) modifiers -> empty .

    BRPAREN         shift and go to state 577
    VOID            reduce using rule 30 (modifiers -> empty .)
    LESS            reduce using rule 30 (modifiers -> empty .)
    INTERFACE       reduce using rule 30 (modifiers -> empty .)
    AT              reduce using rule 30 (modifiers -> empty .)
    CLASS           reduce using rule 30 (modifiers -> empty .)
    ENUM            reduce using rule 30 (modifiers -> empty .)
    BOOLEAN         reduce using rule 30 (modifiers -> empty .)
    CHAR            reduce using rule 30 (modifiers -> empty .)
    BYTE            reduce using rule 30 (modifiers -> empty .)
    SHORT           reduce using rule 30 (modifiers -> empty .)
    INT             reduce using rule 30 (modifiers -> empty .)
    LONG            reduce using rule 30 (modifiers -> empty .)
    FLOAT           reduce using rule 30 (modifiers -> empty .)
    DOUBLE          reduce using rule 30 (modifiers -> empty .)
    Identifier      reduce using rule 30 (modifiers -> empty .)


state 471

    (79) interfaceBody -> BLPAREN expt_23 . BRPAREN
    (483) expt_23 -> expt_23 . interfaceBodyDeclaration
    (97) interfaceBodyDeclaration -> . modifiers interfaceMemberDecl
    (98) interfaceBodyDeclaration -> . SEMI
    (29) modifiers -> . expt_6
    (30) modifiers -> . empty
    (451) expt_6 -> . modifier
    (452) expt_6 -> . expt_6 modifier
    (584) empty -> .
    (137) modifier -> . annotation
    (138) modifier -> . PUBLIC
    (139) modifier -> . PROTECTED
    (140) modifier -> . PRIVATE
    (141) modifier -> . STATIC
    (142) modifier -> . ABSTRACT
    (143) modifier -> . FINAL
    (144) modifier -> . NATIVE
    (145) modifier -> . SYNCHRONIZED
    (146) modifier -> . TRANSIENT
    (147) modifier -> . VOLATILE
    (148) modifier -> . STRICTFP
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for AT resolved as shift
    BRPAREN         shift and go to state 578
    SEMI            shift and go to state 469
    VOID            reduce using rule 584 (empty -> .)
    LESS            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    BOOLEAN         reduce using rule 584 (empty -> .)
    CHAR            reduce using rule 584 (empty -> .)
    BYTE            reduce using rule 584 (empty -> .)
    SHORT           reduce using rule 584 (empty -> .)
    INT             reduce using rule 584 (empty -> .)
    LONG            reduce using rule 584 (empty -> .)
    FLOAT           reduce using rule 584 (empty -> .)
    DOUBLE          reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    PUBLIC          shift and go to state 310
    PROTECTED       shift and go to state 295
    PRIVATE         shift and go to state 300
    STATIC          shift and go to state 296
    ABSTRACT        shift and go to state 294
    FINAL           shift and go to state 297
    NATIVE          shift and go to state 298
    SYNCHRONIZED    shift and go to state 293
    TRANSIENT       shift and go to state 307
    VOLATILE        shift and go to state 308
    STRICTFP        shift and go to state 301
    AT              shift and go to state 8

  ! AT              [ reduce using rule 584 (empty -> .) ]

    modifiers                      shift and go to state 473
    expt_6                         shift and go to state 299
    interfaceBodyDeclaration       shift and go to state 579
    modifier                       shift and go to state 309
    annotation                     shift and go to state 304
    empty                          shift and go to state 445

state 472

    (482) expt_23 -> interfaceBodyDeclaration .

    BRPAREN         reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    SEMI            reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    PUBLIC          reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    PROTECTED       reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    PRIVATE         reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    STATIC          reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    ABSTRACT        reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    FINAL           reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    NATIVE          reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    SYNCHRONIZED    reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    TRANSIENT       reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    VOLATILE        reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    STRICTFP        reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    AT              reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    VOID            reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    LESS            reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    INTERFACE       reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    CLASS           reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    ENUM            reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    BOOLEAN         reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    CHAR            reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    BYTE            reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    SHORT           reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    INT             reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    LONG            reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    FLOAT           reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    DOUBLE          reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)
    Identifier      reduce using rule 482 (expt_23 -> interfaceBodyDeclaration .)


state 473

    (97) interfaceBodyDeclaration -> modifiers . interfaceMemberDecl
    (99) interfaceMemberDecl -> . interfaceMethodOrFieldDecl
    (100) interfaceMemberDecl -> . interfaceGenericMethodDecl
    (101) interfaceMemberDecl -> . VOID Identifier voidInterfaceMethodDeclaratorRest
    (102) interfaceMemberDecl -> . interfaceDeclaration
    (103) interfaceMemberDecl -> . classDeclaration
    (104) interfaceMethodOrFieldDecl -> . type Identifier interfaceMethodOrFieldRest
    (117) interfaceGenericMethodDecl -> . typeParameters expr_3 Identifier interfaceMethodDeclaratorRest
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (41) typeParameters -> . LESS typeParameter expt_10 MORE
    (42) typeParameters -> . LESS typeParameter empty MORE
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    VOID            shift and go to state 580
    LESS            shift and go to state 92
    INTERFACE       shift and go to state 39
    AT              shift and go to state 70
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    interfaceMethodOrFieldDecl     shift and go to state 581
    typeParameters                 shift and go to state 582
    normalInterfaceDeclaration     shift and go to state 18
    normalClassDeclaration         shift and go to state 20
    interfaceMemberDecl            shift and go to state 583
    classOrInterfaceType           shift and go to state 164
    interfaceGenericMethodDecl     shift and go to state 584
    type                           shift and go to state 585
    enumDeclaration                shift and go to state 27
    classDeclaration               shift and go to state 586
    primitiveType                  shift and go to state 165
    annotationTypeDeclaration      shift and go to state 36
    interfaceDeclaration           shift and go to state 587

state 474

    (553) expt_63 -> expt_63 OP_LOR conditionalAndExpression .

    OP_LOR          reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    QUES            reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    RPAREN          reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    COMMA           reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    BRPAREN         reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    EQUALS          reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    ASS_ADD         reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    ASS_SUB         reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    ASS_MUL         reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    ASS_DIV         reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    ASS_AND         reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    ASS_OR          reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    ASS_XOR         reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    ASS_MOD         reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    ASS_SHL         reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    ASS_SHRR        reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    ASS_SHR         reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    FRPAREN         reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    COLON           reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)
    SEMI            reduce using rule 553 (expt_63 -> expt_63 OP_LOR conditionalAndExpression .)


state 475

    (557) expt_65 -> expt_65 VERTICAL exclusiveOrExpression .

    VERTICAL        reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    OP_LAND         reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    OP_LOR          reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    QUES            reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    RPAREN          reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    COMMA           reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    BRPAREN         reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    EQUALS          reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    ASS_ADD         reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    ASS_SUB         reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    ASS_MUL         reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    ASS_DIV         reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    ASS_AND         reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    ASS_OR          reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    ASS_XOR         reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    ASS_MOD         reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    ASS_SHL         reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    ASS_SHRR        reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    ASS_SHR         reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    FRPAREN         reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    COLON           reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)
    SEMI            reduce using rule 557 (expt_65 -> expt_65 VERTICAL exclusiveOrExpression .)


state 476

    (563) expt_68 -> expt_68 expr_11 instanceOfExpression .

    OP_EQ           reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    OP_NE           reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    AND             reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    CARET           reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    VERTICAL        reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    OP_LAND         reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    OP_LOR          reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    QUES            reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    RPAREN          reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    COMMA           reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    BRPAREN         reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    EQUALS          reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    ASS_ADD         reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    ASS_SUB         reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    ASS_MUL         reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    ASS_DIV         reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    ASS_AND         reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    ASS_OR          reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    ASS_XOR         reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    ASS_MOD         reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    ASS_SHL         reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    ASS_SHRR        reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    ASS_SHR         reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    FRPAREN         reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    COLON           reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)
    SEMI            reduce using rule 563 (expt_68 -> expt_68 expr_11 instanceOfExpression .)


state 477

    (372) identifierSuffix -> suffixStatements DOT CLASS .

    OP_INC          reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    OP_DEC          reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    FLPAREN         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    DOT             reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    MULT            reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    SLASH           reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    PERCENT         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    PLUS            reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    DASH            reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    OP_SHR          reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    OP_SHL          reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    OP_SHRR         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    OP_LE           reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    OP_GE           reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    LESS            reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    MORE            reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    INSTANCEOF      reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    OP_EQ           reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    OP_NE           reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    AND             reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    CARET           reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    VERTICAL        reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    OP_LAND         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    OP_LOR          reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    QUES            reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    RPAREN          reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    COMMA           reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    BRPAREN         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    EQUALS          reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    ASS_ADD         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    ASS_SUB         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    ASS_MUL         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    ASS_DIV         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    ASS_AND         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    ASS_OR          reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    ASS_XOR         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    ASS_MOD         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    ASS_SHL         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    ASS_SHRR        reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    ASS_SHR         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    FRPAREN         reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    COLON           reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)
    SEMI            reduce using rule 372 (identifierSuffix -> suffixStatements DOT CLASS .)


state 478

    (434) suffixStatements -> suffixStatements FLPAREN FRPAREN .

    DOT             reduce using rule 434 (suffixStatements -> suffixStatements FLPAREN FRPAREN .)
    FLPAREN         reduce using rule 434 (suffixStatements -> suffixStatements FLPAREN FRPAREN .)


state 479

    (435) suffixExprStatements -> FLPAREN expression FRPAREN .

    FLPAREN         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    OP_INC          reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    OP_DEC          reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    DOT             reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    MULT            reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    SLASH           reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    PERCENT         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    PLUS            reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    DASH            reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    OP_SHR          reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    OP_SHL          reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    OP_SHRR         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    OP_LE           reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    OP_GE           reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    LESS            reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    MORE            reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    INSTANCEOF      reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    OP_EQ           reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    OP_NE           reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    AND             reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    CARET           reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    VERTICAL        reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    OP_LAND         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    OP_LOR          reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    QUES            reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    EQUALS          reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    ASS_ADD         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    ASS_SUB         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    ASS_MUL         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    ASS_DIV         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    ASS_AND         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    ASS_OR          reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    ASS_XOR         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    ASS_MOD         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    ASS_SHL         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    ASS_SHRR        reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    ASS_SHR         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    COLON           reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    SEMI            reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    RPAREN          reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    COMMA           reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    BRPAREN         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)
    FRPAREN         reduce using rule 435 (suffixExprStatements -> FLPAREN expression FRPAREN .)


state 480

    (436) suffixExprStatements -> suffixExprStatements FLPAREN expression . FRPAREN

    FRPAREN         shift and go to state 588


state 481

    (401) arguments -> LPAREN expressionList RPAREN .

    OP_INC          reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    OP_DEC          reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    FLPAREN         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    DOT             reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    MULT            reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    SLASH           reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    PERCENT         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    PLUS            reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    DASH            reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    OP_SHR          reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    OP_SHL          reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    OP_SHRR         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    OP_LE           reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    OP_GE           reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    LESS            reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    MORE            reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    INSTANCEOF      reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    OP_EQ           reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    OP_NE           reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    AND             reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    CARET           reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    VERTICAL        reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    OP_LAND         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    OP_LOR          reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    QUES            reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    EQUALS          reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    ASS_ADD         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    ASS_SUB         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    ASS_MUL         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    ASS_DIV         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    ASS_AND         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    ASS_OR          reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    ASS_XOR         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    ASS_MOD         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    ASS_SHL         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    ASS_SHRR        reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    ASS_SHR         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    SEMI            reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    RPAREN          reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    COMMA           reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    BRPAREN         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    FRPAREN         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    COLON           reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)
    BLPAREN         reduce using rule 401 (arguments -> LPAREN expressionList RPAREN .)


state 482

    (550) expt_60 -> COMMA . expression
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 589

state 483

    (294) expressionList -> expression expt_60 .
    (551) expt_60 -> expt_60 . COMMA expression

    SEMI            reduce using rule 294 (expressionList -> expression expt_60 .)
    RPAREN          reduce using rule 294 (expressionList -> expression expt_60 .)
    COMMA           shift and go to state 590


state 484

    (390) explicitGenericInvocation -> nonWildcardTypeArguments Identifier . arguments
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

    LPAREN          shift and go to state 204

    arguments                      shift and go to state 591

state 485

    (379) identifierSuffix -> DOT NEW innerCreator .

    OP_INC          reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    OP_DEC          reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    FLPAREN         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    DOT             reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    MULT            reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    SLASH           reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    PERCENT         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    PLUS            reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    DASH            reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    OP_SHR          reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    OP_SHL          reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    OP_SHRR         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    OP_LE           reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    OP_GE           reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    LESS            reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    MORE            reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    INSTANCEOF      reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    OP_EQ           reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    OP_NE           reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    AND             reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    CARET           reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    VERTICAL        reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    OP_LAND         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    OP_LOR          reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    QUES            reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    RPAREN          reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    COMMA           reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    BRPAREN         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    EQUALS          reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_ADD         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_SUB         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_MUL         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_DIV         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_AND         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_OR          reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_XOR         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_MOD         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_SHL         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_SHRR        reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_SHR         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    FRPAREN         reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    COLON           reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)
    SEMI            reduce using rule 379 (identifierSuffix -> DOT NEW innerCreator .)


state 486

    (518) expt_41 -> nonWildcardTypeArguments .

    THIS            reduce using rule 518 (expt_41 -> nonWildcardTypeArguments .)
    SUPER           reduce using rule 518 (expt_41 -> nonWildcardTypeArguments .)
    Identifier      reduce using rule 518 (expt_41 -> nonWildcardTypeArguments .)


state 487

    (386) innerCreator -> empty . Identifier classCreatorRest
    (519) expt_41 -> empty .

  ! shift/reduce conflict for Identifier resolved as shift
    Identifier      shift and go to state 592

  ! Identifier      [ reduce using rule 519 (expt_41 -> empty .) ]


state 488

    (385) innerCreator -> expt_41 . Identifier classCreatorRest

    Identifier      shift and go to state 593


state 489

    (378) identifierSuffix -> DOT SUPER arguments .

    OP_INC          reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    OP_DEC          reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    FLPAREN         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    DOT             reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    MULT            reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    SLASH           reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    PERCENT         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    PLUS            reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    DASH            reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    OP_SHR          reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    OP_SHL          reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    OP_SHRR         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    OP_LE           reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    OP_GE           reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    LESS            reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    MORE            reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    INSTANCEOF      reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    OP_EQ           reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    OP_NE           reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    AND             reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    CARET           reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    VERTICAL        reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    OP_LAND         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    OP_LOR          reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    QUES            reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    RPAREN          reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    COMMA           reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    BRPAREN         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    EQUALS          reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    ASS_ADD         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    ASS_SUB         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    ASS_MUL         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    ASS_DIV         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    ASS_AND         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    ASS_OR          reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    ASS_XOR         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    ASS_MOD         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    ASS_SHL         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    ASS_SHRR        reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    ASS_SHR         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    FRPAREN         reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    COLON           reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)
    SEMI            reduce using rule 378 (identifierSuffix -> DOT SUPER arguments .)


state 490

    (555) expt_64 -> expt_64 OP_LAND inclusiveOrExpression .

    OP_LAND         reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    OP_LOR          reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    QUES            reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    RPAREN          reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    COMMA           reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    BRPAREN         reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    EQUALS          reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    ASS_ADD         reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    ASS_SUB         reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    ASS_MUL         reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    ASS_DIV         reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    ASS_AND         reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    ASS_OR          reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    ASS_XOR         reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    ASS_MOD         reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    ASS_SHL         reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    ASS_SHRR        reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    ASS_SHR         reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    FRPAREN         reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    COLON           reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)
    SEMI            reduce using rule 555 (expt_64 -> expt_64 OP_LAND inclusiveOrExpression .)


state 491

    (523) expt_44 -> expt_44 COMMA elementValuePair .

    COMMA           reduce using rule 523 (expt_44 -> expt_44 COMMA elementValuePair .)
    RPAREN          reduce using rule 523 (expt_44 -> expt_44 COMMA elementValuePair .)


state 492

    (567) expt_71 -> expt_71 shiftOp additiveExpression .

    OP_SHR          reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    OP_SHL          reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    OP_SHRR         reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    OP_LE           reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    OP_GE           reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    LESS            reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    MORE            reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    INSTANCEOF      reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    OP_EQ           reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    OP_NE           reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    AND             reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    CARET           reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    VERTICAL        reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    OP_LAND         reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    OP_LOR          reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    QUES            reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    RPAREN          reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    COMMA           reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    BRPAREN         reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    EQUALS          reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    ASS_ADD         reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    ASS_SUB         reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    ASS_MUL         reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    ASS_DIV         reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    ASS_AND         reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    ASS_OR          reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    ASS_XOR         reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    ASS_MOD         reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    ASS_SHL         reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    ASS_SHRR        reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    ASS_SHR         reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    FRPAREN         reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    COLON           reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)
    SEMI            reduce using rule 567 (expt_71 -> expt_71 shiftOp additiveExpression .)


state 493

    (559) expt_66 -> expt_66 CARET andExpression .

    CARET           reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    VERTICAL        reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    OP_LAND         reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    OP_LOR          reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    QUES            reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    RPAREN          reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    COMMA           reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    BRPAREN         reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    EQUALS          reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    ASS_ADD         reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    ASS_SUB         reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    ASS_MUL         reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    ASS_DIV         reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    ASS_AND         reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    ASS_OR          reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    ASS_XOR         reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    ASS_MOD         reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    ASS_SHL         reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    ASS_SHRR        reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    ASS_SHR         reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    FRPAREN         reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    COLON           reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)
    SEMI            reduce using rule 559 (expt_66 -> expt_66 CARET andExpression .)


state 494

    (215) elementValueArrayInitializer -> BLPAREN expt_46 expt_30 BRPAREN .

    COMMA           reduce using rule 215 (elementValueArrayInitializer -> BLPAREN expt_46 expt_30 BRPAREN .)
    RPAREN          reduce using rule 215 (elementValueArrayInitializer -> BLPAREN expt_46 expt_30 BRPAREN .)
    BRPAREN         reduce using rule 215 (elementValueArrayInitializer -> BLPAREN expt_46 expt_30 BRPAREN .)
    SEMI            reduce using rule 215 (elementValueArrayInitializer -> BLPAREN expt_46 expt_30 BRPAREN .)


state 495

    (216) elementValueArrayInitializer -> BLPAREN expt_46 empty BRPAREN .

    COMMA           reduce using rule 216 (elementValueArrayInitializer -> BLPAREN expt_46 empty BRPAREN .)
    RPAREN          reduce using rule 216 (elementValueArrayInitializer -> BLPAREN expt_46 empty BRPAREN .)
    BRPAREN         reduce using rule 216 (elementValueArrayInitializer -> BLPAREN expt_46 empty BRPAREN .)
    SEMI            reduce using rule 216 (elementValueArrayInitializer -> BLPAREN expt_46 empty BRPAREN .)


state 496

    (217) elementValueArrayInitializer -> BLPAREN empty expt_30 BRPAREN .

    COMMA           reduce using rule 217 (elementValueArrayInitializer -> BLPAREN empty expt_30 BRPAREN .)
    RPAREN          reduce using rule 217 (elementValueArrayInitializer -> BLPAREN empty expt_30 BRPAREN .)
    BRPAREN         reduce using rule 217 (elementValueArrayInitializer -> BLPAREN empty expt_30 BRPAREN .)
    SEMI            reduce using rule 217 (elementValueArrayInitializer -> BLPAREN empty expt_30 BRPAREN .)


state 497

    (218) elementValueArrayInitializer -> BLPAREN empty empty BRPAREN .

    COMMA           reduce using rule 218 (elementValueArrayInitializer -> BLPAREN empty empty BRPAREN .)
    RPAREN          reduce using rule 218 (elementValueArrayInitializer -> BLPAREN empty empty BRPAREN .)
    BRPAREN         reduce using rule 218 (elementValueArrayInitializer -> BLPAREN empty empty BRPAREN .)
    SEMI            reduce using rule 218 (elementValueArrayInitializer -> BLPAREN empty empty BRPAREN .)


state 498

    (525) expt_45 -> expt_45 COMMA . elementValue
    (212) elementValue -> . conditionalExpression
    (213) elementValue -> . annotation
    (214) elementValue -> . elementValueArrayInitializer
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (215) elementValueArrayInitializer -> . BLPAREN expt_46 expt_30 BRPAREN
    (216) elementValueArrayInitializer -> . BLPAREN expt_46 empty BRPAREN
    (217) elementValueArrayInitializer -> . BLPAREN empty expt_30 BRPAREN
    (218) elementValueArrayInitializer -> . BLPAREN empty empty BRPAREN
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    AT              shift and go to state 8
    BLPAREN         shift and go to state 122
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 133
    unaryExpression                shift and go to state 149
    exclusiveOrExpression          shift and go to state 105
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    annotation                     shift and go to state 153
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    elementValueArrayInitializer   shift and go to state 140
    andExpression                  shift and go to state 121
    elementValue                   shift and go to state 594

state 499

    (524) expt_45 -> COMMA elementValue .

    COMMA           reduce using rule 524 (expt_45 -> COMMA elementValue .)
    BRPAREN         reduce using rule 524 (expt_45 -> COMMA elementValue .)


state 500

    (561) expt_67 -> expt_67 AND equalityExpression .

    AND             reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    CARET           reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    VERTICAL        reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    OP_LAND         reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    OP_LOR          reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    QUES            reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    RPAREN          reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    COMMA           reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    BRPAREN         reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    EQUALS          reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    ASS_ADD         reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    ASS_SUB         reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    ASS_MUL         reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    ASS_DIV         reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    ASS_AND         reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    ASS_OR          reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    ASS_XOR         reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    ASS_MOD         reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    ASS_SHL         reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    ASS_SHRR        reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    ASS_SHR         reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    FRPAREN         reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    COLON           reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)
    SEMI            reduce using rule 561 (expt_67 -> expt_67 AND equalityExpression .)


state 501

    (312) conditionalExpression -> conditionalOrExpression QUES expression COLON . expression
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 595

state 502

    (392) selector -> FLPAREN expression FRPAREN .

    OP_INC          reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    OP_DEC          reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    FLPAREN         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    DOT             reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    MULT            reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    SLASH           reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    PERCENT         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    PLUS            reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    DASH            reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    OP_SHR          reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    OP_SHL          reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    OP_SHRR         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    OP_LE           reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    OP_GE           reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    LESS            reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    MORE            reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    INSTANCEOF      reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    OP_EQ           reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    OP_NE           reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    AND             reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    CARET           reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    VERTICAL        reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    OP_LAND         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    OP_LOR          reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    QUES            reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    RPAREN          reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    COMMA           reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    BRPAREN         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    EQUALS          reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    ASS_ADD         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    ASS_SUB         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    ASS_MUL         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    ASS_DIV         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    ASS_AND         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    ASS_OR          reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    ASS_XOR         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    ASS_MOD         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    ASS_SHL         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    ASS_SHRR        reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    ASS_SHR         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    FRPAREN         reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    COLON           reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)
    SEMI            reduce using rule 392 (selector -> FLPAREN expression FRPAREN .)


state 503

    (394) selector -> DOT SUPER superSuffix .

    OP_INC          reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    OP_DEC          reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    FLPAREN         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    DOT             reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    MULT            reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    SLASH           reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    PERCENT         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    PLUS            reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    DASH            reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    OP_SHR          reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    OP_SHL          reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    OP_SHRR         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    OP_LE           reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    OP_GE           reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    LESS            reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    MORE            reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    INSTANCEOF      reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    OP_EQ           reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    OP_NE           reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    AND             reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    CARET           reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    VERTICAL        reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    OP_LAND         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    OP_LOR          reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    QUES            reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    RPAREN          reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    COMMA           reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    BRPAREN         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    EQUALS          reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    ASS_ADD         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    ASS_SUB         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    ASS_MUL         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    ASS_DIV         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    ASS_AND         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    ASS_OR          reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    ASS_XOR         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    ASS_MOD         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    ASS_SHL         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    ASS_SHRR        reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    ASS_SHR         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    FRPAREN         reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    COLON           reduce using rule 394 (selector -> DOT SUPER superSuffix .)
    SEMI            reduce using rule 394 (selector -> DOT SUPER superSuffix .)


state 504

    (393) selector -> DOT NEW innerCreator .

    OP_INC          reduce using rule 393 (selector -> DOT NEW innerCreator .)
    OP_DEC          reduce using rule 393 (selector -> DOT NEW innerCreator .)
    FLPAREN         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    DOT             reduce using rule 393 (selector -> DOT NEW innerCreator .)
    MULT            reduce using rule 393 (selector -> DOT NEW innerCreator .)
    SLASH           reduce using rule 393 (selector -> DOT NEW innerCreator .)
    PERCENT         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    PLUS            reduce using rule 393 (selector -> DOT NEW innerCreator .)
    DASH            reduce using rule 393 (selector -> DOT NEW innerCreator .)
    OP_SHR          reduce using rule 393 (selector -> DOT NEW innerCreator .)
    OP_SHL          reduce using rule 393 (selector -> DOT NEW innerCreator .)
    OP_SHRR         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    OP_LE           reduce using rule 393 (selector -> DOT NEW innerCreator .)
    OP_GE           reduce using rule 393 (selector -> DOT NEW innerCreator .)
    LESS            reduce using rule 393 (selector -> DOT NEW innerCreator .)
    MORE            reduce using rule 393 (selector -> DOT NEW innerCreator .)
    INSTANCEOF      reduce using rule 393 (selector -> DOT NEW innerCreator .)
    OP_EQ           reduce using rule 393 (selector -> DOT NEW innerCreator .)
    OP_NE           reduce using rule 393 (selector -> DOT NEW innerCreator .)
    AND             reduce using rule 393 (selector -> DOT NEW innerCreator .)
    CARET           reduce using rule 393 (selector -> DOT NEW innerCreator .)
    VERTICAL        reduce using rule 393 (selector -> DOT NEW innerCreator .)
    OP_LAND         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    OP_LOR          reduce using rule 393 (selector -> DOT NEW innerCreator .)
    QUES            reduce using rule 393 (selector -> DOT NEW innerCreator .)
    RPAREN          reduce using rule 393 (selector -> DOT NEW innerCreator .)
    COMMA           reduce using rule 393 (selector -> DOT NEW innerCreator .)
    BRPAREN         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    EQUALS          reduce using rule 393 (selector -> DOT NEW innerCreator .)
    ASS_ADD         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    ASS_SUB         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    ASS_MUL         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    ASS_DIV         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    ASS_AND         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    ASS_OR          reduce using rule 393 (selector -> DOT NEW innerCreator .)
    ASS_XOR         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    ASS_MOD         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    ASS_SHL         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    ASS_SHRR        reduce using rule 393 (selector -> DOT NEW innerCreator .)
    ASS_SHR         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    FRPAREN         reduce using rule 393 (selector -> DOT NEW innerCreator .)
    COLON           reduce using rule 393 (selector -> DOT NEW innerCreator .)
    SEMI            reduce using rule 393 (selector -> DOT NEW innerCreator .)


state 505

    (396) selector -> DOT Identifier expt_18 .

    OP_INC          reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    OP_DEC          reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    FLPAREN         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    DOT             reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    MULT            reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    SLASH           reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    PERCENT         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    PLUS            reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    DASH            reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    OP_SHR          reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    OP_SHL          reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    OP_SHRR         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    OP_LE           reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    OP_GE           reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    LESS            reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    MORE            reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    INSTANCEOF      reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    OP_EQ           reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    OP_NE           reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    AND             reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    CARET           reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    VERTICAL        reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    OP_LAND         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    OP_LOR          reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    QUES            reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    RPAREN          reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    COMMA           reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    BRPAREN         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    EQUALS          reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    ASS_ADD         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    ASS_SUB         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    ASS_MUL         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    ASS_DIV         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    ASS_AND         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    ASS_OR          reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    ASS_XOR         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    ASS_MOD         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    ASS_SHL         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    ASS_SHRR        reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    ASS_SHR         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    FRPAREN         reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    COLON           reduce using rule 396 (selector -> DOT Identifier expt_18 .)
    SEMI            reduce using rule 396 (selector -> DOT Identifier expt_18 .)


state 506

    (397) selector -> DOT Identifier empty .
    (475) expt_18 -> empty .

  ! reduce/reduce conflict for OP_INC resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_DEC resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for FLPAREN resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for DOT resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for MULT resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for SLASH resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for PERCENT resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for DASH resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_SHR resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_SHL resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_SHRR resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_LE resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_GE resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for LESS resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for MORE resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for INSTANCEOF resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_EQ resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_NE resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for AND resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for CARET resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for VERTICAL resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_LAND resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_LOR resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for QUES resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for RPAREN resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for BRPAREN resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for EQUALS resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_ADD resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_SUB resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_MUL resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_DIV resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_AND resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_OR resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_XOR resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_MOD resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_SHL resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_SHRR resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_SHR resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for FRPAREN resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for COLON resolved using rule 397 (selector -> DOT Identifier empty .)
  ! reduce/reduce conflict for SEMI resolved using rule 397 (selector -> DOT Identifier empty .)
    OP_INC          reduce using rule 397 (selector -> DOT Identifier empty .)
    OP_DEC          reduce using rule 397 (selector -> DOT Identifier empty .)
    FLPAREN         reduce using rule 397 (selector -> DOT Identifier empty .)
    DOT             reduce using rule 397 (selector -> DOT Identifier empty .)
    MULT            reduce using rule 397 (selector -> DOT Identifier empty .)
    SLASH           reduce using rule 397 (selector -> DOT Identifier empty .)
    PERCENT         reduce using rule 397 (selector -> DOT Identifier empty .)
    PLUS            reduce using rule 397 (selector -> DOT Identifier empty .)
    DASH            reduce using rule 397 (selector -> DOT Identifier empty .)
    OP_SHR          reduce using rule 397 (selector -> DOT Identifier empty .)
    OP_SHL          reduce using rule 397 (selector -> DOT Identifier empty .)
    OP_SHRR         reduce using rule 397 (selector -> DOT Identifier empty .)
    OP_LE           reduce using rule 397 (selector -> DOT Identifier empty .)
    OP_GE           reduce using rule 397 (selector -> DOT Identifier empty .)
    LESS            reduce using rule 397 (selector -> DOT Identifier empty .)
    MORE            reduce using rule 397 (selector -> DOT Identifier empty .)
    INSTANCEOF      reduce using rule 397 (selector -> DOT Identifier empty .)
    OP_EQ           reduce using rule 397 (selector -> DOT Identifier empty .)
    OP_NE           reduce using rule 397 (selector -> DOT Identifier empty .)
    AND             reduce using rule 397 (selector -> DOT Identifier empty .)
    CARET           reduce using rule 397 (selector -> DOT Identifier empty .)
    VERTICAL        reduce using rule 397 (selector -> DOT Identifier empty .)
    OP_LAND         reduce using rule 397 (selector -> DOT Identifier empty .)
    OP_LOR          reduce using rule 397 (selector -> DOT Identifier empty .)
    QUES            reduce using rule 397 (selector -> DOT Identifier empty .)
    RPAREN          reduce using rule 397 (selector -> DOT Identifier empty .)
    COMMA           reduce using rule 397 (selector -> DOT Identifier empty .)
    BRPAREN         reduce using rule 397 (selector -> DOT Identifier empty .)
    EQUALS          reduce using rule 397 (selector -> DOT Identifier empty .)
    ASS_ADD         reduce using rule 397 (selector -> DOT Identifier empty .)
    ASS_SUB         reduce using rule 397 (selector -> DOT Identifier empty .)
    ASS_MUL         reduce using rule 397 (selector -> DOT Identifier empty .)
    ASS_DIV         reduce using rule 397 (selector -> DOT Identifier empty .)
    ASS_AND         reduce using rule 397 (selector -> DOT Identifier empty .)
    ASS_OR          reduce using rule 397 (selector -> DOT Identifier empty .)
    ASS_XOR         reduce using rule 397 (selector -> DOT Identifier empty .)
    ASS_MOD         reduce using rule 397 (selector -> DOT Identifier empty .)
    ASS_SHL         reduce using rule 397 (selector -> DOT Identifier empty .)
    ASS_SHRR        reduce using rule 397 (selector -> DOT Identifier empty .)
    ASS_SHR         reduce using rule 397 (selector -> DOT Identifier empty .)
    FRPAREN         reduce using rule 397 (selector -> DOT Identifier empty .)
    COLON           reduce using rule 397 (selector -> DOT Identifier empty .)
    SEMI            reduce using rule 397 (selector -> DOT Identifier empty .)

  ! OP_INC          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_DEC          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! FLPAREN         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! DOT             [ reduce using rule 475 (expt_18 -> empty .) ]
  ! MULT            [ reduce using rule 475 (expt_18 -> empty .) ]
  ! SLASH           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! PERCENT         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! PLUS            [ reduce using rule 475 (expt_18 -> empty .) ]
  ! DASH            [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_SHR          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_SHL          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_SHRR         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_LE           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_GE           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! LESS            [ reduce using rule 475 (expt_18 -> empty .) ]
  ! MORE            [ reduce using rule 475 (expt_18 -> empty .) ]
  ! INSTANCEOF      [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_EQ           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_NE           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! AND             [ reduce using rule 475 (expt_18 -> empty .) ]
  ! CARET           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! VERTICAL        [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_LAND         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_LOR          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! QUES            [ reduce using rule 475 (expt_18 -> empty .) ]
  ! RPAREN          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! COMMA           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! BRPAREN         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! EQUALS          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_ADD         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_SUB         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_MUL         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_DIV         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_AND         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_OR          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_XOR         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_MOD         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_SHL         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_SHRR        [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_SHR         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! FRPAREN         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! COLON           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! SEMI            [ reduce using rule 475 (expt_18 -> empty .) ]


state 507

    (391) nonWildcardTypeArguments -> LESS typeList MORE .

    Identifier      reduce using rule 391 (nonWildcardTypeArguments -> LESS typeList MORE .)
    THIS            reduce using rule 391 (nonWildcardTypeArguments -> LESS typeList MORE .)
    SUPER           reduce using rule 391 (nonWildcardTypeArguments -> LESS typeList MORE .)
    BOOLEAN         reduce using rule 391 (nonWildcardTypeArguments -> LESS typeList MORE .)
    CHAR            reduce using rule 391 (nonWildcardTypeArguments -> LESS typeList MORE .)
    BYTE            reduce using rule 391 (nonWildcardTypeArguments -> LESS typeList MORE .)
    SHORT           reduce using rule 391 (nonWildcardTypeArguments -> LESS typeList MORE .)
    INT             reduce using rule 391 (nonWildcardTypeArguments -> LESS typeList MORE .)
    LONG            reduce using rule 391 (nonWildcardTypeArguments -> LESS typeList MORE .)
    FLOAT           reduce using rule 391 (nonWildcardTypeArguments -> LESS typeList MORE .)
    DOUBLE          reduce using rule 391 (nonWildcardTypeArguments -> LESS typeList MORE .)


state 508

    (380) creator -> nonWildcardTypeArguments createdName classCreatorRest .

    OP_INC          reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_DEC          reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    FLPAREN         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    DOT             reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    MULT            reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    SLASH           reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    PERCENT         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    PLUS            reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    DASH            reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_SHR          reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_SHL          reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_SHRR         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_LE           reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_GE           reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    LESS            reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    MORE            reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    INSTANCEOF      reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_EQ           reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_NE           reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    AND             reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    CARET           reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    VERTICAL        reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_LAND         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_LOR          reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    QUES            reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    RPAREN          reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    COMMA           reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    BRPAREN         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    EQUALS          reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_ADD         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_SUB         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_MUL         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_DIV         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_AND         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_OR          reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_XOR         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_MOD         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_SHL         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_SHRR        reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_SHR         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    FRPAREN         reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    COLON           reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    SEMI            reduce using rule 380 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)


state 509

    (438) expr_19 -> expression . FRPAREN expt_76 expt_24

    FRPAREN         shift and go to state 596


state 510

    (437) expr_19 -> FRPAREN . expt_24 arrayInitializer
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN

    FLPAREN         shift and go to state 245

    expt_24                        shift and go to state 597

state 511

    (387) arrayCreatorRest -> FLPAREN expr_19 .

    OP_INC          reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    OP_DEC          reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    FLPAREN         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    DOT             reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    MULT            reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    SLASH           reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    PERCENT         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    PLUS            reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    DASH            reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    OP_SHR          reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    OP_SHL          reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    OP_SHRR         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    OP_LE           reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    OP_GE           reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    LESS            reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    MORE            reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    INSTANCEOF      reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    OP_EQ           reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    OP_NE           reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    AND             reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    CARET           reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    VERTICAL        reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    OP_LAND         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    OP_LOR          reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    QUES            reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    RPAREN          reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    COMMA           reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    BRPAREN         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    EQUALS          reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    ASS_ADD         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    ASS_SUB         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    ASS_MUL         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    ASS_DIV         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    ASS_AND         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    ASS_OR          reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    ASS_XOR         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    ASS_MOD         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    ASS_SHL         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    ASS_SHRR        reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    ASS_SHR         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    FRPAREN         reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    COLON           reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)
    SEMI            reduce using rule 387 (arrayCreatorRest -> FLPAREN expr_19 .)


state 512

    (389) classCreatorRest -> arguments classBody .

    OP_INC          reduce using rule 389 (classCreatorRest -> arguments classBody .)
    OP_DEC          reduce using rule 389 (classCreatorRest -> arguments classBody .)
    FLPAREN         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    DOT             reduce using rule 389 (classCreatorRest -> arguments classBody .)
    MULT            reduce using rule 389 (classCreatorRest -> arguments classBody .)
    SLASH           reduce using rule 389 (classCreatorRest -> arguments classBody .)
    PERCENT         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    PLUS            reduce using rule 389 (classCreatorRest -> arguments classBody .)
    DASH            reduce using rule 389 (classCreatorRest -> arguments classBody .)
    OP_SHR          reduce using rule 389 (classCreatorRest -> arguments classBody .)
    OP_SHL          reduce using rule 389 (classCreatorRest -> arguments classBody .)
    OP_SHRR         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    OP_LE           reduce using rule 389 (classCreatorRest -> arguments classBody .)
    OP_GE           reduce using rule 389 (classCreatorRest -> arguments classBody .)
    LESS            reduce using rule 389 (classCreatorRest -> arguments classBody .)
    MORE            reduce using rule 389 (classCreatorRest -> arguments classBody .)
    INSTANCEOF      reduce using rule 389 (classCreatorRest -> arguments classBody .)
    OP_EQ           reduce using rule 389 (classCreatorRest -> arguments classBody .)
    OP_NE           reduce using rule 389 (classCreatorRest -> arguments classBody .)
    AND             reduce using rule 389 (classCreatorRest -> arguments classBody .)
    CARET           reduce using rule 389 (classCreatorRest -> arguments classBody .)
    VERTICAL        reduce using rule 389 (classCreatorRest -> arguments classBody .)
    OP_LAND         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    OP_LOR          reduce using rule 389 (classCreatorRest -> arguments classBody .)
    QUES            reduce using rule 389 (classCreatorRest -> arguments classBody .)
    RPAREN          reduce using rule 389 (classCreatorRest -> arguments classBody .)
    COMMA           reduce using rule 389 (classCreatorRest -> arguments classBody .)
    BRPAREN         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    EQUALS          reduce using rule 389 (classCreatorRest -> arguments classBody .)
    ASS_ADD         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    ASS_SUB         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    ASS_MUL         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    ASS_DIV         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    ASS_AND         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    ASS_OR          reduce using rule 389 (classCreatorRest -> arguments classBody .)
    ASS_XOR         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    ASS_MOD         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    ASS_SHL         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    ASS_SHRR        reduce using rule 389 (classCreatorRest -> arguments classBody .)
    ASS_SHR         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    FRPAREN         reduce using rule 389 (classCreatorRest -> arguments classBody .)
    COLON           reduce using rule 389 (classCreatorRest -> arguments classBody .)
    SEMI            reduce using rule 389 (classCreatorRest -> arguments classBody .)


state 513

    (485) expt_24 -> expt_24 FLPAREN FRPAREN .

    FLPAREN         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    COMMA           reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    BLPAREN         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    IMPLEMENTS      reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    OP_EQ           reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    OP_NE           reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    AND             reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    CARET           reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    VERTICAL        reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    OP_LAND         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    OP_LOR          reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    QUES            reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    RPAREN          reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    BRPAREN         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    EQUALS          reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    ASS_ADD         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    ASS_SUB         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    ASS_MUL         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    ASS_DIV         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    ASS_AND         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    ASS_OR          reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    ASS_XOR         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    ASS_MOD         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    ASS_SHL         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    ASS_SHRR        reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    ASS_SHR         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    FRPAREN         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    COLON           reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    SEMI            reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    MORE            reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    Identifier      reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    OP_ARRAY        reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    THROWS          reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    DOT             reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    OP_INC          reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    OP_DEC          reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    MULT            reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    SLASH           reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    PERCENT         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    PLUS            reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    DASH            reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    OP_SHR          reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    OP_SHL          reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    OP_SHRR         reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    OP_LE           reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    OP_GE           reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    LESS            reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)
    INSTANCEOF      reduce using rule 485 (expt_24 -> expt_24 FLPAREN FRPAREN .)


state 514

    (358) primary -> primitiveType expt_24 DOT CLASS .

    OP_INC          reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    OP_DEC          reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    FLPAREN         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    DOT             reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    MULT            reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    SLASH           reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    PERCENT         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    PLUS            reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    DASH            reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    OP_SHR          reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    OP_SHL          reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    OP_SHRR         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    OP_LE           reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    OP_GE           reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    LESS            reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    MORE            reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    INSTANCEOF      reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    OP_EQ           reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    OP_NE           reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    AND             reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    CARET           reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    VERTICAL        reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    OP_LAND         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    OP_LOR          reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    QUES            reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    RPAREN          reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    COMMA           reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    BRPAREN         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    EQUALS          reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    ASS_ADD         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    ASS_SUB         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    ASS_MUL         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    ASS_DIV         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    ASS_AND         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    ASS_OR          reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    ASS_XOR         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    ASS_MOD         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    ASS_SHL         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    ASS_SHRR        reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    ASS_SHR         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    FRPAREN         reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    COLON           reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)
    SEMI            reduce using rule 358 (primary -> primitiveType expt_24 DOT CLASS .)


state 515

    (569) expt_72 -> expt_72 expr_12 multiplicativeExpression .

    PLUS            reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    DASH            reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    OP_SHR          reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    OP_SHL          reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    OP_SHRR         reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    OP_LE           reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    OP_GE           reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    LESS            reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    MORE            reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    INSTANCEOF      reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    OP_EQ           reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    OP_NE           reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    AND             reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    CARET           reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    VERTICAL        reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    OP_LAND         reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    OP_LOR          reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    QUES            reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    RPAREN          reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    COMMA           reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    BRPAREN         reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    EQUALS          reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    ASS_ADD         reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    ASS_SUB         reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    ASS_MUL         reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    ASS_DIV         reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    ASS_AND         reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    ASS_OR          reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    ASS_XOR         reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    ASS_MOD         reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    ASS_SHL         reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    ASS_SHRR        reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    ASS_SHR         reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    FRPAREN         reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    COLON           reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)
    SEMI            reduce using rule 569 (expt_72 -> expt_72 expr_12 multiplicativeExpression .)


state 516

    (565) expt_70 -> expt_70 relationalOp shiftExpression .

    OP_LE           reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    OP_GE           reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    LESS            reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    MORE            reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    INSTANCEOF      reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    OP_EQ           reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    OP_NE           reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    AND             reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    CARET           reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    VERTICAL        reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    OP_LAND         reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    OP_LOR          reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    QUES            reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    RPAREN          reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    COMMA           reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    BRPAREN         reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    EQUALS          reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    ASS_ADD         reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    ASS_SUB         reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    ASS_MUL         reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    ASS_DIV         reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    ASS_AND         reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    ASS_OR          reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    ASS_XOR         reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    ASS_MOD         reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    ASS_SHL         reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    ASS_SHRR        reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    ASS_SHR         reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    FRPAREN         reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    COLON           reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)
    SEMI            reduce using rule 565 (expt_70 -> expt_70 relationalOp shiftExpression .)


state 517

    (298) expression -> conditionalExpression assignmentOperator expression .

    SEMI            reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    COLON           reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    RPAREN          reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    COMMA           reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    FRPAREN         reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    EQUALS          reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    ASS_ADD         reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    ASS_SUB         reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    ASS_MUL         reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    ASS_DIV         reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    ASS_AND         reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    ASS_OR          reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    ASS_XOR         reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    ASS_MOD         reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    ASS_SHL         reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    ASS_SHRR        reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    ASS_SHR         reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)
    BRPAREN         reduce using rule 298 (expression -> conditionalExpression assignmentOperator expression .)


state 518

    (356) castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .

    MULT            reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    SLASH           reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    PERCENT         reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    PLUS            reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    DASH            reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    OP_SHR          reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    OP_SHL          reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    OP_SHRR         reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    OP_LE           reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    OP_GE           reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    LESS            reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    MORE            reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    INSTANCEOF      reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    OP_EQ           reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    OP_NE           reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    AND             reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    CARET           reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    VERTICAL        reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    OP_LAND         reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    OP_LOR          reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    QUES            reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    EQUALS          reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    ASS_ADD         reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    ASS_SUB         reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    ASS_MUL         reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    ASS_DIV         reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    ASS_AND         reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    ASS_OR          reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    ASS_XOR         reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    ASS_MOD         reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    ASS_SHL         reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    ASS_SHRR        reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    ASS_SHR         reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    SEMI            reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    FRPAREN         reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    RPAREN          reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    COMMA           reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    COLON           reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)
    BRPAREN         reduce using rule 356 (castExpression -> LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus .)


state 519

    (355) castExpression -> LPAREN primitiveType RPAREN unaryExpression .

    MULT            reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    SLASH           reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    PERCENT         reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    PLUS            reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    DASH            reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_SHR          reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_SHL          reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_SHRR         reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_LE           reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_GE           reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    LESS            reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    MORE            reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    INSTANCEOF      reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_EQ           reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_NE           reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    AND             reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    CARET           reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    VERTICAL        reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_LAND         reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_LOR          reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    QUES            reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    EQUALS          reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_ADD         reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_SUB         reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_MUL         reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_DIV         reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_AND         reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_OR          reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_XOR         reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_MOD         reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_SHL         reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_SHRR        reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_SHR         reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    SEMI            reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    FRPAREN         reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    RPAREN          reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    COMMA           reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    COLON           reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    BRPAREN         reduce using rule 355 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)


state 520

    (398) superSuffix -> DOT Identifier expt_18 .

    OP_INC          reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    OP_DEC          reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    FLPAREN         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    DOT             reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    MULT            reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    SLASH           reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    PERCENT         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    PLUS            reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    DASH            reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    OP_SHR          reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    OP_SHL          reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    OP_SHRR         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    OP_LE           reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    OP_GE           reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    LESS            reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    MORE            reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    INSTANCEOF      reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    OP_EQ           reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    OP_NE           reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    AND             reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    CARET           reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    VERTICAL        reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    OP_LAND         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    OP_LOR          reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    QUES            reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    RPAREN          reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    COMMA           reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    BRPAREN         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    EQUALS          reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    ASS_ADD         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    ASS_SUB         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    ASS_MUL         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    ASS_DIV         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    ASS_AND         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    ASS_OR          reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    ASS_XOR         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    ASS_MOD         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    ASS_SHL         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    ASS_SHRR        reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    ASS_SHR         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    FRPAREN         reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    COLON           reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)
    SEMI            reduce using rule 398 (superSuffix -> DOT Identifier expt_18 .)


state 521

    (399) superSuffix -> DOT Identifier empty .
    (475) expt_18 -> empty .

  ! reduce/reduce conflict for OP_INC resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_DEC resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for FLPAREN resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for DOT resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for MULT resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for SLASH resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for PERCENT resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for DASH resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_SHR resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_SHL resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_SHRR resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_LE resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_GE resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for LESS resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for MORE resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for INSTANCEOF resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_EQ resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_NE resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for AND resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for CARET resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for VERTICAL resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_LAND resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for OP_LOR resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for QUES resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for RPAREN resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for BRPAREN resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for EQUALS resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_ADD resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_SUB resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_MUL resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_DIV resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_AND resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_OR resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_XOR resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_MOD resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_SHL resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_SHRR resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for ASS_SHR resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for FRPAREN resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for COLON resolved using rule 399 (superSuffix -> DOT Identifier empty .)
  ! reduce/reduce conflict for SEMI resolved using rule 399 (superSuffix -> DOT Identifier empty .)
    OP_INC          reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    OP_DEC          reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    FLPAREN         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    DOT             reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    MULT            reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    SLASH           reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    PERCENT         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    PLUS            reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    DASH            reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    OP_SHR          reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    OP_SHL          reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    OP_SHRR         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    OP_LE           reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    OP_GE           reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    LESS            reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    MORE            reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    INSTANCEOF      reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    OP_EQ           reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    OP_NE           reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    AND             reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    CARET           reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    VERTICAL        reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    OP_LAND         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    OP_LOR          reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    QUES            reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    RPAREN          reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    COMMA           reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    BRPAREN         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    EQUALS          reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    ASS_ADD         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    ASS_SUB         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    ASS_MUL         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    ASS_DIV         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    ASS_AND         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    ASS_OR          reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    ASS_XOR         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    ASS_MOD         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    ASS_SHL         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    ASS_SHRR        reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    ASS_SHR         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    FRPAREN         reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    COLON           reduce using rule 399 (superSuffix -> DOT Identifier empty .)
    SEMI            reduce using rule 399 (superSuffix -> DOT Identifier empty .)

  ! OP_INC          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_DEC          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! FLPAREN         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! DOT             [ reduce using rule 475 (expt_18 -> empty .) ]
  ! MULT            [ reduce using rule 475 (expt_18 -> empty .) ]
  ! SLASH           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! PERCENT         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! PLUS            [ reduce using rule 475 (expt_18 -> empty .) ]
  ! DASH            [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_SHR          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_SHL          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_SHRR         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_LE           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_GE           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! LESS            [ reduce using rule 475 (expt_18 -> empty .) ]
  ! MORE            [ reduce using rule 475 (expt_18 -> empty .) ]
  ! INSTANCEOF      [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_EQ           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_NE           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! AND             [ reduce using rule 475 (expt_18 -> empty .) ]
  ! CARET           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! VERTICAL        [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_LAND         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! OP_LOR          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! QUES            [ reduce using rule 475 (expt_18 -> empty .) ]
  ! RPAREN          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! COMMA           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! BRPAREN         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! EQUALS          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_ADD         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_SUB         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_MUL         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_DIV         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_AND         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_OR          [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_XOR         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_MOD         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_SHL         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_SHRR        [ reduce using rule 475 (expt_18 -> empty .) ]
  ! ASS_SHR         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! FRPAREN         [ reduce using rule 475 (expt_18 -> empty .) ]
  ! COLON           [ reduce using rule 475 (expt_18 -> empty .) ]
  ! SEMI            [ reduce using rule 475 (expt_18 -> empty .) ]


state 522

    (168) typeArguments -> LESS typeArgument expt_34 . MORE
    (505) expt_34 -> expt_34 . COMMA typeArgument

    MORE            shift and go to state 598
    COMMA           shift and go to state 599


state 523

    (169) typeArguments -> LESS typeArgument MORE .

    DOT             reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    FLPAREN         reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    RPAREN          reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    Identifier      reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    COMMA           reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    BLPAREN         reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    LPAREN          reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    IMPLEMENTS      reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    OP_EQ           reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    OP_NE           reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    AND             reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    CARET           reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    VERTICAL        reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    OP_LAND         reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    OP_LOR          reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    QUES            reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    BRPAREN         reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    EQUALS          reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    ASS_ADD         reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    ASS_SUB         reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    ASS_MUL         reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    ASS_DIV         reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    ASS_AND         reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    ASS_OR          reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    ASS_XOR         reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    ASS_MOD         reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    ASS_SHL         reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    ASS_SHRR        reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    ASS_SHR         reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    FRPAREN         reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    COLON           reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    SEMI            reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    MORE            reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)
    OP_ARRAY        reduce using rule 169 (typeArguments -> LESS typeArgument MORE .)


state 524

    (504) expt_34 -> COMMA . typeArgument
    (170) typeArgument -> . QUES expt_35
    (171) typeArgument -> . QUES empty
    (172) typeArgument -> . type
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    QUES            shift and go to state 421
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    typeArgument                   shift and go to state 600
    type                           shift and go to state 419

state 525

    (170) typeArgument -> QUES expt_35 .

    MORE            reduce using rule 170 (typeArgument -> QUES expt_35 .)
    COMMA           reduce using rule 170 (typeArgument -> QUES expt_35 .)


state 526

    (414) expr_5 -> SUPER .

    BOOLEAN         reduce using rule 414 (expr_5 -> SUPER .)
    CHAR            reduce using rule 414 (expr_5 -> SUPER .)
    BYTE            reduce using rule 414 (expr_5 -> SUPER .)
    SHORT           reduce using rule 414 (expr_5 -> SUPER .)
    INT             reduce using rule 414 (expr_5 -> SUPER .)
    LONG            reduce using rule 414 (expr_5 -> SUPER .)
    FLOAT           reduce using rule 414 (expr_5 -> SUPER .)
    DOUBLE          reduce using rule 414 (expr_5 -> SUPER .)
    Identifier      reduce using rule 414 (expr_5 -> SUPER .)


state 527

    (413) expr_5 -> EXTENDS .

    BOOLEAN         reduce using rule 413 (expr_5 -> EXTENDS .)
    CHAR            reduce using rule 413 (expr_5 -> EXTENDS .)
    BYTE            reduce using rule 413 (expr_5 -> EXTENDS .)
    SHORT           reduce using rule 413 (expr_5 -> EXTENDS .)
    INT             reduce using rule 413 (expr_5 -> EXTENDS .)
    LONG            reduce using rule 413 (expr_5 -> EXTENDS .)
    FLOAT           reduce using rule 413 (expr_5 -> EXTENDS .)
    DOUBLE          reduce using rule 413 (expr_5 -> EXTENDS .)
    Identifier      reduce using rule 413 (expr_5 -> EXTENDS .)


state 528

    (506) expt_35 -> expr_5 . type
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    type                           shift and go to state 601

state 529

    (171) typeArgument -> QUES empty .
    (507) expt_35 -> empty .

  ! reduce/reduce conflict for MORE resolved using rule 171 (typeArgument -> QUES empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 171 (typeArgument -> QUES empty .)
    MORE            reduce using rule 171 (typeArgument -> QUES empty .)
    COMMA           reduce using rule 171 (typeArgument -> QUES empty .)

  ! MORE            [ reduce using rule 507 (expt_35 -> empty .) ]
  ! COMMA           [ reduce using rule 507 (expt_35 -> empty .) ]


state 530

    (502) expt_33 -> DOT Identifier . expt_32
    (500) expt_32 -> . typeArguments
    (501) expt_32 -> . empty
    (168) typeArguments -> . LESS typeArgument expt_34 MORE
    (169) typeArguments -> . LESS typeArgument MORE
    (584) empty -> .

    LESS            shift and go to state 279
    DOT             reduce using rule 584 (empty -> .)
    FLPAREN         reduce using rule 584 (empty -> .)
    COMMA           reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)
    LPAREN          reduce using rule 584 (empty -> .)
    RPAREN          reduce using rule 584 (empty -> .)
    IMPLEMENTS      reduce using rule 584 (empty -> .)
    OP_EQ           reduce using rule 584 (empty -> .)
    OP_NE           reduce using rule 584 (empty -> .)
    AND             reduce using rule 584 (empty -> .)
    CARET           reduce using rule 584 (empty -> .)
    VERTICAL        reduce using rule 584 (empty -> .)
    OP_LAND         reduce using rule 584 (empty -> .)
    OP_LOR          reduce using rule 584 (empty -> .)
    QUES            reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)
    EQUALS          reduce using rule 584 (empty -> .)
    ASS_ADD         reduce using rule 584 (empty -> .)
    ASS_SUB         reduce using rule 584 (empty -> .)
    ASS_MUL         reduce using rule 584 (empty -> .)
    ASS_DIV         reduce using rule 584 (empty -> .)
    ASS_AND         reduce using rule 584 (empty -> .)
    ASS_OR          reduce using rule 584 (empty -> .)
    ASS_XOR         reduce using rule 584 (empty -> .)
    ASS_MOD         reduce using rule 584 (empty -> .)
    ASS_SHL         reduce using rule 584 (empty -> .)
    ASS_SHRR        reduce using rule 584 (empty -> .)
    ASS_SHR         reduce using rule 584 (empty -> .)
    FRPAREN         reduce using rule 584 (empty -> .)
    COLON           reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)
    MORE            reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    OP_ARRAY        reduce using rule 584 (empty -> .)

    typeArguments                  shift and go to state 280
    empty                          shift and go to state 603
    expt_32                        shift and go to state 602

state 531

    (503) expt_33 -> expt_33 DOT . Identifier expt_32

    Identifier      shift and go to state 604


state 532

    (481) expt_22 -> expt_22 COMMA type .

    COMMA           reduce using rule 481 (expt_22 -> expt_22 COMMA type .)
    BLPAREN         reduce using rule 481 (expt_22 -> expt_22 COMMA type .)
    MORE            reduce using rule 481 (expt_22 -> expt_22 COMMA type .)


state 533

    (471) expt_16 -> expt_16 COMMA . enumConstant
    (59) enumConstant -> . expt_17 Identifier expt_18 classBody
    (60) enumConstant -> . expt_17 Identifier expt_18
    (61) enumConstant -> . expt_17 Identifier classBody
    (62) enumConstant -> . expt_17 Identifier
    (63) enumConstant -> . Identifier expt_18 classBody
    (64) enumConstant -> . Identifier expt_18
    (65) enumConstant -> . Identifier classBody
    (66) enumConstant -> . Identifier
    (472) expt_17 -> . annotations
    (473) expt_17 -> . empty
    (201) annotations -> . annotation
    (202) annotations -> . annotations annotation
    (584) empty -> .
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for Identifier resolved as shift
    Identifier      shift and go to state 291
    AT              shift and go to state 8

  ! Identifier      [ reduce using rule 584 (empty -> .) ]

    enumConstant                   shift and go to state 605
    annotation                     shift and go to state 4
    expt_17                        shift and go to state 288
    empty                          shift and go to state 535
    annotations                    shift and go to state 287

state 534

    (470) expt_16 -> COMMA enumConstant .

    COMMA           reduce using rule 470 (expt_16 -> COMMA enumConstant .)
    SEMI            reduce using rule 470 (expt_16 -> COMMA enumConstant .)
    BRPAREN         reduce using rule 470 (expt_16 -> COMMA enumConstant .)


state 535

    (473) expt_17 -> empty .

    Identifier      reduce using rule 473 (expt_17 -> empty .)


state 536

    (61) enumConstant -> expt_17 Identifier classBody .

    COMMA           reduce using rule 61 (enumConstant -> expt_17 Identifier classBody .)
    SEMI            reduce using rule 61 (enumConstant -> expt_17 Identifier classBody .)
    BRPAREN         reduce using rule 61 (enumConstant -> expt_17 Identifier classBody .)


state 537

    (59) enumConstant -> expt_17 Identifier expt_18 . classBody
    (60) enumConstant -> expt_17 Identifier expt_18 .
    (77) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (78) classBody -> . BLPAREN BRPAREN

    COMMA           reduce using rule 60 (enumConstant -> expt_17 Identifier expt_18 .)
    SEMI            reduce using rule 60 (enumConstant -> expt_17 Identifier expt_18 .)
    BRPAREN         reduce using rule 60 (enumConstant -> expt_17 Identifier expt_18 .)
    BLPAREN         shift and go to state 439

    classBody                      shift and go to state 606

state 538

    (67) enumBodyDeclarations -> SEMI . classBodyDeclarations
    (68) enumBodyDeclarations -> SEMI .
    (476) classBodyDeclarations -> . classBodyDeclaration
    (477) classBodyDeclarations -> . classBodyDeclarations classBodyDeclaration
    (81) classBodyDeclaration -> . modifiers memberDecl
    (82) classBodyDeclaration -> . expt_3 block
    (83) classBodyDeclaration -> . empty block
    (84) classBodyDeclaration -> . SEMI
    (29) modifiers -> . expt_6
    (30) modifiers -> . empty
    (445) expt_3 -> . STATIC
    (446) expt_3 -> . empty
    (584) empty -> .
    (451) expt_6 -> . modifier
    (452) expt_6 -> . expt_6 modifier
    (137) modifier -> . annotation
    (138) modifier -> . PUBLIC
    (139) modifier -> . PROTECTED
    (140) modifier -> . PRIVATE
    (141) modifier -> . STATIC
    (142) modifier -> . ABSTRACT
    (143) modifier -> . FINAL
    (144) modifier -> . NATIVE
    (145) modifier -> . SYNCHRONIZED
    (146) modifier -> . TRANSIENT
    (147) modifier -> . VOLATILE
    (148) modifier -> . STRICTFP
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for AT resolved as shift
    BRPAREN         reduce using rule 68 (enumBodyDeclarations -> SEMI .)
    SEMI            shift and go to state 546
    STATIC          shift and go to state 545
    BLPAREN         reduce using rule 584 (empty -> .)
    VOID            reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    LESS            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    BOOLEAN         reduce using rule 584 (empty -> .)
    CHAR            reduce using rule 584 (empty -> .)
    BYTE            reduce using rule 584 (empty -> .)
    SHORT           reduce using rule 584 (empty -> .)
    INT             reduce using rule 584 (empty -> .)
    LONG            reduce using rule 584 (empty -> .)
    FLOAT           reduce using rule 584 (empty -> .)
    DOUBLE          reduce using rule 584 (empty -> .)
    PUBLIC          shift and go to state 310
    PROTECTED       shift and go to state 295
    PRIVATE         shift and go to state 300
    ABSTRACT        shift and go to state 294
    FINAL           shift and go to state 297
    NATIVE          shift and go to state 298
    SYNCHRONIZED    shift and go to state 293
    TRANSIENT       shift and go to state 307
    VOLATILE        shift and go to state 308
    STRICTFP        shift and go to state 301
    AT              shift and go to state 8

  ! AT              [ reduce using rule 584 (empty -> .) ]

    modifiers                      shift and go to state 551
    classBodyDeclarations          shift and go to state 607
    expt_6                         shift and go to state 299
    expt_3                         shift and go to state 547
    empty                          shift and go to state 548
    classBodyDeclaration           shift and go to state 550
    modifier                       shift and go to state 309
    annotation                     shift and go to state 304

state 539

    (468) expt_15 -> enumBodyDeclarations .

    BRPAREN         reduce using rule 468 (expt_15 -> enumBodyDeclarations .)


state 540

    (49) enumBody -> BLPAREN expt_13 expt_14 expt_15 . BRPAREN

    BRPAREN         shift and go to state 608


state 541

    (50) enumBody -> BLPAREN expt_13 expt_14 empty . BRPAREN
    (469) expt_15 -> empty .

  ! shift/reduce conflict for BRPAREN resolved as shift
    BRPAREN         shift and go to state 609

  ! BRPAREN         [ reduce using rule 469 (expt_15 -> empty .) ]


state 542

    (51) enumBody -> BLPAREN expt_13 empty expt_15 . BRPAREN

    BRPAREN         shift and go to state 610


state 543

    (52) enumBody -> BLPAREN expt_13 empty empty . BRPAREN
    (469) expt_15 -> empty .

  ! shift/reduce conflict for BRPAREN resolved as shift
    BRPAREN         shift and go to state 611

  ! BRPAREN         [ reduce using rule 469 (expt_15 -> empty .) ]


state 544

    (63) enumConstant -> Identifier expt_18 classBody .

    COMMA           reduce using rule 63 (enumConstant -> Identifier expt_18 classBody .)
    SEMI            reduce using rule 63 (enumConstant -> Identifier expt_18 classBody .)
    BRPAREN         reduce using rule 63 (enumConstant -> Identifier expt_18 classBody .)


state 545

    (445) expt_3 -> STATIC .
    (141) modifier -> STATIC .

    BLPAREN         reduce using rule 445 (expt_3 -> STATIC .)
    PUBLIC          reduce using rule 141 (modifier -> STATIC .)
    PROTECTED       reduce using rule 141 (modifier -> STATIC .)
    PRIVATE         reduce using rule 141 (modifier -> STATIC .)
    STATIC          reduce using rule 141 (modifier -> STATIC .)
    ABSTRACT        reduce using rule 141 (modifier -> STATIC .)
    FINAL           reduce using rule 141 (modifier -> STATIC .)
    NATIVE          reduce using rule 141 (modifier -> STATIC .)
    SYNCHRONIZED    reduce using rule 141 (modifier -> STATIC .)
    TRANSIENT       reduce using rule 141 (modifier -> STATIC .)
    VOLATILE        reduce using rule 141 (modifier -> STATIC .)
    STRICTFP        reduce using rule 141 (modifier -> STATIC .)
    AT              reduce using rule 141 (modifier -> STATIC .)
    VOID            reduce using rule 141 (modifier -> STATIC .)
    Identifier      reduce using rule 141 (modifier -> STATIC .)
    LESS            reduce using rule 141 (modifier -> STATIC .)
    INTERFACE       reduce using rule 141 (modifier -> STATIC .)
    CLASS           reduce using rule 141 (modifier -> STATIC .)
    ENUM            reduce using rule 141 (modifier -> STATIC .)
    BOOLEAN         reduce using rule 141 (modifier -> STATIC .)
    CHAR            reduce using rule 141 (modifier -> STATIC .)
    BYTE            reduce using rule 141 (modifier -> STATIC .)
    SHORT           reduce using rule 141 (modifier -> STATIC .)
    INT             reduce using rule 141 (modifier -> STATIC .)
    LONG            reduce using rule 141 (modifier -> STATIC .)
    FLOAT           reduce using rule 141 (modifier -> STATIC .)
    DOUBLE          reduce using rule 141 (modifier -> STATIC .)


state 546

    (84) classBodyDeclaration -> SEMI .

    BRPAREN         reduce using rule 84 (classBodyDeclaration -> SEMI .)
    SEMI            reduce using rule 84 (classBodyDeclaration -> SEMI .)
    STATIC          reduce using rule 84 (classBodyDeclaration -> SEMI .)
    PUBLIC          reduce using rule 84 (classBodyDeclaration -> SEMI .)
    PROTECTED       reduce using rule 84 (classBodyDeclaration -> SEMI .)
    PRIVATE         reduce using rule 84 (classBodyDeclaration -> SEMI .)
    ABSTRACT        reduce using rule 84 (classBodyDeclaration -> SEMI .)
    FINAL           reduce using rule 84 (classBodyDeclaration -> SEMI .)
    NATIVE          reduce using rule 84 (classBodyDeclaration -> SEMI .)
    SYNCHRONIZED    reduce using rule 84 (classBodyDeclaration -> SEMI .)
    TRANSIENT       reduce using rule 84 (classBodyDeclaration -> SEMI .)
    VOLATILE        reduce using rule 84 (classBodyDeclaration -> SEMI .)
    STRICTFP        reduce using rule 84 (classBodyDeclaration -> SEMI .)
    AT              reduce using rule 84 (classBodyDeclaration -> SEMI .)
    VOID            reduce using rule 84 (classBodyDeclaration -> SEMI .)
    Identifier      reduce using rule 84 (classBodyDeclaration -> SEMI .)
    LESS            reduce using rule 84 (classBodyDeclaration -> SEMI .)
    INTERFACE       reduce using rule 84 (classBodyDeclaration -> SEMI .)
    CLASS           reduce using rule 84 (classBodyDeclaration -> SEMI .)
    ENUM            reduce using rule 84 (classBodyDeclaration -> SEMI .)
    BOOLEAN         reduce using rule 84 (classBodyDeclaration -> SEMI .)
    CHAR            reduce using rule 84 (classBodyDeclaration -> SEMI .)
    BYTE            reduce using rule 84 (classBodyDeclaration -> SEMI .)
    SHORT           reduce using rule 84 (classBodyDeclaration -> SEMI .)
    INT             reduce using rule 84 (classBodyDeclaration -> SEMI .)
    LONG            reduce using rule 84 (classBodyDeclaration -> SEMI .)
    FLOAT           reduce using rule 84 (classBodyDeclaration -> SEMI .)
    DOUBLE          reduce using rule 84 (classBodyDeclaration -> SEMI .)
    BLPAREN         reduce using rule 84 (classBodyDeclaration -> SEMI .)


state 547

    (82) classBodyDeclaration -> expt_3 . block
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN

    BLPAREN         shift and go to state 612

    block                          shift and go to state 613

state 548

    (83) classBodyDeclaration -> empty . block
    (30) modifiers -> empty .
    (446) expt_3 -> empty .
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN

  ! shift/reduce conflict for BLPAREN resolved as shift
    VOID            reduce using rule 30 (modifiers -> empty .)
    Identifier      reduce using rule 30 (modifiers -> empty .)
    LESS            reduce using rule 30 (modifiers -> empty .)
    INTERFACE       reduce using rule 30 (modifiers -> empty .)
    AT              reduce using rule 30 (modifiers -> empty .)
    CLASS           reduce using rule 30 (modifiers -> empty .)
    ENUM            reduce using rule 30 (modifiers -> empty .)
    BOOLEAN         reduce using rule 30 (modifiers -> empty .)
    CHAR            reduce using rule 30 (modifiers -> empty .)
    BYTE            reduce using rule 30 (modifiers -> empty .)
    SHORT           reduce using rule 30 (modifiers -> empty .)
    INT             reduce using rule 30 (modifiers -> empty .)
    LONG            reduce using rule 30 (modifiers -> empty .)
    FLOAT           reduce using rule 30 (modifiers -> empty .)
    DOUBLE          reduce using rule 30 (modifiers -> empty .)
    BLPAREN         shift and go to state 612

  ! BLPAREN         [ reduce using rule 446 (expt_3 -> empty .) ]

    block                          shift and go to state 614

state 549

    (78) classBody -> BLPAREN BRPAREN .

    OP_INC          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    OP_DEC          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    FLPAREN         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    DOT             reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    MULT            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    SLASH           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    PERCENT         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    PLUS            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    DASH            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    OP_SHR          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    OP_SHL          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    OP_SHRR         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    OP_LE           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    OP_GE           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    LESS            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    MORE            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    INSTANCEOF      reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    OP_EQ           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    OP_NE           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    AND             reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    CARET           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    VERTICAL        reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    OP_LAND         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    OP_LOR          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    QUES            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    RPAREN          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    COMMA           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    BRPAREN         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    EQUALS          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    ASS_ADD         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    ASS_SUB         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    ASS_MUL         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    ASS_DIV         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    ASS_AND         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    ASS_OR          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    ASS_XOR         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    ASS_MOD         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    ASS_SHL         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    ASS_SHRR        reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    ASS_SHR         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    FRPAREN         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    COLON           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    SEMI            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    PUBLIC          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    PROTECTED       reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    PRIVATE         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    ABSTRACT        reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    STATIC          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    FINAL           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    STRICTFP        reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    CLASS           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    ENUM            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    INTERFACE       reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    AT              reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    $end            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    Identifier      reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    CONTINUE        reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    BREAK           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    THROW           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    RETURN          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    SYNCHRONIZED    reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    SWITCH          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    TRY             reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    DO              reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    WHILE           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    FOR             reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    IF              reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    ASSERT          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    BLPAREN         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    BOOLEAN         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    CHAR            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    BYTE            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    SHORT           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    INT             reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    LONG            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    FLOAT           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    DOUBLE          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    EXCLAMATION     reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    TILDE           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    VOID            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    NEW             reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    SUPER           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    THIS            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    LPAREN          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    CharacterLiteral reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    StringLiteral   reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    NULL            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    NUMBER          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    HEX_NUMBER      reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    LONG_NUMBER     reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    NON_INTEGER_1   reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    NON_INTEGER_2   reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    NON_INTEGER_3   reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    TRUE            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    FALSE           reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    CASE            reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    DEFAULT         reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    NATIVE          reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    TRANSIENT       reduce using rule 78 (classBody -> BLPAREN BRPAREN .)
    VOLATILE        reduce using rule 78 (classBody -> BLPAREN BRPAREN .)


state 550

    (476) classBodyDeclarations -> classBodyDeclaration .

    BRPAREN         reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    SEMI            reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    STATIC          reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    PUBLIC          reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    PROTECTED       reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    PRIVATE         reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    ABSTRACT        reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    FINAL           reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    NATIVE          reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    SYNCHRONIZED    reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    TRANSIENT       reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    VOLATILE        reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    STRICTFP        reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    AT              reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    VOID            reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    Identifier      reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    LESS            reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    INTERFACE       reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    CLASS           reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    ENUM            reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    BOOLEAN         reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    CHAR            reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    BYTE            reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    SHORT           reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    INT             reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    LONG            reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    FLOAT           reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    DOUBLE          reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)
    BLPAREN         reduce using rule 476 (classBodyDeclarations -> classBodyDeclaration .)


state 551

    (81) classBodyDeclaration -> modifiers . memberDecl
    (85) memberDecl -> . genericMethodOrConstructorDecl
    (86) memberDecl -> . memberDeclaration
    (87) memberDecl -> . VOID Identifier voidMethodDeclaratorRest
    (88) memberDecl -> . Identifier constructorDeclaratorRest
    (89) memberDecl -> . interfaceDeclaration
    (90) memberDecl -> . classDeclaration
    (92) genericMethodOrConstructorDecl -> . typeParameters genericMethodOrConstructorRest
    (91) memberDeclaration -> . type expr_2
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (41) typeParameters -> . LESS typeParameter expt_10 MORE
    (42) typeParameters -> . LESS typeParameter empty MORE
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    VOID            shift and go to state 615
    Identifier      shift and go to state 621
    LESS            shift and go to state 92
    INTERFACE       shift and go to state 39
    AT              shift and go to state 70
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110

    memberDecl                     shift and go to state 616
    typeParameters                 shift and go to state 617
    normalInterfaceDeclaration     shift and go to state 18
    memberDeclaration              shift and go to state 618
    classOrInterfaceType           shift and go to state 164
    enumDeclaration                shift and go to state 27
    genericMethodOrConstructorDecl shift and go to state 619
    classDeclaration               shift and go to state 620
    type                           shift and go to state 622
    normalClassDeclaration         shift and go to state 20
    primitiveType                  shift and go to state 165
    annotationTypeDeclaration      shift and go to state 36
    interfaceDeclaration           shift and go to state 623

state 552

    (77) classBody -> BLPAREN classBodyDeclarations . BRPAREN
    (477) classBodyDeclarations -> classBodyDeclarations . classBodyDeclaration
    (81) classBodyDeclaration -> . modifiers memberDecl
    (82) classBodyDeclaration -> . expt_3 block
    (83) classBodyDeclaration -> . empty block
    (84) classBodyDeclaration -> . SEMI
    (29) modifiers -> . expt_6
    (30) modifiers -> . empty
    (445) expt_3 -> . STATIC
    (446) expt_3 -> . empty
    (584) empty -> .
    (451) expt_6 -> . modifier
    (452) expt_6 -> . expt_6 modifier
    (137) modifier -> . annotation
    (138) modifier -> . PUBLIC
    (139) modifier -> . PROTECTED
    (140) modifier -> . PRIVATE
    (141) modifier -> . STATIC
    (142) modifier -> . ABSTRACT
    (143) modifier -> . FINAL
    (144) modifier -> . NATIVE
    (145) modifier -> . SYNCHRONIZED
    (146) modifier -> . TRANSIENT
    (147) modifier -> . VOLATILE
    (148) modifier -> . STRICTFP
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for AT resolved as shift
    BRPAREN         shift and go to state 624
    SEMI            shift and go to state 546
    STATIC          shift and go to state 545
    BLPAREN         reduce using rule 584 (empty -> .)
    VOID            reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    LESS            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    BOOLEAN         reduce using rule 584 (empty -> .)
    CHAR            reduce using rule 584 (empty -> .)
    BYTE            reduce using rule 584 (empty -> .)
    SHORT           reduce using rule 584 (empty -> .)
    INT             reduce using rule 584 (empty -> .)
    LONG            reduce using rule 584 (empty -> .)
    FLOAT           reduce using rule 584 (empty -> .)
    DOUBLE          reduce using rule 584 (empty -> .)
    PUBLIC          shift and go to state 310
    PROTECTED       shift and go to state 295
    PRIVATE         shift and go to state 300
    ABSTRACT        shift and go to state 294
    FINAL           shift and go to state 297
    NATIVE          shift and go to state 298
    SYNCHRONIZED    shift and go to state 293
    TRANSIENT       shift and go to state 307
    VOLATILE        shift and go to state 308
    STRICTFP        shift and go to state 301
    AT              shift and go to state 8

  ! AT              [ reduce using rule 584 (empty -> .) ]

    modifiers                      shift and go to state 551
    expt_6                         shift and go to state 299
    expt_3                         shift and go to state 547
    empty                          shift and go to state 548
    classBodyDeclaration           shift and go to state 625
    modifier                       shift and go to state 309
    annotation                     shift and go to state 304

state 553

    (53) enumBody -> BLPAREN empty expt_14 expt_15 . BRPAREN

    BRPAREN         shift and go to state 626


state 554

    (54) enumBody -> BLPAREN empty expt_14 empty . BRPAREN
    (469) expt_15 -> empty .

  ! shift/reduce conflict for BRPAREN resolved as shift
    BRPAREN         shift and go to state 627

  ! BRPAREN         [ reduce using rule 469 (expt_15 -> empty .) ]


state 555

    (55) enumBody -> BLPAREN empty empty expt_15 . BRPAREN

    BRPAREN         shift and go to state 628


state 556

    (56) enumBody -> BLPAREN empty empty empty . BRPAREN
    (469) expt_15 -> empty .

  ! shift/reduce conflict for BRPAREN resolved as shift
    BRPAREN         shift and go to state 629

  ! BRPAREN         [ reduce using rule 469 (expt_15 -> empty .) ]


state 557

    (227) annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .

    BRPAREN         reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    PUBLIC          reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    PROTECTED       reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    PRIVATE         reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    STATIC          reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    ABSTRACT        reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    FINAL           reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    NATIVE          reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    SYNCHRONIZED    reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    TRANSIENT       reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    VOLATILE        reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    STRICTFP        reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    AT              reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    ENUM            reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    INTERFACE       reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    CLASS           reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    BOOLEAN         reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    CHAR            reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    BYTE            reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    SHORT           reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    INT             reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    LONG            reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    FLOAT           reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    DOUBLE          reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)
    Identifier      reduce using rule 227 (annotationTypeElementRest -> normalInterfaceDeclaration expt_48 .)


state 558

    (228) annotationTypeElementRest -> normalInterfaceDeclaration empty .
    (531) expt_48 -> empty .

  ! reduce/reduce conflict for BRPAREN resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for STATIC resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for FINAL resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for NATIVE resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for SYNCHRONIZED resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for TRANSIENT resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for VOLATILE resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for AT resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for ENUM resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for CLASS resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for INT resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for LONG resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
  ! reduce/reduce conflict for Identifier resolved using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    BRPAREN         reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    PUBLIC          reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    PROTECTED       reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    PRIVATE         reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    STATIC          reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    ABSTRACT        reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    FINAL           reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    NATIVE          reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    SYNCHRONIZED    reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    TRANSIENT       reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    VOLATILE        reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    STRICTFP        reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    AT              reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    ENUM            reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    INTERFACE       reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    CLASS           reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    BOOLEAN         reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    CHAR            reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    BYTE            reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    SHORT           reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    INT             reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    LONG            reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    FLOAT           reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    DOUBLE          reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)
    Identifier      reduce using rule 228 (annotationTypeElementRest -> normalInterfaceDeclaration empty .)

  ! BRPAREN         [ reduce using rule 531 (expt_48 -> empty .) ]
  ! PUBLIC          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! PROTECTED       [ reduce using rule 531 (expt_48 -> empty .) ]
  ! PRIVATE         [ reduce using rule 531 (expt_48 -> empty .) ]
  ! STATIC          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! ABSTRACT        [ reduce using rule 531 (expt_48 -> empty .) ]
  ! FINAL           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! NATIVE          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! SYNCHRONIZED    [ reduce using rule 531 (expt_48 -> empty .) ]
  ! TRANSIENT       [ reduce using rule 531 (expt_48 -> empty .) ]
  ! VOLATILE        [ reduce using rule 531 (expt_48 -> empty .) ]
  ! STRICTFP        [ reduce using rule 531 (expt_48 -> empty .) ]
  ! AT              [ reduce using rule 531 (expt_48 -> empty .) ]
  ! ENUM            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! INTERFACE       [ reduce using rule 531 (expt_48 -> empty .) ]
  ! CLASS           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! BOOLEAN         [ reduce using rule 531 (expt_48 -> empty .) ]
  ! CHAR            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! BYTE            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! SHORT           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! INT             [ reduce using rule 531 (expt_48 -> empty .) ]
  ! LONG            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! FLOAT           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! DOUBLE          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! Identifier      [ reduce using rule 531 (expt_48 -> empty .) ]


state 559

    (530) expt_48 -> SEMI .

    BRPAREN         reduce using rule 530 (expt_48 -> SEMI .)
    PUBLIC          reduce using rule 530 (expt_48 -> SEMI .)
    PROTECTED       reduce using rule 530 (expt_48 -> SEMI .)
    PRIVATE         reduce using rule 530 (expt_48 -> SEMI .)
    STATIC          reduce using rule 530 (expt_48 -> SEMI .)
    ABSTRACT        reduce using rule 530 (expt_48 -> SEMI .)
    FINAL           reduce using rule 530 (expt_48 -> SEMI .)
    NATIVE          reduce using rule 530 (expt_48 -> SEMI .)
    SYNCHRONIZED    reduce using rule 530 (expt_48 -> SEMI .)
    TRANSIENT       reduce using rule 530 (expt_48 -> SEMI .)
    VOLATILE        reduce using rule 530 (expt_48 -> SEMI .)
    STRICTFP        reduce using rule 530 (expt_48 -> SEMI .)
    AT              reduce using rule 530 (expt_48 -> SEMI .)
    ENUM            reduce using rule 530 (expt_48 -> SEMI .)
    INTERFACE       reduce using rule 530 (expt_48 -> SEMI .)
    CLASS           reduce using rule 530 (expt_48 -> SEMI .)
    BOOLEAN         reduce using rule 530 (expt_48 -> SEMI .)
    CHAR            reduce using rule 530 (expt_48 -> SEMI .)
    BYTE            reduce using rule 530 (expt_48 -> SEMI .)
    SHORT           reduce using rule 530 (expt_48 -> SEMI .)
    INT             reduce using rule 530 (expt_48 -> SEMI .)
    LONG            reduce using rule 530 (expt_48 -> SEMI .)
    FLOAT           reduce using rule 530 (expt_48 -> SEMI .)
    DOUBLE          reduce using rule 530 (expt_48 -> SEMI .)
    Identifier      reduce using rule 530 (expt_48 -> SEMI .)


state 560

    (229) annotationTypeElementRest -> normalClassDeclaration expt_48 .

    BRPAREN         reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    PUBLIC          reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    PROTECTED       reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    PRIVATE         reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    STATIC          reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    ABSTRACT        reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    FINAL           reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    NATIVE          reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    SYNCHRONIZED    reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    TRANSIENT       reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    VOLATILE        reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    STRICTFP        reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    AT              reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    ENUM            reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    INTERFACE       reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    CLASS           reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    BOOLEAN         reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    CHAR            reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    BYTE            reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    SHORT           reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    INT             reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    LONG            reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    FLOAT           reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    DOUBLE          reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)
    Identifier      reduce using rule 229 (annotationTypeElementRest -> normalClassDeclaration expt_48 .)


state 561

    (230) annotationTypeElementRest -> normalClassDeclaration empty .
    (531) expt_48 -> empty .

  ! reduce/reduce conflict for BRPAREN resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for STATIC resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for FINAL resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for NATIVE resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for SYNCHRONIZED resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for TRANSIENT resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for VOLATILE resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for AT resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for ENUM resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for CLASS resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for INT resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for LONG resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
  ! reduce/reduce conflict for Identifier resolved using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    BRPAREN         reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    PUBLIC          reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    PROTECTED       reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    PRIVATE         reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    STATIC          reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    ABSTRACT        reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    FINAL           reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    NATIVE          reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    SYNCHRONIZED    reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    TRANSIENT       reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    VOLATILE        reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    STRICTFP        reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    AT              reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    ENUM            reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    INTERFACE       reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    CLASS           reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    BOOLEAN         reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    CHAR            reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    BYTE            reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    SHORT           reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    INT             reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    LONG            reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    FLOAT           reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    DOUBLE          reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)
    Identifier      reduce using rule 230 (annotationTypeElementRest -> normalClassDeclaration empty .)

  ! BRPAREN         [ reduce using rule 531 (expt_48 -> empty .) ]
  ! PUBLIC          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! PROTECTED       [ reduce using rule 531 (expt_48 -> empty .) ]
  ! PRIVATE         [ reduce using rule 531 (expt_48 -> empty .) ]
  ! STATIC          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! ABSTRACT        [ reduce using rule 531 (expt_48 -> empty .) ]
  ! FINAL           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! NATIVE          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! SYNCHRONIZED    [ reduce using rule 531 (expt_48 -> empty .) ]
  ! TRANSIENT       [ reduce using rule 531 (expt_48 -> empty .) ]
  ! VOLATILE        [ reduce using rule 531 (expt_48 -> empty .) ]
  ! STRICTFP        [ reduce using rule 531 (expt_48 -> empty .) ]
  ! AT              [ reduce using rule 531 (expt_48 -> empty .) ]
  ! ENUM            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! INTERFACE       [ reduce using rule 531 (expt_48 -> empty .) ]
  ! CLASS           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! BOOLEAN         [ reduce using rule 531 (expt_48 -> empty .) ]
  ! CHAR            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! BYTE            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! SHORT           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! INT             [ reduce using rule 531 (expt_48 -> empty .) ]
  ! LONG            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! FLOAT           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! DOUBLE          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! Identifier      [ reduce using rule 531 (expt_48 -> empty .) ]


state 562

    (231) annotationTypeElementRest -> type annotationMethodOrConstantRest . SEMI

    SEMI            shift and go to state 630


state 563

    (236) annotationConstantRest -> variableDeclarators .

    SEMI            reduce using rule 236 (annotationConstantRest -> variableDeclarators .)


state 564

    (233) annotationMethodOrConstantRest -> annotationConstantRest .

    SEMI            reduce using rule 233 (annotationMethodOrConstantRest -> annotationConstantRest .)


state 565

    (125) variableDeclarator -> variableDeclaratorId . expt_27
    (126) variableDeclarator -> variableDeclaratorId . empty
    (490) expt_27 -> . EQUALS variableInitializer
    (491) expt_27 -> . empty
    (584) empty -> .

    EQUALS          shift and go to state 632
    COMMA           reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)

    expt_27                        shift and go to state 631
    empty                          shift and go to state 633

state 566

    (234) annotationMethodRest -> Identifier . LPAREN RPAREN expt_49
    (235) annotationMethodRest -> Identifier . LPAREN RPAREN empty
    (131) variableDeclaratorId -> Identifier . expt_24
    (132) variableDeclaratorId -> Identifier . empty
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN
    (584) empty -> .

    LPAREN          shift and go to state 635
    FLPAREN         shift and go to state 245
    EQUALS          reduce using rule 584 (empty -> .)
    COMMA           reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)

    expt_24                        shift and go to state 634
    empty                          shift and go to state 636

state 567

    (232) annotationMethodOrConstantRest -> annotationMethodRest .

    SEMI            reduce using rule 232 (annotationMethodOrConstantRest -> annotationMethodRest .)


state 568

    (123) variableDeclarators -> variableDeclarator . expt_26
    (124) variableDeclarators -> variableDeclarator . empty
    (488) expt_26 -> . COMMA variableDeclarator
    (489) expt_26 -> . expt_26 COMMA variableDeclarator
    (584) empty -> .

    COMMA           shift and go to state 638
    SEMI            reduce using rule 584 (empty -> .)

    expt_26                        shift and go to state 637
    empty                          shift and go to state 639

state 569

    (226) annotationTypeElementRest -> enumDeclaration empty .
    (531) expt_48 -> empty .

  ! reduce/reduce conflict for BRPAREN resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for STATIC resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for FINAL resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for NATIVE resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for SYNCHRONIZED resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for TRANSIENT resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for VOLATILE resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for AT resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for ENUM resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for CLASS resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for INT resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for LONG resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
  ! reduce/reduce conflict for Identifier resolved using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    BRPAREN         reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    PUBLIC          reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    PROTECTED       reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    PRIVATE         reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    STATIC          reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    ABSTRACT        reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    FINAL           reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    NATIVE          reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    SYNCHRONIZED    reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    TRANSIENT       reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    VOLATILE        reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    STRICTFP        reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    AT              reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    ENUM            reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    INTERFACE       reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    CLASS           reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    BOOLEAN         reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    CHAR            reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    BYTE            reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    SHORT           reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    INT             reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    LONG            reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    FLOAT           reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    DOUBLE          reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)
    Identifier      reduce using rule 226 (annotationTypeElementRest -> enumDeclaration empty .)

  ! BRPAREN         [ reduce using rule 531 (expt_48 -> empty .) ]
  ! PUBLIC          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! PROTECTED       [ reduce using rule 531 (expt_48 -> empty .) ]
  ! PRIVATE         [ reduce using rule 531 (expt_48 -> empty .) ]
  ! STATIC          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! ABSTRACT        [ reduce using rule 531 (expt_48 -> empty .) ]
  ! FINAL           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! NATIVE          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! SYNCHRONIZED    [ reduce using rule 531 (expt_48 -> empty .) ]
  ! TRANSIENT       [ reduce using rule 531 (expt_48 -> empty .) ]
  ! VOLATILE        [ reduce using rule 531 (expt_48 -> empty .) ]
  ! STRICTFP        [ reduce using rule 531 (expt_48 -> empty .) ]
  ! AT              [ reduce using rule 531 (expt_48 -> empty .) ]
  ! ENUM            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! INTERFACE       [ reduce using rule 531 (expt_48 -> empty .) ]
  ! CLASS           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! BOOLEAN         [ reduce using rule 531 (expt_48 -> empty .) ]
  ! CHAR            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! BYTE            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! SHORT           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! INT             [ reduce using rule 531 (expt_48 -> empty .) ]
  ! LONG            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! FLOAT           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! DOUBLE          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! Identifier      [ reduce using rule 531 (expt_48 -> empty .) ]


state 570

    (225) annotationTypeElementRest -> enumDeclaration expt_48 .

    BRPAREN         reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    PUBLIC          reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    PROTECTED       reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    PRIVATE         reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    STATIC          reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    ABSTRACT        reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    FINAL           reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    NATIVE          reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    SYNCHRONIZED    reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    TRANSIENT       reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    VOLATILE        reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    STRICTFP        reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    AT              reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    ENUM            reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    INTERFACE       reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    CLASS           reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    BOOLEAN         reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    CHAR            reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    BYTE            reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    SHORT           reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    INT             reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    LONG            reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    FLOAT           reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    DOUBLE          reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)
    Identifier      reduce using rule 225 (annotationTypeElementRest -> enumDeclaration expt_48 .)


state 571

    (223) annotationTypeElementRest -> annotationTypeDeclaration expt_48 .

    BRPAREN         reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    PUBLIC          reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    PROTECTED       reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    PRIVATE         reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    STATIC          reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    ABSTRACT        reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    FINAL           reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    NATIVE          reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    SYNCHRONIZED    reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    TRANSIENT       reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    VOLATILE        reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    STRICTFP        reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    AT              reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    ENUM            reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    INTERFACE       reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    CLASS           reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    BOOLEAN         reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    CHAR            reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    BYTE            reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    SHORT           reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    INT             reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    LONG            reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    FLOAT           reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    DOUBLE          reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)
    Identifier      reduce using rule 223 (annotationTypeElementRest -> annotationTypeDeclaration expt_48 .)


state 572

    (224) annotationTypeElementRest -> annotationTypeDeclaration empty .
    (531) expt_48 -> empty .

  ! reduce/reduce conflict for BRPAREN resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for STATIC resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for FINAL resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for NATIVE resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for SYNCHRONIZED resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for TRANSIENT resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for VOLATILE resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for AT resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for ENUM resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for CLASS resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for INT resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for LONG resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
  ! reduce/reduce conflict for Identifier resolved using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    BRPAREN         reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    PUBLIC          reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    PROTECTED       reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    PRIVATE         reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    STATIC          reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    ABSTRACT        reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    FINAL           reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    NATIVE          reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    SYNCHRONIZED    reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    TRANSIENT       reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    VOLATILE        reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    STRICTFP        reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    AT              reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    ENUM            reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    INTERFACE       reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    CLASS           reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    BOOLEAN         reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    CHAR            reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    BYTE            reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    SHORT           reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    INT             reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    LONG            reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    FLOAT           reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    DOUBLE          reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)
    Identifier      reduce using rule 224 (annotationTypeElementRest -> annotationTypeDeclaration empty .)

  ! BRPAREN         [ reduce using rule 531 (expt_48 -> empty .) ]
  ! PUBLIC          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! PROTECTED       [ reduce using rule 531 (expt_48 -> empty .) ]
  ! PRIVATE         [ reduce using rule 531 (expt_48 -> empty .) ]
  ! STATIC          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! ABSTRACT        [ reduce using rule 531 (expt_48 -> empty .) ]
  ! FINAL           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! NATIVE          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! SYNCHRONIZED    [ reduce using rule 531 (expt_48 -> empty .) ]
  ! TRANSIENT       [ reduce using rule 531 (expt_48 -> empty .) ]
  ! VOLATILE        [ reduce using rule 531 (expt_48 -> empty .) ]
  ! STRICTFP        [ reduce using rule 531 (expt_48 -> empty .) ]
  ! AT              [ reduce using rule 531 (expt_48 -> empty .) ]
  ! ENUM            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! INTERFACE       [ reduce using rule 531 (expt_48 -> empty .) ]
  ! CLASS           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! BOOLEAN         [ reduce using rule 531 (expt_48 -> empty .) ]
  ! CHAR            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! BYTE            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! SHORT           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! INT             [ reduce using rule 531 (expt_48 -> empty .) ]
  ! LONG            [ reduce using rule 531 (expt_48 -> empty .) ]
  ! FLOAT           [ reduce using rule 531 (expt_48 -> empty .) ]
  ! DOUBLE          [ reduce using rule 531 (expt_48 -> empty .) ]
  ! Identifier      [ reduce using rule 531 (expt_48 -> empty .) ]


state 573

    (459) expt_10 -> expt_10 COMMA typeParameter .

    MORE            reduce using rule 459 (expt_10 -> expt_10 COMMA typeParameter .)
    COMMA           reduce using rule 459 (expt_10 -> expt_10 COMMA typeParameter .)


state 574

    (462) expt_12 -> AND . type
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    type                           shift and go to state 640

state 575

    (45) typeBound -> type expt_12 .
    (463) expt_12 -> expt_12 . AND type

    COMMA           reduce using rule 45 (typeBound -> type expt_12 .)
    MORE            reduce using rule 45 (typeBound -> type expt_12 .)
    AND             shift and go to state 641


state 576

    (46) typeBound -> type empty .

    COMMA           reduce using rule 46 (typeBound -> type empty .)
    MORE            reduce using rule 46 (typeBound -> type empty .)


state 577

    (80) interfaceBody -> BLPAREN empty BRPAREN .

    SEMI            reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    PUBLIC          reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    PROTECTED       reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    PRIVATE         reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    ABSTRACT        reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    STATIC          reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    FINAL           reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    STRICTFP        reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    CLASS           reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    ENUM            reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    INTERFACE       reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    AT              reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    $end            reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    BRPAREN         reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    Identifier      reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    CONTINUE        reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    BREAK           reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    THROW           reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    RETURN          reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    SYNCHRONIZED    reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    SWITCH          reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    TRY             reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    DO              reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    WHILE           reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    FOR             reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    IF              reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    ASSERT          reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    BLPAREN         reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    BOOLEAN         reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    CHAR            reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    BYTE            reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    SHORT           reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    INT             reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    LONG            reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    FLOAT           reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    DOUBLE          reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    PLUS            reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    DASH            reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    OP_INC          reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    OP_DEC          reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    EXCLAMATION     reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    TILDE           reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    VOID            reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    NEW             reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    SUPER           reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    THIS            reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    LPAREN          reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    CharacterLiteral reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    StringLiteral   reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    NULL            reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    NUMBER          reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    HEX_NUMBER      reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    LONG_NUMBER     reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    NON_INTEGER_1   reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    NON_INTEGER_2   reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    NON_INTEGER_3   reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    TRUE            reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    FALSE           reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    CASE            reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    DEFAULT         reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    NATIVE          reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    TRANSIENT       reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    VOLATILE        reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)
    LESS            reduce using rule 80 (interfaceBody -> BLPAREN empty BRPAREN .)


state 578

    (79) interfaceBody -> BLPAREN expt_23 BRPAREN .

    SEMI            reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    PUBLIC          reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    PROTECTED       reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    PRIVATE         reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    ABSTRACT        reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    STATIC          reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    FINAL           reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    STRICTFP        reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    CLASS           reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    ENUM            reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    INTERFACE       reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    AT              reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    $end            reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    BRPAREN         reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    Identifier      reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    CONTINUE        reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    BREAK           reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    THROW           reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    RETURN          reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    SYNCHRONIZED    reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    SWITCH          reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    TRY             reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    DO              reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    WHILE           reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    FOR             reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    IF              reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    ASSERT          reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    BLPAREN         reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    BOOLEAN         reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    CHAR            reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    BYTE            reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    SHORT           reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    INT             reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    LONG            reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    FLOAT           reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    DOUBLE          reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    PLUS            reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    DASH            reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    OP_INC          reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    OP_DEC          reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    EXCLAMATION     reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    TILDE           reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    VOID            reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    NEW             reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    SUPER           reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    THIS            reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    LPAREN          reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    CharacterLiteral reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    StringLiteral   reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    NULL            reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    NUMBER          reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    HEX_NUMBER      reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    LONG_NUMBER     reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    NON_INTEGER_1   reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    NON_INTEGER_2   reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    NON_INTEGER_3   reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    TRUE            reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    FALSE           reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    CASE            reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    DEFAULT         reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    NATIVE          reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    TRANSIENT       reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    VOLATILE        reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)
    LESS            reduce using rule 79 (interfaceBody -> BLPAREN expt_23 BRPAREN .)


state 579

    (483) expt_23 -> expt_23 interfaceBodyDeclaration .

    BRPAREN         reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    SEMI            reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    PUBLIC          reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    PROTECTED       reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    PRIVATE         reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    STATIC          reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    ABSTRACT        reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    FINAL           reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    NATIVE          reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    SYNCHRONIZED    reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    TRANSIENT       reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    VOLATILE        reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    STRICTFP        reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    AT              reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    VOID            reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    LESS            reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    INTERFACE       reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    CLASS           reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    ENUM            reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    BOOLEAN         reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    CHAR            reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    BYTE            reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    SHORT           reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    INT             reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    LONG            reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    FLOAT           reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    DOUBLE          reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)
    Identifier      reduce using rule 483 (expt_23 -> expt_23 interfaceBodyDeclaration .)


state 580

    (101) interfaceMemberDecl -> VOID . Identifier voidInterfaceMethodDeclaratorRest

    Identifier      shift and go to state 642


state 581

    (99) interfaceMemberDecl -> interfaceMethodOrFieldDecl .

    BRPAREN         reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    SEMI            reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    PUBLIC          reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    PROTECTED       reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    PRIVATE         reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    STATIC          reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    ABSTRACT        reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    FINAL           reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    NATIVE          reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    SYNCHRONIZED    reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    TRANSIENT       reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    VOLATILE        reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    STRICTFP        reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    AT              reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    VOID            reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    LESS            reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    INTERFACE       reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    CLASS           reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    ENUM            reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    BOOLEAN         reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    CHAR            reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    BYTE            reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    SHORT           reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    INT             reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    LONG            reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    FLOAT           reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    DOUBLE          reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    Identifier      reduce using rule 99 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)


state 582

    (117) interfaceGenericMethodDecl -> typeParameters . expr_3 Identifier interfaceMethodDeclaratorRest
    (409) expr_3 -> . type
    (410) expr_3 -> . VOID
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    VOID            shift and go to state 643
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    type                           shift and go to state 644
    expr_3                         shift and go to state 645

state 583

    (97) interfaceBodyDeclaration -> modifiers interfaceMemberDecl .

    BRPAREN         reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    SEMI            reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    PUBLIC          reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    PROTECTED       reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    PRIVATE         reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    STATIC          reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    ABSTRACT        reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    FINAL           reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    NATIVE          reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    SYNCHRONIZED    reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    TRANSIENT       reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    VOLATILE        reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    STRICTFP        reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    AT              reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    VOID            reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    LESS            reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    INTERFACE       reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    CLASS           reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    ENUM            reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    BOOLEAN         reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    CHAR            reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    BYTE            reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    SHORT           reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    INT             reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    LONG            reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    FLOAT           reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    DOUBLE          reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    Identifier      reduce using rule 97 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)


state 584

    (100) interfaceMemberDecl -> interfaceGenericMethodDecl .

    BRPAREN         reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    SEMI            reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    PUBLIC          reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    PROTECTED       reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    PRIVATE         reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    STATIC          reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    ABSTRACT        reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    FINAL           reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    NATIVE          reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    SYNCHRONIZED    reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    TRANSIENT       reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    VOLATILE        reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    STRICTFP        reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    AT              reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    VOID            reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    LESS            reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    INTERFACE       reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    CLASS           reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    ENUM            reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    BOOLEAN         reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    CHAR            reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    BYTE            reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    SHORT           reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    INT             reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    LONG            reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    FLOAT           reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    DOUBLE          reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    Identifier      reduce using rule 100 (interfaceMemberDecl -> interfaceGenericMethodDecl .)


state 585

    (104) interfaceMethodOrFieldDecl -> type . Identifier interfaceMethodOrFieldRest

    Identifier      shift and go to state 646


state 586

    (103) interfaceMemberDecl -> classDeclaration .

    BRPAREN         reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    SEMI            reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    PUBLIC          reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    PROTECTED       reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    PRIVATE         reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    STATIC          reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    ABSTRACT        reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    FINAL           reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    NATIVE          reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    SYNCHRONIZED    reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    TRANSIENT       reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    VOLATILE        reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    STRICTFP        reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    AT              reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    VOID            reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    LESS            reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    INTERFACE       reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    CLASS           reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    ENUM            reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    BOOLEAN         reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    CHAR            reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    BYTE            reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    SHORT           reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    INT             reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    LONG            reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    FLOAT           reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    DOUBLE          reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)
    Identifier      reduce using rule 103 (interfaceMemberDecl -> classDeclaration .)


state 587

    (102) interfaceMemberDecl -> interfaceDeclaration .

    BRPAREN         reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    SEMI            reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    PUBLIC          reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    PROTECTED       reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    PRIVATE         reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    STATIC          reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    ABSTRACT        reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    FINAL           reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    NATIVE          reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    TRANSIENT       reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    VOLATILE        reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    STRICTFP        reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    AT              reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    VOID            reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    LESS            reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    INTERFACE       reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    CLASS           reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    ENUM            reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    BOOLEAN         reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    CHAR            reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    BYTE            reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    SHORT           reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    INT             reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    LONG            reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    FLOAT           reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    DOUBLE          reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)
    Identifier      reduce using rule 102 (interfaceMemberDecl -> interfaceDeclaration .)


state 588

    (436) suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .

    FLPAREN         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    OP_INC          reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    OP_DEC          reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    DOT             reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    MULT            reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    SLASH           reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    PERCENT         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    PLUS            reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    DASH            reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    OP_SHR          reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    OP_SHL          reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    OP_SHRR         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    OP_LE           reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    OP_GE           reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    LESS            reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    MORE            reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    INSTANCEOF      reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    OP_EQ           reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    OP_NE           reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    AND             reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    CARET           reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    VERTICAL        reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    OP_LAND         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    OP_LOR          reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    QUES            reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    EQUALS          reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    ASS_ADD         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    ASS_SUB         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    ASS_MUL         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    ASS_DIV         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    ASS_AND         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    ASS_OR          reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    ASS_XOR         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    ASS_MOD         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    ASS_SHL         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    ASS_SHRR        reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    ASS_SHR         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    COLON           reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    SEMI            reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    RPAREN          reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    COMMA           reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    BRPAREN         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)
    FRPAREN         reduce using rule 436 (suffixExprStatements -> suffixExprStatements FLPAREN expression FRPAREN .)


state 589

    (550) expt_60 -> COMMA expression .

    COMMA           reduce using rule 550 (expt_60 -> COMMA expression .)
    RPAREN          reduce using rule 550 (expt_60 -> COMMA expression .)
    SEMI            reduce using rule 550 (expt_60 -> COMMA expression .)


state 590

    (551) expt_60 -> expt_60 COMMA . expression
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 647

state 591

    (390) explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .

    OP_INC          reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_DEC          reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    FLPAREN         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    DOT             reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    MULT            reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    SLASH           reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    PERCENT         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    PLUS            reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    DASH            reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_SHR          reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_SHL          reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_SHRR         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_LE           reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_GE           reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    LESS            reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    MORE            reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    INSTANCEOF      reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_EQ           reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_NE           reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    AND             reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    CARET           reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    VERTICAL        reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_LAND         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_LOR          reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    QUES            reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    RPAREN          reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    COMMA           reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    BRPAREN         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    EQUALS          reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_ADD         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_SUB         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_MUL         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_DIV         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_AND         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_OR          reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_XOR         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_MOD         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_SHL         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_SHRR        reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_SHR         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    FRPAREN         reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    COLON           reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    SEMI            reduce using rule 390 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)


state 592

    (386) innerCreator -> empty Identifier . classCreatorRest
    (388) classCreatorRest -> . arguments
    (389) classCreatorRest -> . arguments classBody
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

    LPAREN          shift and go to state 204

    classCreatorRest               shift and go to state 648
    arguments                      shift and go to state 390

state 593

    (385) innerCreator -> expt_41 Identifier . classCreatorRest
    (388) classCreatorRest -> . arguments
    (389) classCreatorRest -> . arguments classBody
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

    LPAREN          shift and go to state 204

    classCreatorRest               shift and go to state 649
    arguments                      shift and go to state 390

state 594

    (525) expt_45 -> expt_45 COMMA elementValue .

    COMMA           reduce using rule 525 (expt_45 -> expt_45 COMMA elementValue .)
    BRPAREN         reduce using rule 525 (expt_45 -> expt_45 COMMA elementValue .)


state 595

    (312) conditionalExpression -> conditionalOrExpression QUES expression COLON expression .

    EQUALS          reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    ASS_ADD         reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    ASS_SUB         reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    ASS_MUL         reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    ASS_DIV         reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    ASS_AND         reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    ASS_OR          reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    ASS_XOR         reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    ASS_MOD         reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    ASS_SHL         reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    ASS_SHRR        reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    ASS_SHR         reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    SEMI            reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    FRPAREN         reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    COMMA           reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    COLON           reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    RPAREN          reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)
    BRPAREN         reduce using rule 312 (conditionalExpression -> conditionalOrExpression QUES expression COLON expression .)


state 596

    (438) expr_19 -> expression FRPAREN . expt_76 expt_24
    (575) expt_76 -> . FLPAREN expression FRPAREN
    (576) expt_76 -> . expt_76 FLPAREN expression FRPAREN

    FLPAREN         shift and go to state 651

    expt_76                        shift and go to state 650

state 597

    (437) expr_19 -> FRPAREN expt_24 . arrayInitializer
    (485) expt_24 -> expt_24 . FLPAREN FRPAREN
    (135) arrayInitializer -> . BLPAREN expt_31 BRPAREN
    (136) arrayInitializer -> . BLPAREN empty BRPAREN

    FLPAREN         shift and go to state 391
    BLPAREN         shift and go to state 653

    arrayInitializer               shift and go to state 652

state 598

    (168) typeArguments -> LESS typeArgument expt_34 MORE .

    DOT             reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    FLPAREN         reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    RPAREN          reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    Identifier      reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    COMMA           reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    BLPAREN         reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    LPAREN          reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    IMPLEMENTS      reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    OP_EQ           reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    OP_NE           reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    AND             reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    CARET           reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    VERTICAL        reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    OP_LAND         reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    OP_LOR          reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    QUES            reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    BRPAREN         reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    EQUALS          reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    ASS_ADD         reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    ASS_SUB         reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    ASS_MUL         reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    ASS_DIV         reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    ASS_AND         reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    ASS_OR          reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    ASS_XOR         reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    ASS_MOD         reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    ASS_SHL         reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    ASS_SHRR        reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    ASS_SHR         reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    FRPAREN         reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    COLON           reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    SEMI            reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    MORE            reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)
    OP_ARRAY        reduce using rule 168 (typeArguments -> LESS typeArgument expt_34 MORE .)


state 599

    (505) expt_34 -> expt_34 COMMA . typeArgument
    (170) typeArgument -> . QUES expt_35
    (171) typeArgument -> . QUES empty
    (172) typeArgument -> . type
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    QUES            shift and go to state 421
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    typeArgument                   shift and go to state 654
    type                           shift and go to state 419

state 600

    (504) expt_34 -> COMMA typeArgument .

    MORE            reduce using rule 504 (expt_34 -> COMMA typeArgument .)
    COMMA           reduce using rule 504 (expt_34 -> COMMA typeArgument .)


state 601

    (506) expt_35 -> expr_5 type .

    MORE            reduce using rule 506 (expt_35 -> expr_5 type .)
    COMMA           reduce using rule 506 (expt_35 -> expr_5 type .)


state 602

    (502) expt_33 -> DOT Identifier expt_32 .

    DOT             reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    FLPAREN         reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    COMMA           reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    BLPAREN         reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    LPAREN          reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    RPAREN          reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    IMPLEMENTS      reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    OP_EQ           reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    OP_NE           reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    AND             reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    CARET           reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    VERTICAL        reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    OP_LAND         reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    OP_LOR          reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    QUES            reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    BRPAREN         reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    EQUALS          reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    ASS_ADD         reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    ASS_SUB         reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    ASS_MUL         reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    ASS_DIV         reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    ASS_AND         reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    ASS_OR          reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    ASS_XOR         reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    ASS_MOD         reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    ASS_SHL         reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    ASS_SHRR        reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    ASS_SHR         reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    FRPAREN         reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    COLON           reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    SEMI            reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    MORE            reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    Identifier      reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)
    OP_ARRAY        reduce using rule 502 (expt_33 -> DOT Identifier expt_32 .)


state 603

    (501) expt_32 -> empty .

    DOT             reduce using rule 501 (expt_32 -> empty .)
    FLPAREN         reduce using rule 501 (expt_32 -> empty .)
    COMMA           reduce using rule 501 (expt_32 -> empty .)
    BLPAREN         reduce using rule 501 (expt_32 -> empty .)
    LPAREN          reduce using rule 501 (expt_32 -> empty .)
    RPAREN          reduce using rule 501 (expt_32 -> empty .)
    IMPLEMENTS      reduce using rule 501 (expt_32 -> empty .)
    OP_EQ           reduce using rule 501 (expt_32 -> empty .)
    OP_NE           reduce using rule 501 (expt_32 -> empty .)
    AND             reduce using rule 501 (expt_32 -> empty .)
    CARET           reduce using rule 501 (expt_32 -> empty .)
    VERTICAL        reduce using rule 501 (expt_32 -> empty .)
    OP_LAND         reduce using rule 501 (expt_32 -> empty .)
    OP_LOR          reduce using rule 501 (expt_32 -> empty .)
    QUES            reduce using rule 501 (expt_32 -> empty .)
    BRPAREN         reduce using rule 501 (expt_32 -> empty .)
    EQUALS          reduce using rule 501 (expt_32 -> empty .)
    ASS_ADD         reduce using rule 501 (expt_32 -> empty .)
    ASS_SUB         reduce using rule 501 (expt_32 -> empty .)
    ASS_MUL         reduce using rule 501 (expt_32 -> empty .)
    ASS_DIV         reduce using rule 501 (expt_32 -> empty .)
    ASS_AND         reduce using rule 501 (expt_32 -> empty .)
    ASS_OR          reduce using rule 501 (expt_32 -> empty .)
    ASS_XOR         reduce using rule 501 (expt_32 -> empty .)
    ASS_MOD         reduce using rule 501 (expt_32 -> empty .)
    ASS_SHL         reduce using rule 501 (expt_32 -> empty .)
    ASS_SHRR        reduce using rule 501 (expt_32 -> empty .)
    ASS_SHR         reduce using rule 501 (expt_32 -> empty .)
    FRPAREN         reduce using rule 501 (expt_32 -> empty .)
    COLON           reduce using rule 501 (expt_32 -> empty .)
    SEMI            reduce using rule 501 (expt_32 -> empty .)
    MORE            reduce using rule 501 (expt_32 -> empty .)
    Identifier      reduce using rule 501 (expt_32 -> empty .)
    OP_ARRAY        reduce using rule 501 (expt_32 -> empty .)


state 604

    (503) expt_33 -> expt_33 DOT Identifier . expt_32
    (500) expt_32 -> . typeArguments
    (501) expt_32 -> . empty
    (168) typeArguments -> . LESS typeArgument expt_34 MORE
    (169) typeArguments -> . LESS typeArgument MORE
    (584) empty -> .

    LESS            shift and go to state 279
    DOT             reduce using rule 584 (empty -> .)
    FLPAREN         reduce using rule 584 (empty -> .)
    COMMA           reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)
    LPAREN          reduce using rule 584 (empty -> .)
    RPAREN          reduce using rule 584 (empty -> .)
    IMPLEMENTS      reduce using rule 584 (empty -> .)
    OP_EQ           reduce using rule 584 (empty -> .)
    OP_NE           reduce using rule 584 (empty -> .)
    AND             reduce using rule 584 (empty -> .)
    CARET           reduce using rule 584 (empty -> .)
    VERTICAL        reduce using rule 584 (empty -> .)
    OP_LAND         reduce using rule 584 (empty -> .)
    OP_LOR          reduce using rule 584 (empty -> .)
    QUES            reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)
    EQUALS          reduce using rule 584 (empty -> .)
    ASS_ADD         reduce using rule 584 (empty -> .)
    ASS_SUB         reduce using rule 584 (empty -> .)
    ASS_MUL         reduce using rule 584 (empty -> .)
    ASS_DIV         reduce using rule 584 (empty -> .)
    ASS_AND         reduce using rule 584 (empty -> .)
    ASS_OR          reduce using rule 584 (empty -> .)
    ASS_XOR         reduce using rule 584 (empty -> .)
    ASS_MOD         reduce using rule 584 (empty -> .)
    ASS_SHL         reduce using rule 584 (empty -> .)
    ASS_SHRR        reduce using rule 584 (empty -> .)
    ASS_SHR         reduce using rule 584 (empty -> .)
    FRPAREN         reduce using rule 584 (empty -> .)
    COLON           reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)
    MORE            reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    OP_ARRAY        reduce using rule 584 (empty -> .)

    typeArguments                  shift and go to state 280
    expt_32                        shift and go to state 655
    empty                          shift and go to state 603

state 605

    (471) expt_16 -> expt_16 COMMA enumConstant .

    COMMA           reduce using rule 471 (expt_16 -> expt_16 COMMA enumConstant .)
    SEMI            reduce using rule 471 (expt_16 -> expt_16 COMMA enumConstant .)
    BRPAREN         reduce using rule 471 (expt_16 -> expt_16 COMMA enumConstant .)


state 606

    (59) enumConstant -> expt_17 Identifier expt_18 classBody .

    COMMA           reduce using rule 59 (enumConstant -> expt_17 Identifier expt_18 classBody .)
    SEMI            reduce using rule 59 (enumConstant -> expt_17 Identifier expt_18 classBody .)
    BRPAREN         reduce using rule 59 (enumConstant -> expt_17 Identifier expt_18 classBody .)


state 607

    (67) enumBodyDeclarations -> SEMI classBodyDeclarations .
    (477) classBodyDeclarations -> classBodyDeclarations . classBodyDeclaration
    (81) classBodyDeclaration -> . modifiers memberDecl
    (82) classBodyDeclaration -> . expt_3 block
    (83) classBodyDeclaration -> . empty block
    (84) classBodyDeclaration -> . SEMI
    (29) modifiers -> . expt_6
    (30) modifiers -> . empty
    (445) expt_3 -> . STATIC
    (446) expt_3 -> . empty
    (584) empty -> .
    (451) expt_6 -> . modifier
    (452) expt_6 -> . expt_6 modifier
    (137) modifier -> . annotation
    (138) modifier -> . PUBLIC
    (139) modifier -> . PROTECTED
    (140) modifier -> . PRIVATE
    (141) modifier -> . STATIC
    (142) modifier -> . ABSTRACT
    (143) modifier -> . FINAL
    (144) modifier -> . NATIVE
    (145) modifier -> . SYNCHRONIZED
    (146) modifier -> . TRANSIENT
    (147) modifier -> . VOLATILE
    (148) modifier -> . STRICTFP
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

  ! shift/reduce conflict for AT resolved as shift
    BRPAREN         reduce using rule 67 (enumBodyDeclarations -> SEMI classBodyDeclarations .)
    SEMI            shift and go to state 546
    STATIC          shift and go to state 545
    BLPAREN         reduce using rule 584 (empty -> .)
    VOID            reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    LESS            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    BOOLEAN         reduce using rule 584 (empty -> .)
    CHAR            reduce using rule 584 (empty -> .)
    BYTE            reduce using rule 584 (empty -> .)
    SHORT           reduce using rule 584 (empty -> .)
    INT             reduce using rule 584 (empty -> .)
    LONG            reduce using rule 584 (empty -> .)
    FLOAT           reduce using rule 584 (empty -> .)
    DOUBLE          reduce using rule 584 (empty -> .)
    PUBLIC          shift and go to state 310
    PROTECTED       shift and go to state 295
    PRIVATE         shift and go to state 300
    ABSTRACT        shift and go to state 294
    FINAL           shift and go to state 297
    NATIVE          shift and go to state 298
    SYNCHRONIZED    shift and go to state 293
    TRANSIENT       shift and go to state 307
    VOLATILE        shift and go to state 308
    STRICTFP        shift and go to state 301
    AT              shift and go to state 8

  ! AT              [ reduce using rule 584 (empty -> .) ]

    modifiers                      shift and go to state 551
    expt_6                         shift and go to state 299
    expt_3                         shift and go to state 547
    empty                          shift and go to state 548
    classBodyDeclaration           shift and go to state 625
    modifier                       shift and go to state 309
    annotation                     shift and go to state 304

state 608

    (49) enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .

    SEMI            reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    PUBLIC          reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    PROTECTED       reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    PRIVATE         reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    ABSTRACT        reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    STATIC          reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    FINAL           reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    STRICTFP        reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    CLASS           reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    ENUM            reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    INTERFACE       reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    AT              reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    $end            reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    BRPAREN         reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    Identifier      reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    CONTINUE        reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    BREAK           reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    THROW           reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    RETURN          reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    SYNCHRONIZED    reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    SWITCH          reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    TRY             reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    DO              reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    WHILE           reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    FOR             reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    IF              reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    ASSERT          reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    BLPAREN         reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    BOOLEAN         reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    CHAR            reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    BYTE            reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    SHORT           reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    INT             reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    LONG            reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    FLOAT           reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    DOUBLE          reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    PLUS            reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    DASH            reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    OP_INC          reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    OP_DEC          reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    EXCLAMATION     reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    TILDE           reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    VOID            reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    NEW             reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    SUPER           reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    THIS            reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    LPAREN          reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    CharacterLiteral reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    StringLiteral   reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    NULL            reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    NUMBER          reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    HEX_NUMBER      reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    LONG_NUMBER     reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    NON_INTEGER_1   reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    NON_INTEGER_2   reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    NON_INTEGER_3   reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    TRUE            reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    FALSE           reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    CASE            reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    DEFAULT         reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    NATIVE          reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    TRANSIENT       reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    VOLATILE        reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)
    LESS            reduce using rule 49 (enumBody -> BLPAREN expt_13 expt_14 expt_15 BRPAREN .)


state 609

    (50) enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .

    SEMI            reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    PUBLIC          reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    PROTECTED       reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    PRIVATE         reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    ABSTRACT        reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    STATIC          reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    FINAL           reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    STRICTFP        reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    CLASS           reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    ENUM            reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    INTERFACE       reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    AT              reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    $end            reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    BRPAREN         reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    Identifier      reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    CONTINUE        reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    BREAK           reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    THROW           reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    RETURN          reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    SYNCHRONIZED    reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    SWITCH          reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    TRY             reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    DO              reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    WHILE           reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    FOR             reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    IF              reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    ASSERT          reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    BLPAREN         reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    BOOLEAN         reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    CHAR            reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    BYTE            reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    SHORT           reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    INT             reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    LONG            reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    FLOAT           reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    DOUBLE          reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    PLUS            reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    DASH            reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    OP_INC          reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    OP_DEC          reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    EXCLAMATION     reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    TILDE           reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    VOID            reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    NEW             reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    SUPER           reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    THIS            reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    LPAREN          reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    CharacterLiteral reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    StringLiteral   reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    NULL            reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    NUMBER          reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    HEX_NUMBER      reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    LONG_NUMBER     reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    NON_INTEGER_1   reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    NON_INTEGER_2   reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    NON_INTEGER_3   reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    TRUE            reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    FALSE           reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    CASE            reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    DEFAULT         reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    NATIVE          reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    TRANSIENT       reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    VOLATILE        reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)
    LESS            reduce using rule 50 (enumBody -> BLPAREN expt_13 expt_14 empty BRPAREN .)


state 610

    (51) enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .

    SEMI            reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    PUBLIC          reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    PROTECTED       reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    PRIVATE         reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    ABSTRACT        reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    STATIC          reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    FINAL           reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    STRICTFP        reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    CLASS           reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    ENUM            reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    INTERFACE       reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    AT              reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    $end            reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    BRPAREN         reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    Identifier      reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    CONTINUE        reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    BREAK           reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    THROW           reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    RETURN          reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    SYNCHRONIZED    reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    SWITCH          reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    TRY             reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    DO              reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    WHILE           reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    FOR             reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    IF              reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    ASSERT          reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    BLPAREN         reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    BOOLEAN         reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    CHAR            reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    BYTE            reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    SHORT           reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    INT             reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    LONG            reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    FLOAT           reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    DOUBLE          reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    PLUS            reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    DASH            reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    OP_INC          reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    OP_DEC          reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    EXCLAMATION     reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    TILDE           reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    VOID            reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    NEW             reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    SUPER           reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    THIS            reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    LPAREN          reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    CharacterLiteral reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    StringLiteral   reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    NULL            reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    NUMBER          reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    HEX_NUMBER      reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    LONG_NUMBER     reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    NON_INTEGER_1   reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    NON_INTEGER_2   reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    NON_INTEGER_3   reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    TRUE            reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    FALSE           reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    CASE            reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    DEFAULT         reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    NATIVE          reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    TRANSIENT       reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    VOLATILE        reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)
    LESS            reduce using rule 51 (enumBody -> BLPAREN expt_13 empty expt_15 BRPAREN .)


state 611

    (52) enumBody -> BLPAREN expt_13 empty empty BRPAREN .

    SEMI            reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    PUBLIC          reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    PROTECTED       reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    PRIVATE         reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    ABSTRACT        reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    STATIC          reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    FINAL           reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    STRICTFP        reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    CLASS           reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    ENUM            reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    INTERFACE       reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    AT              reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    $end            reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    BRPAREN         reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    Identifier      reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    CONTINUE        reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    BREAK           reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    THROW           reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    RETURN          reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    SYNCHRONIZED    reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    SWITCH          reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    TRY             reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    DO              reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    WHILE           reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    FOR             reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    IF              reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    ASSERT          reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    BLPAREN         reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    BOOLEAN         reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    CHAR            reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    BYTE            reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    SHORT           reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    INT             reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    LONG            reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    FLOAT           reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    DOUBLE          reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    PLUS            reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    DASH            reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    OP_INC          reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    OP_DEC          reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    EXCLAMATION     reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    TILDE           reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    VOID            reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    NEW             reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    SUPER           reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    THIS            reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    LPAREN          reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    CharacterLiteral reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    StringLiteral   reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    NULL            reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    NUMBER          reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    HEX_NUMBER      reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    LONG_NUMBER     reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    NON_INTEGER_1   reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    NON_INTEGER_2   reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    NON_INTEGER_3   reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    TRUE            reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    FALSE           reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    CASE            reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    DEFAULT         reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    NATIVE          reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    TRANSIENT       reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    VOLATILE        reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)
    LESS            reduce using rule 52 (enumBody -> BLPAREN expt_13 empty empty BRPAREN .)


state 612

    (238) block -> BLPAREN . expt_40 BRPAREN
    (239) block -> BLPAREN . empty BRPAREN
    (516) expt_40 -> . blockStatement
    (517) expt_40 -> . expt_40 blockStatement
    (584) empty -> .
    (240) blockStatement -> . localVariableDeclarationStatement
    (241) blockStatement -> . classOrInterfaceDeclaration
    (242) blockStatement -> . statement
    (243) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (244) localVariableDeclarationStatement -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (248) statement -> . Identifier COLON statement
    (249) statement -> . statementExpression SEMI
    (250) statement -> . SEMI
    (251) statement -> . CONTINUE Identifier SEMI
    (252) statement -> . CONTINUE SEMI
    (253) statement -> . BREAK Identifier SEMI
    (254) statement -> . BREAK SEMI
    (255) statement -> . THROW expression SEMI
    (256) statement -> . RETURN expt_53 SEMI
    (257) statement -> . RETURN SEMI
    (258) statement -> . SYNCHRONIZED parExpression block
    (259) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (260) statement -> . TRY block expr_9
    (261) statement -> . DO statement WHILE parExpression SEMI
    (262) statement -> . WHILE parExpression statement
    (263) statement -> . FOR LPAREN forControl RPAREN statement
    (264) statement -> . IF parExpression statement ELSE statement
    (265) statement -> . IF parExpression statement
    (266) statement -> . ASSERT expression expt_51 SEMI
    (267) statement -> . ASSERT expression SEMI
    (268) statement -> . block
    (245) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (246) localVariableDeclaration -> . type variableDeclarators
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (296) statementExpression -> . expression
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN
    (247) variableModifiers -> . expt_50
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (534) expt_50 -> . variableModifier
    (535) expt_50 -> . expt_50 variableModifier
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (166) variableModifier -> . FINAL
    (167) variableModifier -> . annotation
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    BRPAREN         reduce using rule 584 (empty -> .)
    SEMI            shift and go to state 682
    Identifier      shift and go to state 666
    CONTINUE        shift and go to state 681
    BREAK           shift and go to state 678
    THROW           shift and go to state 686
    RETURN          shift and go to state 660
    SYNCHRONIZED    shift and go to state 661
    SWITCH          shift and go to state 672
    TRY             shift and go to state 665
    DO              shift and go to state 679
    WHILE           shift and go to state 671
    FOR             shift and go to state 664
    IF              shift and go to state 684
    ASSERT          shift and go to state 680
    BLPAREN         shift and go to state 612
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 662
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    conditionalAndExpression       shift and go to state 99
    blockStatement                 shift and go to state 656
    classOrInterfaceType           shift and go to state 164
    booleanLiteral                 shift and go to state 103
    classOrInterfaceDeclaration    shift and go to state 657
    relationalExpression           shift and go to state 107
    variableModifier               shift and go to state 658
    localVariableDeclarationStatement shift and go to state 659
    instanceOfExpression           shift and go to state 108
    inclusiveOrExpression          shift and go to state 113
    expt_40                        shift and go to state 663
    additiveExpression             shift and go to state 116
    classDeclaration               shift and go to state 31
    unaryExpressionNotPlusMinus    shift and go to state 120
    annotationTypeDeclaration      shift and go to state 36
    interfaceDeclaration           shift and go to state 24
    andExpression                  shift and go to state 121
    expt_50                        shift and go to state 667
    expression                     shift and go to state 668
    block                          shift and go to state 669
    equalityExpression             shift and go to state 123
    localVariableDeclaration       shift and go to state 670
    exclusiveOrExpression          shift and go to state 105
    primary                        shift and go to state 125
    literal                        shift and go to state 131
    statement                      shift and go to state 673
    type                           shift and go to state 674
    empty                          shift and go to state 675
    conditionalExpression          shift and go to state 264
    enumDeclaration                shift and go to state 27
    FloatingPointLiteral           shift and go to state 134
    primitiveType                  shift and go to state 677
    variableModifiers              shift and go to state 676
    multiplicativeExpression       shift and go to state 145
    normalInterfaceDeclaration     shift and go to state 18
    shiftExpression                shift and go to state 148
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    classOrInterfaceModifiers      shift and go to state 37
    integerLiteral                 shift and go to state 111
    expr_1                         shift and go to state 26
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    conditionalOrExpression        shift and go to state 124
    annotation                     shift and go to state 683
    castExpression                 shift and go to state 154
    classOrInterfaceModifier       shift and go to state 34
    statementExpression            shift and go to state 685

state 613

    (82) classBodyDeclaration -> expt_3 block .

    BRPAREN         reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    SEMI            reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    STATIC          reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    PUBLIC          reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    PROTECTED       reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    PRIVATE         reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    ABSTRACT        reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    FINAL           reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    NATIVE          reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    SYNCHRONIZED    reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    TRANSIENT       reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    VOLATILE        reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    STRICTFP        reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    AT              reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    VOID            reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    Identifier      reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    LESS            reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    INTERFACE       reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    CLASS           reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    ENUM            reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    BOOLEAN         reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    CHAR            reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    BYTE            reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    SHORT           reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    INT             reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    LONG            reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    FLOAT           reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    DOUBLE          reduce using rule 82 (classBodyDeclaration -> expt_3 block .)
    BLPAREN         reduce using rule 82 (classBodyDeclaration -> expt_3 block .)


state 614

    (83) classBodyDeclaration -> empty block .

    BRPAREN         reduce using rule 83 (classBodyDeclaration -> empty block .)
    SEMI            reduce using rule 83 (classBodyDeclaration -> empty block .)
    STATIC          reduce using rule 83 (classBodyDeclaration -> empty block .)
    PUBLIC          reduce using rule 83 (classBodyDeclaration -> empty block .)
    PROTECTED       reduce using rule 83 (classBodyDeclaration -> empty block .)
    PRIVATE         reduce using rule 83 (classBodyDeclaration -> empty block .)
    ABSTRACT        reduce using rule 83 (classBodyDeclaration -> empty block .)
    FINAL           reduce using rule 83 (classBodyDeclaration -> empty block .)
    NATIVE          reduce using rule 83 (classBodyDeclaration -> empty block .)
    SYNCHRONIZED    reduce using rule 83 (classBodyDeclaration -> empty block .)
    TRANSIENT       reduce using rule 83 (classBodyDeclaration -> empty block .)
    VOLATILE        reduce using rule 83 (classBodyDeclaration -> empty block .)
    STRICTFP        reduce using rule 83 (classBodyDeclaration -> empty block .)
    AT              reduce using rule 83 (classBodyDeclaration -> empty block .)
    VOID            reduce using rule 83 (classBodyDeclaration -> empty block .)
    Identifier      reduce using rule 83 (classBodyDeclaration -> empty block .)
    LESS            reduce using rule 83 (classBodyDeclaration -> empty block .)
    INTERFACE       reduce using rule 83 (classBodyDeclaration -> empty block .)
    CLASS           reduce using rule 83 (classBodyDeclaration -> empty block .)
    ENUM            reduce using rule 83 (classBodyDeclaration -> empty block .)
    BOOLEAN         reduce using rule 83 (classBodyDeclaration -> empty block .)
    CHAR            reduce using rule 83 (classBodyDeclaration -> empty block .)
    BYTE            reduce using rule 83 (classBodyDeclaration -> empty block .)
    SHORT           reduce using rule 83 (classBodyDeclaration -> empty block .)
    INT             reduce using rule 83 (classBodyDeclaration -> empty block .)
    LONG            reduce using rule 83 (classBodyDeclaration -> empty block .)
    FLOAT           reduce using rule 83 (classBodyDeclaration -> empty block .)
    DOUBLE          reduce using rule 83 (classBodyDeclaration -> empty block .)
    BLPAREN         reduce using rule 83 (classBodyDeclaration -> empty block .)


state 615

    (87) memberDecl -> VOID . Identifier voidMethodDeclaratorRest

    Identifier      shift and go to state 687


state 616

    (81) classBodyDeclaration -> modifiers memberDecl .

    BRPAREN         reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    SEMI            reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    STATIC          reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    PUBLIC          reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    PROTECTED       reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    PRIVATE         reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    ABSTRACT        reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    FINAL           reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    NATIVE          reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    SYNCHRONIZED    reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    TRANSIENT       reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    VOLATILE        reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    STRICTFP        reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    AT              reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    VOID            reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    Identifier      reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    LESS            reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    INTERFACE       reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    CLASS           reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    ENUM            reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    BOOLEAN         reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    CHAR            reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    BYTE            reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    SHORT           reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    INT             reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    LONG            reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    FLOAT           reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    DOUBLE          reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)
    BLPAREN         reduce using rule 81 (classBodyDeclaration -> modifiers memberDecl .)


state 617

    (92) genericMethodOrConstructorDecl -> typeParameters . genericMethodOrConstructorRest
    (93) genericMethodOrConstructorRest -> . expr_3 Identifier methodDeclaratorRest
    (94) genericMethodOrConstructorRest -> . Identifier constructorDeclaratorRest
    (409) expr_3 -> . type
    (410) expr_3 -> . VOID
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    Identifier      shift and go to state 690
    VOID            shift and go to state 643
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110

    primitiveType                  shift and go to state 165
    classOrInterfaceType           shift and go to state 164
    genericMethodOrConstructorRest shift and go to state 688
    type                           shift and go to state 644
    expr_3                         shift and go to state 689

state 618

    (86) memberDecl -> memberDeclaration .

    BRPAREN         reduce using rule 86 (memberDecl -> memberDeclaration .)
    SEMI            reduce using rule 86 (memberDecl -> memberDeclaration .)
    STATIC          reduce using rule 86 (memberDecl -> memberDeclaration .)
    PUBLIC          reduce using rule 86 (memberDecl -> memberDeclaration .)
    PROTECTED       reduce using rule 86 (memberDecl -> memberDeclaration .)
    PRIVATE         reduce using rule 86 (memberDecl -> memberDeclaration .)
    ABSTRACT        reduce using rule 86 (memberDecl -> memberDeclaration .)
    FINAL           reduce using rule 86 (memberDecl -> memberDeclaration .)
    NATIVE          reduce using rule 86 (memberDecl -> memberDeclaration .)
    SYNCHRONIZED    reduce using rule 86 (memberDecl -> memberDeclaration .)
    TRANSIENT       reduce using rule 86 (memberDecl -> memberDeclaration .)
    VOLATILE        reduce using rule 86 (memberDecl -> memberDeclaration .)
    STRICTFP        reduce using rule 86 (memberDecl -> memberDeclaration .)
    AT              reduce using rule 86 (memberDecl -> memberDeclaration .)
    VOID            reduce using rule 86 (memberDecl -> memberDeclaration .)
    Identifier      reduce using rule 86 (memberDecl -> memberDeclaration .)
    LESS            reduce using rule 86 (memberDecl -> memberDeclaration .)
    INTERFACE       reduce using rule 86 (memberDecl -> memberDeclaration .)
    CLASS           reduce using rule 86 (memberDecl -> memberDeclaration .)
    ENUM            reduce using rule 86 (memberDecl -> memberDeclaration .)
    BOOLEAN         reduce using rule 86 (memberDecl -> memberDeclaration .)
    CHAR            reduce using rule 86 (memberDecl -> memberDeclaration .)
    BYTE            reduce using rule 86 (memberDecl -> memberDeclaration .)
    SHORT           reduce using rule 86 (memberDecl -> memberDeclaration .)
    INT             reduce using rule 86 (memberDecl -> memberDeclaration .)
    LONG            reduce using rule 86 (memberDecl -> memberDeclaration .)
    FLOAT           reduce using rule 86 (memberDecl -> memberDeclaration .)
    DOUBLE          reduce using rule 86 (memberDecl -> memberDeclaration .)
    BLPAREN         reduce using rule 86 (memberDecl -> memberDeclaration .)


state 619

    (85) memberDecl -> genericMethodOrConstructorDecl .

    BRPAREN         reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    SEMI            reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    STATIC          reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    PUBLIC          reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    PROTECTED       reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    PRIVATE         reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    ABSTRACT        reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    FINAL           reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    NATIVE          reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    SYNCHRONIZED    reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    TRANSIENT       reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    VOLATILE        reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    STRICTFP        reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    AT              reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    VOID            reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    Identifier      reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    LESS            reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    INTERFACE       reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    CLASS           reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    ENUM            reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    BOOLEAN         reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    CHAR            reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    BYTE            reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    SHORT           reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    INT             reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    LONG            reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    FLOAT           reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    DOUBLE          reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)
    BLPAREN         reduce using rule 85 (memberDecl -> genericMethodOrConstructorDecl .)


state 620

    (90) memberDecl -> classDeclaration .

    BRPAREN         reduce using rule 90 (memberDecl -> classDeclaration .)
    SEMI            reduce using rule 90 (memberDecl -> classDeclaration .)
    STATIC          reduce using rule 90 (memberDecl -> classDeclaration .)
    PUBLIC          reduce using rule 90 (memberDecl -> classDeclaration .)
    PROTECTED       reduce using rule 90 (memberDecl -> classDeclaration .)
    PRIVATE         reduce using rule 90 (memberDecl -> classDeclaration .)
    ABSTRACT        reduce using rule 90 (memberDecl -> classDeclaration .)
    FINAL           reduce using rule 90 (memberDecl -> classDeclaration .)
    NATIVE          reduce using rule 90 (memberDecl -> classDeclaration .)
    SYNCHRONIZED    reduce using rule 90 (memberDecl -> classDeclaration .)
    TRANSIENT       reduce using rule 90 (memberDecl -> classDeclaration .)
    VOLATILE        reduce using rule 90 (memberDecl -> classDeclaration .)
    STRICTFP        reduce using rule 90 (memberDecl -> classDeclaration .)
    AT              reduce using rule 90 (memberDecl -> classDeclaration .)
    VOID            reduce using rule 90 (memberDecl -> classDeclaration .)
    Identifier      reduce using rule 90 (memberDecl -> classDeclaration .)
    LESS            reduce using rule 90 (memberDecl -> classDeclaration .)
    INTERFACE       reduce using rule 90 (memberDecl -> classDeclaration .)
    CLASS           reduce using rule 90 (memberDecl -> classDeclaration .)
    ENUM            reduce using rule 90 (memberDecl -> classDeclaration .)
    BOOLEAN         reduce using rule 90 (memberDecl -> classDeclaration .)
    CHAR            reduce using rule 90 (memberDecl -> classDeclaration .)
    BYTE            reduce using rule 90 (memberDecl -> classDeclaration .)
    SHORT           reduce using rule 90 (memberDecl -> classDeclaration .)
    INT             reduce using rule 90 (memberDecl -> classDeclaration .)
    LONG            reduce using rule 90 (memberDecl -> classDeclaration .)
    FLOAT           reduce using rule 90 (memberDecl -> classDeclaration .)
    DOUBLE          reduce using rule 90 (memberDecl -> classDeclaration .)
    BLPAREN         reduce using rule 90 (memberDecl -> classDeclaration .)


state 621

    (88) memberDecl -> Identifier . constructorDeclaratorRest
    (154) classOrInterfaceType -> Identifier . expt_32 expt_33
    (155) classOrInterfaceType -> Identifier . expt_32 empty
    (156) classOrInterfaceType -> Identifier . empty expt_33
    (157) classOrInterfaceType -> Identifier . empty empty
    (120) constructorDeclaratorRest -> . formalParameters expt_25 constructorBody
    (121) constructorDeclaratorRest -> . formalParameters empty constructorBody
    (500) expt_32 -> . typeArguments
    (501) expt_32 -> . empty
    (584) empty -> .
    (175) formalParameters -> . LPAREN expt_37 RPAREN
    (176) formalParameters -> . LPAREN empty RPAREN
    (168) typeArguments -> . LESS typeArgument expt_34 MORE
    (169) typeArguments -> . LESS typeArgument MORE

    DOT             reduce using rule 584 (empty -> .)
    FLPAREN         reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    LPAREN          shift and go to state 693
    LESS            shift and go to state 279

    typeArguments                  shift and go to state 280
    expt_32                        shift and go to state 281
    formalParameters               shift and go to state 691
    constructorDeclaratorRest      shift and go to state 692
    empty                          shift and go to state 282

state 622

    (91) memberDeclaration -> type . expr_2
    (407) expr_2 -> . methodDeclaration
    (408) expr_2 -> . fieldDeclaration
    (95) methodDeclaration -> . Identifier methodDeclaratorRest
    (96) fieldDeclaration -> . variableDeclarators SEMI
    (123) variableDeclarators -> . variableDeclarator expt_26
    (124) variableDeclarators -> . variableDeclarator empty
    (125) variableDeclarator -> . variableDeclaratorId expt_27
    (126) variableDeclarator -> . variableDeclaratorId empty
    (131) variableDeclaratorId -> . Identifier expt_24
    (132) variableDeclaratorId -> . Identifier empty

    Identifier      shift and go to state 697

    variableDeclarators            shift and go to state 694
    methodDeclaration              shift and go to state 695
    fieldDeclaration               shift and go to state 696
    variableDeclaratorId           shift and go to state 565
    expr_2                         shift and go to state 698
    variableDeclarator             shift and go to state 568

state 623

    (89) memberDecl -> interfaceDeclaration .

    BRPAREN         reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    SEMI            reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    STATIC          reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    PUBLIC          reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    PROTECTED       reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    PRIVATE         reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    ABSTRACT        reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    FINAL           reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    NATIVE          reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    TRANSIENT       reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    VOLATILE        reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    STRICTFP        reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    AT              reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    VOID            reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    Identifier      reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    LESS            reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    INTERFACE       reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    CLASS           reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    ENUM            reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    BOOLEAN         reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    CHAR            reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    BYTE            reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    SHORT           reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    INT             reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    LONG            reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    FLOAT           reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    DOUBLE          reduce using rule 89 (memberDecl -> interfaceDeclaration .)
    BLPAREN         reduce using rule 89 (memberDecl -> interfaceDeclaration .)


state 624

    (77) classBody -> BLPAREN classBodyDeclarations BRPAREN .

    OP_INC          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_DEC          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    FLPAREN         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    DOT             reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    MULT            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    SLASH           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    PERCENT         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    PLUS            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    DASH            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_SHR          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_SHL          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_SHRR         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_LE           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_GE           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    LESS            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    MORE            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    INSTANCEOF      reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_EQ           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_NE           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    AND             reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    CARET           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    VERTICAL        reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_LAND         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_LOR          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    QUES            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    RPAREN          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    COMMA           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    BRPAREN         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    EQUALS          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_ADD         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_SUB         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_MUL         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_DIV         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_AND         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_OR          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_XOR         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_MOD         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_SHL         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_SHRR        reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_SHR         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    FRPAREN         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    COLON           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    SEMI            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    PUBLIC          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    PROTECTED       reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    PRIVATE         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ABSTRACT        reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    STATIC          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    FINAL           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    STRICTFP        reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    CLASS           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ENUM            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    INTERFACE       reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    AT              reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    $end            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    Identifier      reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    CONTINUE        reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    BREAK           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    THROW           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    RETURN          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    SYNCHRONIZED    reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    SWITCH          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    TRY             reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    DO              reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    WHILE           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    FOR             reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    IF              reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASSERT          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    BLPAREN         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    BOOLEAN         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    CHAR            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    BYTE            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    SHORT           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    INT             reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    LONG            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    FLOAT           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    DOUBLE          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    EXCLAMATION     reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    TILDE           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    VOID            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    NEW             reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    SUPER           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    THIS            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    LPAREN          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    CharacterLiteral reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    StringLiteral   reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    NULL            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    NUMBER          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    HEX_NUMBER      reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    LONG_NUMBER     reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    NON_INTEGER_1   reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    NON_INTEGER_2   reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    NON_INTEGER_3   reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    TRUE            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    FALSE           reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    CASE            reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    DEFAULT         reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    NATIVE          reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    TRANSIENT       reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    VOLATILE        reduce using rule 77 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)


state 625

    (477) classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .

    BRPAREN         reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    SEMI            reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    STATIC          reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    PUBLIC          reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    PROTECTED       reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    PRIVATE         reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    ABSTRACT        reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    FINAL           reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    NATIVE          reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    SYNCHRONIZED    reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    TRANSIENT       reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    VOLATILE        reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    STRICTFP        reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    AT              reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    VOID            reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    Identifier      reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    LESS            reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    INTERFACE       reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    CLASS           reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    ENUM            reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    BOOLEAN         reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    CHAR            reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    BYTE            reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    SHORT           reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    INT             reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    LONG            reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    FLOAT           reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    DOUBLE          reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    BLPAREN         reduce using rule 477 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)


state 626

    (53) enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .

    SEMI            reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    PUBLIC          reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    PROTECTED       reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    PRIVATE         reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    ABSTRACT        reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    STATIC          reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    FINAL           reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    STRICTFP        reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    CLASS           reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    ENUM            reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    INTERFACE       reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    AT              reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    $end            reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    BRPAREN         reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    Identifier      reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    CONTINUE        reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    BREAK           reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    THROW           reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    RETURN          reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    SYNCHRONIZED    reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    SWITCH          reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    TRY             reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    DO              reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    WHILE           reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    FOR             reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    IF              reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    ASSERT          reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    BLPAREN         reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    BOOLEAN         reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    CHAR            reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    BYTE            reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    SHORT           reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    INT             reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    LONG            reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    FLOAT           reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    DOUBLE          reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    PLUS            reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    DASH            reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    OP_INC          reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    OP_DEC          reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    EXCLAMATION     reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    TILDE           reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    VOID            reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    NEW             reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    SUPER           reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    THIS            reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    LPAREN          reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    CharacterLiteral reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    StringLiteral   reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    NULL            reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    NUMBER          reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    HEX_NUMBER      reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    LONG_NUMBER     reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    NON_INTEGER_1   reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    NON_INTEGER_2   reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    NON_INTEGER_3   reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    TRUE            reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    FALSE           reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    CASE            reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    DEFAULT         reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    NATIVE          reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    TRANSIENT       reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    VOLATILE        reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)
    LESS            reduce using rule 53 (enumBody -> BLPAREN empty expt_14 expt_15 BRPAREN .)


state 627

    (54) enumBody -> BLPAREN empty expt_14 empty BRPAREN .

    SEMI            reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    PUBLIC          reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    PROTECTED       reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    PRIVATE         reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    ABSTRACT        reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    STATIC          reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    FINAL           reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    STRICTFP        reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    CLASS           reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    ENUM            reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    INTERFACE       reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    AT              reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    $end            reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    BRPAREN         reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    Identifier      reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    CONTINUE        reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    BREAK           reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    THROW           reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    RETURN          reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    SYNCHRONIZED    reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    SWITCH          reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    TRY             reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    DO              reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    WHILE           reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    FOR             reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    IF              reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    ASSERT          reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    BLPAREN         reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    BOOLEAN         reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    CHAR            reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    BYTE            reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    SHORT           reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    INT             reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    LONG            reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    FLOAT           reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    DOUBLE          reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    PLUS            reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    DASH            reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    OP_INC          reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    OP_DEC          reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    EXCLAMATION     reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    TILDE           reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    VOID            reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    NEW             reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    SUPER           reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    THIS            reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    LPAREN          reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    CharacterLiteral reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    StringLiteral   reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    NULL            reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    NUMBER          reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    HEX_NUMBER      reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    LONG_NUMBER     reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    NON_INTEGER_1   reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    NON_INTEGER_2   reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    NON_INTEGER_3   reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    TRUE            reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    FALSE           reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    CASE            reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    DEFAULT         reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    NATIVE          reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    TRANSIENT       reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    VOLATILE        reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)
    LESS            reduce using rule 54 (enumBody -> BLPAREN empty expt_14 empty BRPAREN .)


state 628

    (55) enumBody -> BLPAREN empty empty expt_15 BRPAREN .

    SEMI            reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    PUBLIC          reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    PROTECTED       reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    PRIVATE         reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    ABSTRACT        reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    STATIC          reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    FINAL           reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    STRICTFP        reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    CLASS           reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    ENUM            reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    INTERFACE       reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    AT              reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    $end            reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    BRPAREN         reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    Identifier      reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    CONTINUE        reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    BREAK           reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    THROW           reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    RETURN          reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    SYNCHRONIZED    reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    SWITCH          reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    TRY             reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    DO              reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    WHILE           reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    FOR             reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    IF              reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    ASSERT          reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    BLPAREN         reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    BOOLEAN         reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    CHAR            reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    BYTE            reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    SHORT           reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    INT             reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    LONG            reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    FLOAT           reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    DOUBLE          reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    PLUS            reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    DASH            reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    OP_INC          reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    OP_DEC          reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    EXCLAMATION     reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    TILDE           reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    VOID            reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    NEW             reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    SUPER           reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    THIS            reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    LPAREN          reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    CharacterLiteral reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    StringLiteral   reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    NULL            reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    NUMBER          reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    HEX_NUMBER      reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    LONG_NUMBER     reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    NON_INTEGER_1   reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    NON_INTEGER_2   reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    NON_INTEGER_3   reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    TRUE            reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    FALSE           reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    CASE            reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    DEFAULT         reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    NATIVE          reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    TRANSIENT       reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    VOLATILE        reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)
    LESS            reduce using rule 55 (enumBody -> BLPAREN empty empty expt_15 BRPAREN .)


state 629

    (56) enumBody -> BLPAREN empty empty empty BRPAREN .

    SEMI            reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    PUBLIC          reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    PROTECTED       reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    PRIVATE         reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    ABSTRACT        reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    STATIC          reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    FINAL           reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    STRICTFP        reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    CLASS           reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    ENUM            reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    INTERFACE       reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    AT              reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    $end            reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    BRPAREN         reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    Identifier      reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    CONTINUE        reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    BREAK           reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    THROW           reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    RETURN          reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    SYNCHRONIZED    reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    SWITCH          reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    TRY             reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    DO              reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    WHILE           reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    FOR             reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    IF              reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    ASSERT          reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    BLPAREN         reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    BOOLEAN         reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    CHAR            reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    BYTE            reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    SHORT           reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    INT             reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    LONG            reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    FLOAT           reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    DOUBLE          reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    PLUS            reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    DASH            reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    OP_INC          reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    OP_DEC          reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    EXCLAMATION     reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    TILDE           reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    VOID            reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    NEW             reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    SUPER           reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    THIS            reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    LPAREN          reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    CharacterLiteral reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    StringLiteral   reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    NULL            reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    NUMBER          reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    HEX_NUMBER      reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    LONG_NUMBER     reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    NON_INTEGER_1   reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    NON_INTEGER_2   reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    NON_INTEGER_3   reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    TRUE            reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    FALSE           reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    CASE            reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    DEFAULT         reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    NATIVE          reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    TRANSIENT       reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    VOLATILE        reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)
    LESS            reduce using rule 56 (enumBody -> BLPAREN empty empty empty BRPAREN .)


state 630

    (231) annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .

    BRPAREN         reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    PUBLIC          reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    PROTECTED       reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    PRIVATE         reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    STATIC          reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    ABSTRACT        reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    FINAL           reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    NATIVE          reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    SYNCHRONIZED    reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    TRANSIENT       reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    VOLATILE        reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    STRICTFP        reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    AT              reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    ENUM            reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    INTERFACE       reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    CLASS           reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    BOOLEAN         reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    CHAR            reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    BYTE            reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    SHORT           reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    INT             reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    LONG            reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    FLOAT           reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    DOUBLE          reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    Identifier      reduce using rule 231 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)


state 631

    (125) variableDeclarator -> variableDeclaratorId expt_27 .

    COMMA           reduce using rule 125 (variableDeclarator -> variableDeclaratorId expt_27 .)
    SEMI            reduce using rule 125 (variableDeclarator -> variableDeclaratorId expt_27 .)


state 632

    (490) expt_27 -> EQUALS . variableInitializer
    (133) variableInitializer -> . arrayInitializer
    (134) variableInitializer -> . expression
    (135) arrayInitializer -> . BLPAREN expt_31 BRPAREN
    (136) arrayInitializer -> . BLPAREN empty BRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    BLPAREN         shift and go to state 653
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    shiftExpression                shift and go to state 148
    arrayInitializer               shift and go to state 701
    primary                        shift and go to state 125
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    conditionalAndExpression       shift and go to state 99
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    variableInitializer            shift and go to state 699
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 700

state 633

    (126) variableDeclarator -> variableDeclaratorId empty .
    (491) expt_27 -> empty .

  ! reduce/reduce conflict for COMMA resolved using rule 126 (variableDeclarator -> variableDeclaratorId empty .)
  ! reduce/reduce conflict for SEMI resolved using rule 126 (variableDeclarator -> variableDeclaratorId empty .)
    COMMA           reduce using rule 126 (variableDeclarator -> variableDeclaratorId empty .)
    SEMI            reduce using rule 126 (variableDeclarator -> variableDeclaratorId empty .)

  ! COMMA           [ reduce using rule 491 (expt_27 -> empty .) ]
  ! SEMI            [ reduce using rule 491 (expt_27 -> empty .) ]


state 634

    (131) variableDeclaratorId -> Identifier expt_24 .
    (485) expt_24 -> expt_24 . FLPAREN FRPAREN

    RPAREN          reduce using rule 131 (variableDeclaratorId -> Identifier expt_24 .)
    COMMA           reduce using rule 131 (variableDeclaratorId -> Identifier expt_24 .)
    EQUALS          reduce using rule 131 (variableDeclaratorId -> Identifier expt_24 .)
    SEMI            reduce using rule 131 (variableDeclaratorId -> Identifier expt_24 .)
    FLPAREN         shift and go to state 391


state 635

    (234) annotationMethodRest -> Identifier LPAREN . RPAREN expt_49
    (235) annotationMethodRest -> Identifier LPAREN . RPAREN empty

    RPAREN          shift and go to state 702


state 636

    (132) variableDeclaratorId -> Identifier empty .

    RPAREN          reduce using rule 132 (variableDeclaratorId -> Identifier empty .)
    COMMA           reduce using rule 132 (variableDeclaratorId -> Identifier empty .)
    EQUALS          reduce using rule 132 (variableDeclaratorId -> Identifier empty .)
    SEMI            reduce using rule 132 (variableDeclaratorId -> Identifier empty .)


state 637

    (123) variableDeclarators -> variableDeclarator expt_26 .
    (489) expt_26 -> expt_26 . COMMA variableDeclarator

    SEMI            reduce using rule 123 (variableDeclarators -> variableDeclarator expt_26 .)
    COMMA           shift and go to state 703


state 638

    (488) expt_26 -> COMMA . variableDeclarator
    (125) variableDeclarator -> . variableDeclaratorId expt_27
    (126) variableDeclarator -> . variableDeclaratorId empty
    (131) variableDeclaratorId -> . Identifier expt_24
    (132) variableDeclaratorId -> . Identifier empty

    Identifier      shift and go to state 704

    variableDeclaratorId           shift and go to state 565
    variableDeclarator             shift and go to state 705

state 639

    (124) variableDeclarators -> variableDeclarator empty .

    SEMI            reduce using rule 124 (variableDeclarators -> variableDeclarator empty .)


state 640

    (462) expt_12 -> AND type .

    AND             reduce using rule 462 (expt_12 -> AND type .)
    COMMA           reduce using rule 462 (expt_12 -> AND type .)
    MORE            reduce using rule 462 (expt_12 -> AND type .)


state 641

    (463) expt_12 -> expt_12 AND . type
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    type                           shift and go to state 706

state 642

    (101) interfaceMemberDecl -> VOID Identifier . voidInterfaceMethodDeclaratorRest
    (118) voidInterfaceMethodDeclaratorRest -> . formalParameters expt_25 SEMI
    (119) voidInterfaceMethodDeclaratorRest -> . formalParameters empty SEMI
    (175) formalParameters -> . LPAREN expt_37 RPAREN
    (176) formalParameters -> . LPAREN empty RPAREN

    LPAREN          shift and go to state 693

    formalParameters               shift and go to state 707
    voidInterfaceMethodDeclaratorRest shift and go to state 708

state 643

    (410) expr_3 -> VOID .

    Identifier      reduce using rule 410 (expr_3 -> VOID .)


state 644

    (409) expr_3 -> type .

    Identifier      reduce using rule 409 (expr_3 -> type .)


state 645

    (117) interfaceGenericMethodDecl -> typeParameters expr_3 . Identifier interfaceMethodDeclaratorRest

    Identifier      shift and go to state 709


state 646

    (104) interfaceMethodOrFieldDecl -> type Identifier . interfaceMethodOrFieldRest
    (105) interfaceMethodOrFieldRest -> . constantDeclaratorsRest SEMI
    (106) interfaceMethodOrFieldRest -> . interfaceMethodDeclaratorRest
    (127) constantDeclaratorsRest -> . constantDeclaratorRest expt_28
    (128) constantDeclaratorsRest -> . constantDeclaratorRest empty
    (113) interfaceMethodDeclaratorRest -> . formalParameters expt_24 expt_25 SEMI
    (114) interfaceMethodDeclaratorRest -> . formalParameters expt_24 empty SEMI
    (115) interfaceMethodDeclaratorRest -> . formalParameters empty expt_25 SEMI
    (116) interfaceMethodDeclaratorRest -> . formalParameters empty empty SEMI
    (129) constantDeclaratorRest -> . expt_24 EQUALS variableInitializer
    (130) constantDeclaratorRest -> . empty EQUALS variableInitializer
    (175) formalParameters -> . LPAREN expt_37 RPAREN
    (176) formalParameters -> . LPAREN empty RPAREN
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN
    (584) empty -> .

    LPAREN          shift and go to state 693
    FLPAREN         shift and go to state 245
    EQUALS          reduce using rule 584 (empty -> .)

    expt_24                        shift and go to state 710
    interfaceMethodDeclaratorRest  shift and go to state 711
    interfaceMethodOrFieldRest     shift and go to state 712
    constantDeclaratorsRest        shift and go to state 713
    constantDeclaratorRest         shift and go to state 714
    formalParameters               shift and go to state 715
    empty                          shift and go to state 716

state 647

    (551) expt_60 -> expt_60 COMMA expression .

    COMMA           reduce using rule 551 (expt_60 -> expt_60 COMMA expression .)
    RPAREN          reduce using rule 551 (expt_60 -> expt_60 COMMA expression .)
    SEMI            reduce using rule 551 (expt_60 -> expt_60 COMMA expression .)


state 648

    (386) innerCreator -> empty Identifier classCreatorRest .

    OP_INC          reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    OP_DEC          reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    FLPAREN         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    DOT             reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    MULT            reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    SLASH           reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    PERCENT         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    PLUS            reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    DASH            reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    OP_SHR          reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    OP_SHL          reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    OP_SHRR         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    OP_LE           reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    OP_GE           reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    LESS            reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    MORE            reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    INSTANCEOF      reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    OP_EQ           reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    OP_NE           reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    AND             reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    CARET           reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    VERTICAL        reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    OP_LAND         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    OP_LOR          reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    QUES            reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    RPAREN          reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    COMMA           reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    BRPAREN         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    EQUALS          reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    ASS_ADD         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    ASS_SUB         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    ASS_MUL         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    ASS_DIV         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    ASS_AND         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    ASS_OR          reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    ASS_XOR         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    ASS_MOD         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    ASS_SHL         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    ASS_SHRR        reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    ASS_SHR         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    FRPAREN         reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    COLON           reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)
    SEMI            reduce using rule 386 (innerCreator -> empty Identifier classCreatorRest .)


state 649

    (385) innerCreator -> expt_41 Identifier classCreatorRest .

    OP_INC          reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    OP_DEC          reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    FLPAREN         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    DOT             reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    MULT            reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    SLASH           reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    PERCENT         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    PLUS            reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    DASH            reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    OP_SHR          reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    OP_SHL          reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    OP_SHRR         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    OP_LE           reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    OP_GE           reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    LESS            reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    MORE            reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    INSTANCEOF      reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    OP_EQ           reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    OP_NE           reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    AND             reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    CARET           reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    VERTICAL        reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    OP_LAND         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    OP_LOR          reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    QUES            reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    RPAREN          reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    COMMA           reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    BRPAREN         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    EQUALS          reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    ASS_ADD         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    ASS_SUB         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    ASS_MUL         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    ASS_DIV         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    ASS_AND         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    ASS_OR          reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    ASS_XOR         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    ASS_MOD         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    ASS_SHL         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    ASS_SHRR        reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    ASS_SHR         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    FRPAREN         reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    COLON           reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)
    SEMI            reduce using rule 385 (innerCreator -> expt_41 Identifier classCreatorRest .)


state 650

    (438) expr_19 -> expression FRPAREN expt_76 . expt_24
    (576) expt_76 -> expt_76 . FLPAREN expression FRPAREN
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN

    FLPAREN         shift and go to state 718

    expt_24                        shift and go to state 717

state 651

    (575) expt_76 -> FLPAREN . expression FRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 719

state 652

    (437) expr_19 -> FRPAREN expt_24 arrayInitializer .

    OP_INC          reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    OP_DEC          reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    FLPAREN         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    DOT             reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    MULT            reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    SLASH           reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    PERCENT         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    PLUS            reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    DASH            reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    OP_SHR          reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    OP_SHL          reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    OP_SHRR         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    OP_LE           reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    OP_GE           reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    LESS            reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    MORE            reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    INSTANCEOF      reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    OP_EQ           reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    OP_NE           reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    AND             reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    CARET           reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    VERTICAL        reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    OP_LAND         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    OP_LOR          reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    QUES            reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    RPAREN          reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    COMMA           reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    BRPAREN         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    EQUALS          reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    ASS_ADD         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    ASS_SUB         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    ASS_MUL         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    ASS_DIV         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    ASS_AND         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    ASS_OR          reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    ASS_XOR         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    ASS_MOD         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    ASS_SHL         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    ASS_SHRR        reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    ASS_SHR         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    FRPAREN         reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    COLON           reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)
    SEMI            reduce using rule 437 (expr_19 -> FRPAREN expt_24 arrayInitializer .)


state 653

    (135) arrayInitializer -> BLPAREN . expt_31 BRPAREN
    (136) arrayInitializer -> BLPAREN . empty BRPAREN
    (498) expt_31 -> . variableInitializer expt_29 expt_30
    (499) expt_31 -> . empty
    (584) empty -> .
    (133) variableInitializer -> . arrayInitializer
    (134) variableInitializer -> . expression
    (135) arrayInitializer -> . BLPAREN expt_31 BRPAREN
    (136) arrayInitializer -> . BLPAREN empty BRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    BRPAREN         reduce using rule 584 (empty -> .)
    BLPAREN         shift and go to state 653
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    expt_31                        shift and go to state 721
    shiftExpression                shift and go to state 148
    arrayInitializer               shift and go to state 701
    primary                        shift and go to state 125
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    exclusiveOrExpression          shift and go to state 105
    integerLiteral                 shift and go to state 111
    empty                          shift and go to state 722
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    conditionalAndExpression       shift and go to state 99
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    variableInitializer            shift and go to state 720
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 700

state 654

    (505) expt_34 -> expt_34 COMMA typeArgument .

    MORE            reduce using rule 505 (expt_34 -> expt_34 COMMA typeArgument .)
    COMMA           reduce using rule 505 (expt_34 -> expt_34 COMMA typeArgument .)


state 655

    (503) expt_33 -> expt_33 DOT Identifier expt_32 .

    DOT             reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    FLPAREN         reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    COMMA           reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    BLPAREN         reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    LPAREN          reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    RPAREN          reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    IMPLEMENTS      reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    OP_EQ           reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    OP_NE           reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    AND             reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    CARET           reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    VERTICAL        reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    OP_LAND         reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    OP_LOR          reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    QUES            reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    BRPAREN         reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    EQUALS          reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    ASS_ADD         reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    ASS_SUB         reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    ASS_MUL         reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    ASS_DIV         reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    ASS_AND         reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    ASS_OR          reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    ASS_XOR         reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    ASS_MOD         reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    ASS_SHL         reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    ASS_SHRR        reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    ASS_SHR         reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    FRPAREN         reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    COLON           reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    SEMI            reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    MORE            reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    Identifier      reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)
    OP_ARRAY        reduce using rule 503 (expt_33 -> expt_33 DOT Identifier expt_32 .)


state 656

    (516) expt_40 -> blockStatement .

    BRPAREN         reduce using rule 516 (expt_40 -> blockStatement .)
    SEMI            reduce using rule 516 (expt_40 -> blockStatement .)
    Identifier      reduce using rule 516 (expt_40 -> blockStatement .)
    CONTINUE        reduce using rule 516 (expt_40 -> blockStatement .)
    BREAK           reduce using rule 516 (expt_40 -> blockStatement .)
    THROW           reduce using rule 516 (expt_40 -> blockStatement .)
    RETURN          reduce using rule 516 (expt_40 -> blockStatement .)
    SYNCHRONIZED    reduce using rule 516 (expt_40 -> blockStatement .)
    SWITCH          reduce using rule 516 (expt_40 -> blockStatement .)
    TRY             reduce using rule 516 (expt_40 -> blockStatement .)
    DO              reduce using rule 516 (expt_40 -> blockStatement .)
    WHILE           reduce using rule 516 (expt_40 -> blockStatement .)
    FOR             reduce using rule 516 (expt_40 -> blockStatement .)
    IF              reduce using rule 516 (expt_40 -> blockStatement .)
    ASSERT          reduce using rule 516 (expt_40 -> blockStatement .)
    BLPAREN         reduce using rule 516 (expt_40 -> blockStatement .)
    BOOLEAN         reduce using rule 516 (expt_40 -> blockStatement .)
    CHAR            reduce using rule 516 (expt_40 -> blockStatement .)
    BYTE            reduce using rule 516 (expt_40 -> blockStatement .)
    SHORT           reduce using rule 516 (expt_40 -> blockStatement .)
    INT             reduce using rule 516 (expt_40 -> blockStatement .)
    LONG            reduce using rule 516 (expt_40 -> blockStatement .)
    FLOAT           reduce using rule 516 (expt_40 -> blockStatement .)
    DOUBLE          reduce using rule 516 (expt_40 -> blockStatement .)
    PUBLIC          reduce using rule 516 (expt_40 -> blockStatement .)
    PROTECTED       reduce using rule 516 (expt_40 -> blockStatement .)
    PRIVATE         reduce using rule 516 (expt_40 -> blockStatement .)
    ABSTRACT        reduce using rule 516 (expt_40 -> blockStatement .)
    STATIC          reduce using rule 516 (expt_40 -> blockStatement .)
    FINAL           reduce using rule 516 (expt_40 -> blockStatement .)
    STRICTFP        reduce using rule 516 (expt_40 -> blockStatement .)
    CLASS           reduce using rule 516 (expt_40 -> blockStatement .)
    ENUM            reduce using rule 516 (expt_40 -> blockStatement .)
    INTERFACE       reduce using rule 516 (expt_40 -> blockStatement .)
    AT              reduce using rule 516 (expt_40 -> blockStatement .)
    PLUS            reduce using rule 516 (expt_40 -> blockStatement .)
    DASH            reduce using rule 516 (expt_40 -> blockStatement .)
    OP_INC          reduce using rule 516 (expt_40 -> blockStatement .)
    OP_DEC          reduce using rule 516 (expt_40 -> blockStatement .)
    EXCLAMATION     reduce using rule 516 (expt_40 -> blockStatement .)
    TILDE           reduce using rule 516 (expt_40 -> blockStatement .)
    VOID            reduce using rule 516 (expt_40 -> blockStatement .)
    NEW             reduce using rule 516 (expt_40 -> blockStatement .)
    SUPER           reduce using rule 516 (expt_40 -> blockStatement .)
    THIS            reduce using rule 516 (expt_40 -> blockStatement .)
    LPAREN          reduce using rule 516 (expt_40 -> blockStatement .)
    CharacterLiteral reduce using rule 516 (expt_40 -> blockStatement .)
    StringLiteral   reduce using rule 516 (expt_40 -> blockStatement .)
    NULL            reduce using rule 516 (expt_40 -> blockStatement .)
    NUMBER          reduce using rule 516 (expt_40 -> blockStatement .)
    HEX_NUMBER      reduce using rule 516 (expt_40 -> blockStatement .)
    LONG_NUMBER     reduce using rule 516 (expt_40 -> blockStatement .)
    LONG_HEX_NUMBER reduce using rule 516 (expt_40 -> blockStatement .)
    NON_INTEGER_1   reduce using rule 516 (expt_40 -> blockStatement .)
    NON_INTEGER_2   reduce using rule 516 (expt_40 -> blockStatement .)
    NON_INTEGER_3   reduce using rule 516 (expt_40 -> blockStatement .)
    TRUE            reduce using rule 516 (expt_40 -> blockStatement .)
    FALSE           reduce using rule 516 (expt_40 -> blockStatement .)
    CASE            reduce using rule 516 (expt_40 -> blockStatement .)
    DEFAULT         reduce using rule 516 (expt_40 -> blockStatement .)


state 657

    (241) blockStatement -> classOrInterfaceDeclaration .

    BRPAREN         reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    SEMI            reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    Identifier      reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    CONTINUE        reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    BREAK           reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    THROW           reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    RETURN          reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    SWITCH          reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    TRY             reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    DO              reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    WHILE           reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    FOR             reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    IF              reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    ASSERT          reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    BLPAREN         reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    BOOLEAN         reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    CHAR            reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    BYTE            reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    SHORT           reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    INT             reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    LONG            reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    FLOAT           reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    DOUBLE          reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    PUBLIC          reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    PROTECTED       reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    PRIVATE         reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    ABSTRACT        reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    STATIC          reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    FINAL           reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    STRICTFP        reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    CLASS           reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    ENUM            reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    INTERFACE       reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    AT              reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    PLUS            reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    DASH            reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    OP_INC          reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    OP_DEC          reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    EXCLAMATION     reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    TILDE           reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    VOID            reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    NEW             reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    SUPER           reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    THIS            reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    LPAREN          reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    CharacterLiteral reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    StringLiteral   reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    NULL            reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    NUMBER          reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    HEX_NUMBER      reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    LONG_NUMBER     reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    LONG_HEX_NUMBER reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    NON_INTEGER_1   reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    NON_INTEGER_2   reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    NON_INTEGER_3   reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    TRUE            reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    FALSE           reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    CASE            reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)
    DEFAULT         reduce using rule 241 (blockStatement -> classOrInterfaceDeclaration .)


state 658

    (534) expt_50 -> variableModifier .

    FINAL           reduce using rule 534 (expt_50 -> variableModifier .)
    AT              reduce using rule 534 (expt_50 -> variableModifier .)
    BOOLEAN         reduce using rule 534 (expt_50 -> variableModifier .)
    CHAR            reduce using rule 534 (expt_50 -> variableModifier .)
    BYTE            reduce using rule 534 (expt_50 -> variableModifier .)
    SHORT           reduce using rule 534 (expt_50 -> variableModifier .)
    INT             reduce using rule 534 (expt_50 -> variableModifier .)
    LONG            reduce using rule 534 (expt_50 -> variableModifier .)
    FLOAT           reduce using rule 534 (expt_50 -> variableModifier .)
    DOUBLE          reduce using rule 534 (expt_50 -> variableModifier .)
    Identifier      reduce using rule 534 (expt_50 -> variableModifier .)


state 659

    (240) blockStatement -> localVariableDeclarationStatement .

    BRPAREN         reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    SEMI            reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    Identifier      reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    CONTINUE        reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    BREAK           reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    THROW           reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    RETURN          reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    SYNCHRONIZED    reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    SWITCH          reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    TRY             reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    DO              reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    WHILE           reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    FOR             reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    IF              reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    ASSERT          reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    BLPAREN         reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    BOOLEAN         reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    CHAR            reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    BYTE            reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    SHORT           reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    INT             reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    LONG            reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    FLOAT           reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    DOUBLE          reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    PUBLIC          reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    PROTECTED       reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    PRIVATE         reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    ABSTRACT        reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    STATIC          reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    FINAL           reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    STRICTFP        reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    CLASS           reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    ENUM            reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    INTERFACE       reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    AT              reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    PLUS            reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    DASH            reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    OP_INC          reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    OP_DEC          reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    EXCLAMATION     reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    TILDE           reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    VOID            reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    NEW             reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    SUPER           reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    THIS            reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    LPAREN          reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    CharacterLiteral reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    StringLiteral   reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    NULL            reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    NUMBER          reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    HEX_NUMBER      reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    LONG_NUMBER     reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    LONG_HEX_NUMBER reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    NON_INTEGER_1   reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    NON_INTEGER_2   reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    NON_INTEGER_3   reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    TRUE            reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    FALSE           reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    CASE            reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)
    DEFAULT         reduce using rule 240 (blockStatement -> localVariableDeclarationStatement .)


state 660

    (256) statement -> RETURN . expt_53 SEMI
    (257) statement -> RETURN . SEMI
    (538) expt_53 -> . expression
    (539) expt_53 -> . empty
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (584) empty -> .
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 723
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

  ! SEMI            [ reduce using rule 584 (empty -> .) ]

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    empty                          shift and go to state 724
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expt_53                        shift and go to state 725
    expression                     shift and go to state 726

state 661

    (258) statement -> SYNCHRONIZED . parExpression block
    (293) parExpression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 728

    parExpression                  shift and go to state 727

state 662

    (27) classOrInterfaceModifier -> FINAL .
    (166) variableModifier -> FINAL .

  ! reduce/reduce conflict for FINAL resolved using rule 27 (classOrInterfaceModifier -> FINAL .)
  ! reduce/reduce conflict for AT resolved using rule 27 (classOrInterfaceModifier -> FINAL .)
    PUBLIC          reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    PROTECTED       reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    PRIVATE         reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    ABSTRACT        reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    STATIC          reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    FINAL           reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    STRICTFP        reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    AT              reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    CLASS           reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    ENUM            reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    INTERFACE       reduce using rule 27 (classOrInterfaceModifier -> FINAL .)
    BOOLEAN         reduce using rule 166 (variableModifier -> FINAL .)
    CHAR            reduce using rule 166 (variableModifier -> FINAL .)
    BYTE            reduce using rule 166 (variableModifier -> FINAL .)
    SHORT           reduce using rule 166 (variableModifier -> FINAL .)
    INT             reduce using rule 166 (variableModifier -> FINAL .)
    LONG            reduce using rule 166 (variableModifier -> FINAL .)
    FLOAT           reduce using rule 166 (variableModifier -> FINAL .)
    DOUBLE          reduce using rule 166 (variableModifier -> FINAL .)
    Identifier      reduce using rule 166 (variableModifier -> FINAL .)

  ! FINAL           [ reduce using rule 166 (variableModifier -> FINAL .) ]
  ! AT              [ reduce using rule 166 (variableModifier -> FINAL .) ]


state 663

    (238) block -> BLPAREN expt_40 . BRPAREN
    (517) expt_40 -> expt_40 . blockStatement
    (240) blockStatement -> . localVariableDeclarationStatement
    (241) blockStatement -> . classOrInterfaceDeclaration
    (242) blockStatement -> . statement
    (243) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (244) localVariableDeclarationStatement -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (248) statement -> . Identifier COLON statement
    (249) statement -> . statementExpression SEMI
    (250) statement -> . SEMI
    (251) statement -> . CONTINUE Identifier SEMI
    (252) statement -> . CONTINUE SEMI
    (253) statement -> . BREAK Identifier SEMI
    (254) statement -> . BREAK SEMI
    (255) statement -> . THROW expression SEMI
    (256) statement -> . RETURN expt_53 SEMI
    (257) statement -> . RETURN SEMI
    (258) statement -> . SYNCHRONIZED parExpression block
    (259) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (260) statement -> . TRY block expr_9
    (261) statement -> . DO statement WHILE parExpression SEMI
    (262) statement -> . WHILE parExpression statement
    (263) statement -> . FOR LPAREN forControl RPAREN statement
    (264) statement -> . IF parExpression statement ELSE statement
    (265) statement -> . IF parExpression statement
    (266) statement -> . ASSERT expression expt_51 SEMI
    (267) statement -> . ASSERT expression SEMI
    (268) statement -> . block
    (245) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (246) localVariableDeclaration -> . type variableDeclarators
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (296) statementExpression -> . expression
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN
    (247) variableModifiers -> . expt_50
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (584) empty -> .
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (534) expt_50 -> . variableModifier
    (535) expt_50 -> . expt_50 variableModifier
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (166) variableModifier -> . FINAL
    (167) variableModifier -> . annotation
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    BRPAREN         shift and go to state 730
    SEMI            shift and go to state 682
    Identifier      shift and go to state 666
    CONTINUE        shift and go to state 681
    BREAK           shift and go to state 678
    THROW           shift and go to state 686
    RETURN          shift and go to state 660
    SYNCHRONIZED    shift and go to state 661
    SWITCH          shift and go to state 672
    TRY             shift and go to state 665
    DO              shift and go to state 679
    WHILE           shift and go to state 671
    FOR             shift and go to state 664
    IF              shift and go to state 684
    ASSERT          shift and go to state 680
    BLPAREN         shift and go to state 612
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 662
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    conditionalAndExpression       shift and go to state 99
    blockStatement                 shift and go to state 729
    classOrInterfaceType           shift and go to state 164
    booleanLiteral                 shift and go to state 103
    classOrInterfaceDeclaration    shift and go to state 657
    relationalExpression           shift and go to state 107
    variableModifier               shift and go to state 658
    localVariableDeclarationStatement shift and go to state 659
    instanceOfExpression           shift and go to state 108
    inclusiveOrExpression          shift and go to state 113
    additiveExpression             shift and go to state 116
    classDeclaration               shift and go to state 31
    unaryExpressionNotPlusMinus    shift and go to state 120
    annotationTypeDeclaration      shift and go to state 36
    interfaceDeclaration           shift and go to state 24
    andExpression                  shift and go to state 121
    expt_50                        shift and go to state 667
    expression                     shift and go to state 668
    block                          shift and go to state 669
    equalityExpression             shift and go to state 123
    localVariableDeclaration       shift and go to state 670
    exclusiveOrExpression          shift and go to state 105
    primary                        shift and go to state 125
    literal                        shift and go to state 131
    statement                      shift and go to state 673
    type                           shift and go to state 674
    empty                          shift and go to state 25
    conditionalExpression          shift and go to state 264
    enumDeclaration                shift and go to state 27
    FloatingPointLiteral           shift and go to state 134
    primitiveType                  shift and go to state 677
    variableModifiers              shift and go to state 676
    multiplicativeExpression       shift and go to state 145
    normalInterfaceDeclaration     shift and go to state 18
    shiftExpression                shift and go to state 148
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    classOrInterfaceModifiers      shift and go to state 37
    integerLiteral                 shift and go to state 111
    expr_1                         shift and go to state 26
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    conditionalOrExpression        shift and go to state 124
    annotation                     shift and go to state 683
    castExpression                 shift and go to state 154
    classOrInterfaceModifier       shift and go to state 34
    statementExpression            shift and go to state 685

state 664

    (263) statement -> FOR . LPAREN forControl RPAREN statement

    LPAREN          shift and go to state 731


state 665

    (260) statement -> TRY . block expr_9
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN

    BLPAREN         shift and go to state 612

    block                          shift and go to state 732

state 666

    (248) statement -> Identifier . COLON statement
    (154) classOrInterfaceType -> Identifier . expt_32 expt_33
    (155) classOrInterfaceType -> Identifier . expt_32 empty
    (156) classOrInterfaceType -> Identifier . empty expt_33
    (157) classOrInterfaceType -> Identifier . empty empty
    (360) primary -> Identifier . expt_42 identifierSuffix
    (361) primary -> Identifier . expt_42
    (362) primary -> Identifier . identifierSuffix
    (363) primary -> Identifier .
    (500) expt_32 -> . typeArguments
    (501) expt_32 -> . empty
    (584) empty -> .
    (520) expt_42 -> . DOT Identifier
    (521) expt_42 -> . expt_42 DOT Identifier
    (372) identifierSuffix -> . suffixStatements DOT CLASS
    (373) identifierSuffix -> . suffixExprStatements
    (374) identifierSuffix -> . arguments
    (375) identifierSuffix -> . DOT CLASS
    (376) identifierSuffix -> . DOT explicitGenericInvocation
    (377) identifierSuffix -> . DOT THIS
    (378) identifierSuffix -> . DOT SUPER arguments
    (379) identifierSuffix -> . DOT NEW innerCreator
    (168) typeArguments -> . LESS typeArgument expt_34 MORE
    (169) typeArguments -> . LESS typeArgument MORE
    (433) suffixStatements -> . FLPAREN FRPAREN
    (434) suffixStatements -> . suffixStatements FLPAREN FRPAREN
    (435) suffixExprStatements -> . FLPAREN expression FRPAREN
    (436) suffixExprStatements -> . suffixExprStatements FLPAREN expression FRPAREN
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

  ! reduce/reduce conflict for DOT resolved using rule 363 (primary -> Identifier .)
  ! reduce/reduce conflict for FLPAREN resolved using rule 363 (primary -> Identifier .)
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    COLON           shift and go to state 733
    OP_INC          reduce using rule 363 (primary -> Identifier .)
    OP_DEC          reduce using rule 363 (primary -> Identifier .)
    MULT            reduce using rule 363 (primary -> Identifier .)
    SLASH           reduce using rule 363 (primary -> Identifier .)
    PERCENT         reduce using rule 363 (primary -> Identifier .)
    PLUS            reduce using rule 363 (primary -> Identifier .)
    DASH            reduce using rule 363 (primary -> Identifier .)
    OP_SHR          reduce using rule 363 (primary -> Identifier .)
    OP_SHL          reduce using rule 363 (primary -> Identifier .)
    OP_SHRR         reduce using rule 363 (primary -> Identifier .)
    OP_LE           reduce using rule 363 (primary -> Identifier .)
    OP_GE           reduce using rule 363 (primary -> Identifier .)
    MORE            reduce using rule 363 (primary -> Identifier .)
    INSTANCEOF      reduce using rule 363 (primary -> Identifier .)
    OP_EQ           reduce using rule 363 (primary -> Identifier .)
    OP_NE           reduce using rule 363 (primary -> Identifier .)
    AND             reduce using rule 363 (primary -> Identifier .)
    CARET           reduce using rule 363 (primary -> Identifier .)
    VERTICAL        reduce using rule 363 (primary -> Identifier .)
    OP_LAND         reduce using rule 363 (primary -> Identifier .)
    OP_LOR          reduce using rule 363 (primary -> Identifier .)
    QUES            reduce using rule 363 (primary -> Identifier .)
    EQUALS          reduce using rule 363 (primary -> Identifier .)
    ASS_ADD         reduce using rule 363 (primary -> Identifier .)
    ASS_SUB         reduce using rule 363 (primary -> Identifier .)
    ASS_MUL         reduce using rule 363 (primary -> Identifier .)
    ASS_DIV         reduce using rule 363 (primary -> Identifier .)
    ASS_AND         reduce using rule 363 (primary -> Identifier .)
    ASS_OR          reduce using rule 363 (primary -> Identifier .)
    ASS_XOR         reduce using rule 363 (primary -> Identifier .)
    ASS_MOD         reduce using rule 363 (primary -> Identifier .)
    ASS_SHL         reduce using rule 363 (primary -> Identifier .)
    ASS_SHRR        reduce using rule 363 (primary -> Identifier .)
    ASS_SHR         reduce using rule 363 (primary -> Identifier .)
    SEMI            reduce using rule 363 (primary -> Identifier .)
    Identifier      reduce using rule 584 (empty -> .)
    DOT             shift and go to state 205
    LESS            shift and go to state 279
    FLPAREN         shift and go to state 201
    LPAREN          shift and go to state 204

  ! FLPAREN         [ reduce using rule 363 (primary -> Identifier .) ]
  ! DOT             [ reduce using rule 363 (primary -> Identifier .) ]
  ! LESS            [ reduce using rule 363 (primary -> Identifier .) ]
  ! DOT             [ reduce using rule 584 (empty -> .) ]
  ! FLPAREN         [ reduce using rule 584 (empty -> .) ]

    identifierSuffix               shift and go to state 217
    typeArguments                  shift and go to state 280
    expt_32                        shift and go to state 281
    suffixExprStatements           shift and go to state 202
    arguments                      shift and go to state 203
    suffixStatements               shift and go to state 200
    empty                          shift and go to state 282
    expt_42                        shift and go to state 219

state 667

    (247) variableModifiers -> expt_50 .
    (535) expt_50 -> expt_50 . variableModifier
    (166) variableModifier -> . FINAL
    (167) variableModifier -> . annotation
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

    BOOLEAN         reduce using rule 247 (variableModifiers -> expt_50 .)
    CHAR            reduce using rule 247 (variableModifiers -> expt_50 .)
    BYTE            reduce using rule 247 (variableModifiers -> expt_50 .)
    SHORT           reduce using rule 247 (variableModifiers -> expt_50 .)
    INT             reduce using rule 247 (variableModifiers -> expt_50 .)
    LONG            reduce using rule 247 (variableModifiers -> expt_50 .)
    FLOAT           reduce using rule 247 (variableModifiers -> expt_50 .)
    DOUBLE          reduce using rule 247 (variableModifiers -> expt_50 .)
    Identifier      reduce using rule 247 (variableModifiers -> expt_50 .)
    FINAL           shift and go to state 736
    AT              shift and go to state 8

    variableModifier               shift and go to state 735
    annotation                     shift and go to state 734

state 668

    (296) statementExpression -> expression .

    SEMI            reduce using rule 296 (statementExpression -> expression .)


state 669

    (268) statement -> block .

    BRPAREN         reduce using rule 268 (statement -> block .)
    SEMI            reduce using rule 268 (statement -> block .)
    Identifier      reduce using rule 268 (statement -> block .)
    CONTINUE        reduce using rule 268 (statement -> block .)
    BREAK           reduce using rule 268 (statement -> block .)
    THROW           reduce using rule 268 (statement -> block .)
    RETURN          reduce using rule 268 (statement -> block .)
    SYNCHRONIZED    reduce using rule 268 (statement -> block .)
    SWITCH          reduce using rule 268 (statement -> block .)
    TRY             reduce using rule 268 (statement -> block .)
    DO              reduce using rule 268 (statement -> block .)
    WHILE           reduce using rule 268 (statement -> block .)
    FOR             reduce using rule 268 (statement -> block .)
    IF              reduce using rule 268 (statement -> block .)
    ASSERT          reduce using rule 268 (statement -> block .)
    BLPAREN         reduce using rule 268 (statement -> block .)
    BOOLEAN         reduce using rule 268 (statement -> block .)
    CHAR            reduce using rule 268 (statement -> block .)
    BYTE            reduce using rule 268 (statement -> block .)
    SHORT           reduce using rule 268 (statement -> block .)
    INT             reduce using rule 268 (statement -> block .)
    LONG            reduce using rule 268 (statement -> block .)
    FLOAT           reduce using rule 268 (statement -> block .)
    DOUBLE          reduce using rule 268 (statement -> block .)
    PUBLIC          reduce using rule 268 (statement -> block .)
    PROTECTED       reduce using rule 268 (statement -> block .)
    PRIVATE         reduce using rule 268 (statement -> block .)
    ABSTRACT        reduce using rule 268 (statement -> block .)
    STATIC          reduce using rule 268 (statement -> block .)
    FINAL           reduce using rule 268 (statement -> block .)
    STRICTFP        reduce using rule 268 (statement -> block .)
    CLASS           reduce using rule 268 (statement -> block .)
    ENUM            reduce using rule 268 (statement -> block .)
    INTERFACE       reduce using rule 268 (statement -> block .)
    AT              reduce using rule 268 (statement -> block .)
    PLUS            reduce using rule 268 (statement -> block .)
    DASH            reduce using rule 268 (statement -> block .)
    OP_INC          reduce using rule 268 (statement -> block .)
    OP_DEC          reduce using rule 268 (statement -> block .)
    EXCLAMATION     reduce using rule 268 (statement -> block .)
    TILDE           reduce using rule 268 (statement -> block .)
    VOID            reduce using rule 268 (statement -> block .)
    NEW             reduce using rule 268 (statement -> block .)
    SUPER           reduce using rule 268 (statement -> block .)
    THIS            reduce using rule 268 (statement -> block .)
    LPAREN          reduce using rule 268 (statement -> block .)
    CharacterLiteral reduce using rule 268 (statement -> block .)
    StringLiteral   reduce using rule 268 (statement -> block .)
    NULL            reduce using rule 268 (statement -> block .)
    NUMBER          reduce using rule 268 (statement -> block .)
    HEX_NUMBER      reduce using rule 268 (statement -> block .)
    LONG_NUMBER     reduce using rule 268 (statement -> block .)
    LONG_HEX_NUMBER reduce using rule 268 (statement -> block .)
    NON_INTEGER_1   reduce using rule 268 (statement -> block .)
    NON_INTEGER_2   reduce using rule 268 (statement -> block .)
    NON_INTEGER_3   reduce using rule 268 (statement -> block .)
    TRUE            reduce using rule 268 (statement -> block .)
    FALSE           reduce using rule 268 (statement -> block .)
    CASE            reduce using rule 268 (statement -> block .)
    DEFAULT         reduce using rule 268 (statement -> block .)
    ELSE            reduce using rule 268 (statement -> block .)


state 670

    (243) localVariableDeclarationStatement -> localVariableDeclaration . SEMI

    SEMI            shift and go to state 737


state 671

    (262) statement -> WHILE . parExpression statement
    (293) parExpression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 728

    parExpression                  shift and go to state 738

state 672

    (259) statement -> SWITCH . parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (293) parExpression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 728

    parExpression                  shift and go to state 739

state 673

    (242) blockStatement -> statement .

    BRPAREN         reduce using rule 242 (blockStatement -> statement .)
    SEMI            reduce using rule 242 (blockStatement -> statement .)
    Identifier      reduce using rule 242 (blockStatement -> statement .)
    CONTINUE        reduce using rule 242 (blockStatement -> statement .)
    BREAK           reduce using rule 242 (blockStatement -> statement .)
    THROW           reduce using rule 242 (blockStatement -> statement .)
    RETURN          reduce using rule 242 (blockStatement -> statement .)
    SYNCHRONIZED    reduce using rule 242 (blockStatement -> statement .)
    SWITCH          reduce using rule 242 (blockStatement -> statement .)
    TRY             reduce using rule 242 (blockStatement -> statement .)
    DO              reduce using rule 242 (blockStatement -> statement .)
    WHILE           reduce using rule 242 (blockStatement -> statement .)
    FOR             reduce using rule 242 (blockStatement -> statement .)
    IF              reduce using rule 242 (blockStatement -> statement .)
    ASSERT          reduce using rule 242 (blockStatement -> statement .)
    BLPAREN         reduce using rule 242 (blockStatement -> statement .)
    BOOLEAN         reduce using rule 242 (blockStatement -> statement .)
    CHAR            reduce using rule 242 (blockStatement -> statement .)
    BYTE            reduce using rule 242 (blockStatement -> statement .)
    SHORT           reduce using rule 242 (blockStatement -> statement .)
    INT             reduce using rule 242 (blockStatement -> statement .)
    LONG            reduce using rule 242 (blockStatement -> statement .)
    FLOAT           reduce using rule 242 (blockStatement -> statement .)
    DOUBLE          reduce using rule 242 (blockStatement -> statement .)
    PUBLIC          reduce using rule 242 (blockStatement -> statement .)
    PROTECTED       reduce using rule 242 (blockStatement -> statement .)
    PRIVATE         reduce using rule 242 (blockStatement -> statement .)
    ABSTRACT        reduce using rule 242 (blockStatement -> statement .)
    STATIC          reduce using rule 242 (blockStatement -> statement .)
    FINAL           reduce using rule 242 (blockStatement -> statement .)
    STRICTFP        reduce using rule 242 (blockStatement -> statement .)
    CLASS           reduce using rule 242 (blockStatement -> statement .)
    ENUM            reduce using rule 242 (blockStatement -> statement .)
    INTERFACE       reduce using rule 242 (blockStatement -> statement .)
    AT              reduce using rule 242 (blockStatement -> statement .)
    PLUS            reduce using rule 242 (blockStatement -> statement .)
    DASH            reduce using rule 242 (blockStatement -> statement .)
    OP_INC          reduce using rule 242 (blockStatement -> statement .)
    OP_DEC          reduce using rule 242 (blockStatement -> statement .)
    EXCLAMATION     reduce using rule 242 (blockStatement -> statement .)
    TILDE           reduce using rule 242 (blockStatement -> statement .)
    VOID            reduce using rule 242 (blockStatement -> statement .)
    NEW             reduce using rule 242 (blockStatement -> statement .)
    SUPER           reduce using rule 242 (blockStatement -> statement .)
    THIS            reduce using rule 242 (blockStatement -> statement .)
    LPAREN          reduce using rule 242 (blockStatement -> statement .)
    CharacterLiteral reduce using rule 242 (blockStatement -> statement .)
    StringLiteral   reduce using rule 242 (blockStatement -> statement .)
    NULL            reduce using rule 242 (blockStatement -> statement .)
    NUMBER          reduce using rule 242 (blockStatement -> statement .)
    HEX_NUMBER      reduce using rule 242 (blockStatement -> statement .)
    LONG_NUMBER     reduce using rule 242 (blockStatement -> statement .)
    LONG_HEX_NUMBER reduce using rule 242 (blockStatement -> statement .)
    NON_INTEGER_1   reduce using rule 242 (blockStatement -> statement .)
    NON_INTEGER_2   reduce using rule 242 (blockStatement -> statement .)
    NON_INTEGER_3   reduce using rule 242 (blockStatement -> statement .)
    TRUE            reduce using rule 242 (blockStatement -> statement .)
    FALSE           reduce using rule 242 (blockStatement -> statement .)
    CASE            reduce using rule 242 (blockStatement -> statement .)
    DEFAULT         reduce using rule 242 (blockStatement -> statement .)


state 674

    (246) localVariableDeclaration -> type . variableDeclarators
    (123) variableDeclarators -> . variableDeclarator expt_26
    (124) variableDeclarators -> . variableDeclarator empty
    (125) variableDeclarator -> . variableDeclaratorId expt_27
    (126) variableDeclarator -> . variableDeclaratorId empty
    (131) variableDeclaratorId -> . Identifier expt_24
    (132) variableDeclaratorId -> . Identifier empty

    Identifier      shift and go to state 704

    variableDeclarators            shift and go to state 740
    variableDeclaratorId           shift and go to state 565
    variableDeclarator             shift and go to state 568

state 675

    (239) block -> BLPAREN empty . BRPAREN
    (20) classOrInterfaceModifiers -> empty .

    BRPAREN         shift and go to state 741
    CLASS           reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    ENUM            reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    INTERFACE       reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    AT              reduce using rule 20 (classOrInterfaceModifiers -> empty .)


state 676

    (245) localVariableDeclaration -> variableModifiers . type variableDeclarators
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    type                           shift and go to state 742

state 677

    (150) type -> primitiveType . expt_24
    (151) type -> primitiveType . empty
    (358) primary -> primitiveType . expt_24 DOT CLASS
    (359) primary -> primitiveType . DOT CLASS
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN
    (584) empty -> .

    DOT             shift and go to state 246
    FLPAREN         shift and go to state 245
    Identifier      reduce using rule 584 (empty -> .)

    expt_24                        shift and go to state 415
    empty                          shift and go to state 278

state 678

    (253) statement -> BREAK . Identifier SEMI
    (254) statement -> BREAK . SEMI

    Identifier      shift and go to state 743
    SEMI            shift and go to state 744


state 679

    (261) statement -> DO . statement WHILE parExpression SEMI
    (248) statement -> . Identifier COLON statement
    (249) statement -> . statementExpression SEMI
    (250) statement -> . SEMI
    (251) statement -> . CONTINUE Identifier SEMI
    (252) statement -> . CONTINUE SEMI
    (253) statement -> . BREAK Identifier SEMI
    (254) statement -> . BREAK SEMI
    (255) statement -> . THROW expression SEMI
    (256) statement -> . RETURN expt_53 SEMI
    (257) statement -> . RETURN SEMI
    (258) statement -> . SYNCHRONIZED parExpression block
    (259) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (260) statement -> . TRY block expr_9
    (261) statement -> . DO statement WHILE parExpression SEMI
    (262) statement -> . WHILE parExpression statement
    (263) statement -> . FOR LPAREN forControl RPAREN statement
    (264) statement -> . IF parExpression statement ELSE statement
    (265) statement -> . IF parExpression statement
    (266) statement -> . ASSERT expression expt_51 SEMI
    (267) statement -> . ASSERT expression SEMI
    (268) statement -> . block
    (296) statementExpression -> . expression
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    Identifier      shift and go to state 745
    SEMI            shift and go to state 747
    CONTINUE        shift and go to state 681
    BREAK           shift and go to state 678
    THROW           shift and go to state 686
    RETURN          shift and go to state 660
    SYNCHRONIZED    shift and go to state 661
    SWITCH          shift and go to state 672
    TRY             shift and go to state 665
    DO              shift and go to state 679
    WHILE           shift and go to state 671
    FOR             shift and go to state 664
    IF              shift and go to state 684
    ASSERT          shift and go to state 680
    BLPAREN         shift and go to state 612
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    statement                      shift and go to state 746
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    integerLiteral                 shift and go to state 111
    statementExpression            shift and go to state 685
    andExpression                  shift and go to state 121
    expression                     shift and go to state 668
    block                          shift and go to state 669

state 680

    (266) statement -> ASSERT . expression expt_51 SEMI
    (267) statement -> ASSERT . expression SEMI
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 748

state 681

    (251) statement -> CONTINUE . Identifier SEMI
    (252) statement -> CONTINUE . SEMI

    Identifier      shift and go to state 750
    SEMI            shift and go to state 749


state 682

    (244) localVariableDeclarationStatement -> SEMI .
    (250) statement -> SEMI .

  ! reduce/reduce conflict for BRPAREN resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for SEMI resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for Identifier resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for BREAK resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for THROW resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for RETURN resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for SYNCHRONIZED resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for SWITCH resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for TRY resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for DO resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for WHILE resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for FOR resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for IF resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for ASSERT resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for BLPAREN resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for CHAR resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for BYTE resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for SHORT resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for INT resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for LONG resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for FLOAT resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for STATIC resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for FINAL resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for CLASS resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for ENUM resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for AT resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for PLUS resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for DASH resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for OP_INC resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for OP_DEC resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for EXCLAMATION resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for TILDE resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for VOID resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for NEW resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for SUPER resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for THIS resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for LPAREN resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for CharacterLiteral resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for StringLiteral resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for NULL resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for NUMBER resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for HEX_NUMBER resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for LONG_NUMBER resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for LONG_HEX_NUMBER resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for NON_INTEGER_1 resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for NON_INTEGER_2 resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for NON_INTEGER_3 resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for TRUE resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for FALSE resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for CASE resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 244 (localVariableDeclarationStatement -> SEMI .)
    BRPAREN         reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    SEMI            reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    Identifier      reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    CONTINUE        reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    BREAK           reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    THROW           reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    RETURN          reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    SYNCHRONIZED    reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    SWITCH          reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    TRY             reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    DO              reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    WHILE           reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    FOR             reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    IF              reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    ASSERT          reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    BLPAREN         reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    BOOLEAN         reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    CHAR            reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    BYTE            reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    SHORT           reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    INT             reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    LONG            reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    FLOAT           reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    DOUBLE          reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    PUBLIC          reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    PROTECTED       reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    PRIVATE         reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    ABSTRACT        reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    STATIC          reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    FINAL           reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    STRICTFP        reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    CLASS           reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    ENUM            reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    INTERFACE       reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    AT              reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    PLUS            reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    DASH            reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    OP_INC          reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    OP_DEC          reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    EXCLAMATION     reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    TILDE           reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    VOID            reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    NEW             reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    SUPER           reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    THIS            reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    LPAREN          reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    CharacterLiteral reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    StringLiteral   reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    NULL            reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    NUMBER          reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    HEX_NUMBER      reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    LONG_NUMBER     reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    LONG_HEX_NUMBER reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    NON_INTEGER_1   reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    NON_INTEGER_2   reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    NON_INTEGER_3   reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    TRUE            reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    FALSE           reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    CASE            reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)
    DEFAULT         reduce using rule 244 (localVariableDeclarationStatement -> SEMI .)

  ! BRPAREN         [ reduce using rule 250 (statement -> SEMI .) ]
  ! SEMI            [ reduce using rule 250 (statement -> SEMI .) ]
  ! Identifier      [ reduce using rule 250 (statement -> SEMI .) ]
  ! CONTINUE        [ reduce using rule 250 (statement -> SEMI .) ]
  ! BREAK           [ reduce using rule 250 (statement -> SEMI .) ]
  ! THROW           [ reduce using rule 250 (statement -> SEMI .) ]
  ! RETURN          [ reduce using rule 250 (statement -> SEMI .) ]
  ! SYNCHRONIZED    [ reduce using rule 250 (statement -> SEMI .) ]
  ! SWITCH          [ reduce using rule 250 (statement -> SEMI .) ]
  ! TRY             [ reduce using rule 250 (statement -> SEMI .) ]
  ! DO              [ reduce using rule 250 (statement -> SEMI .) ]
  ! WHILE           [ reduce using rule 250 (statement -> SEMI .) ]
  ! FOR             [ reduce using rule 250 (statement -> SEMI .) ]
  ! IF              [ reduce using rule 250 (statement -> SEMI .) ]
  ! ASSERT          [ reduce using rule 250 (statement -> SEMI .) ]
  ! BLPAREN         [ reduce using rule 250 (statement -> SEMI .) ]
  ! BOOLEAN         [ reduce using rule 250 (statement -> SEMI .) ]
  ! CHAR            [ reduce using rule 250 (statement -> SEMI .) ]
  ! BYTE            [ reduce using rule 250 (statement -> SEMI .) ]
  ! SHORT           [ reduce using rule 250 (statement -> SEMI .) ]
  ! INT             [ reduce using rule 250 (statement -> SEMI .) ]
  ! LONG            [ reduce using rule 250 (statement -> SEMI .) ]
  ! FLOAT           [ reduce using rule 250 (statement -> SEMI .) ]
  ! DOUBLE          [ reduce using rule 250 (statement -> SEMI .) ]
  ! PUBLIC          [ reduce using rule 250 (statement -> SEMI .) ]
  ! PROTECTED       [ reduce using rule 250 (statement -> SEMI .) ]
  ! PRIVATE         [ reduce using rule 250 (statement -> SEMI .) ]
  ! ABSTRACT        [ reduce using rule 250 (statement -> SEMI .) ]
  ! STATIC          [ reduce using rule 250 (statement -> SEMI .) ]
  ! FINAL           [ reduce using rule 250 (statement -> SEMI .) ]
  ! STRICTFP        [ reduce using rule 250 (statement -> SEMI .) ]
  ! CLASS           [ reduce using rule 250 (statement -> SEMI .) ]
  ! ENUM            [ reduce using rule 250 (statement -> SEMI .) ]
  ! INTERFACE       [ reduce using rule 250 (statement -> SEMI .) ]
  ! AT              [ reduce using rule 250 (statement -> SEMI .) ]
  ! PLUS            [ reduce using rule 250 (statement -> SEMI .) ]
  ! DASH            [ reduce using rule 250 (statement -> SEMI .) ]
  ! OP_INC          [ reduce using rule 250 (statement -> SEMI .) ]
  ! OP_DEC          [ reduce using rule 250 (statement -> SEMI .) ]
  ! EXCLAMATION     [ reduce using rule 250 (statement -> SEMI .) ]
  ! TILDE           [ reduce using rule 250 (statement -> SEMI .) ]
  ! VOID            [ reduce using rule 250 (statement -> SEMI .) ]
  ! NEW             [ reduce using rule 250 (statement -> SEMI .) ]
  ! SUPER           [ reduce using rule 250 (statement -> SEMI .) ]
  ! THIS            [ reduce using rule 250 (statement -> SEMI .) ]
  ! LPAREN          [ reduce using rule 250 (statement -> SEMI .) ]
  ! CharacterLiteral [ reduce using rule 250 (statement -> SEMI .) ]
  ! StringLiteral   [ reduce using rule 250 (statement -> SEMI .) ]
  ! NULL            [ reduce using rule 250 (statement -> SEMI .) ]
  ! NUMBER          [ reduce using rule 250 (statement -> SEMI .) ]
  ! HEX_NUMBER      [ reduce using rule 250 (statement -> SEMI .) ]
  ! LONG_NUMBER     [ reduce using rule 250 (statement -> SEMI .) ]
  ! LONG_HEX_NUMBER [ reduce using rule 250 (statement -> SEMI .) ]
  ! NON_INTEGER_1   [ reduce using rule 250 (statement -> SEMI .) ]
  ! NON_INTEGER_2   [ reduce using rule 250 (statement -> SEMI .) ]
  ! NON_INTEGER_3   [ reduce using rule 250 (statement -> SEMI .) ]
  ! TRUE            [ reduce using rule 250 (statement -> SEMI .) ]
  ! FALSE           [ reduce using rule 250 (statement -> SEMI .) ]
  ! CASE            [ reduce using rule 250 (statement -> SEMI .) ]
  ! DEFAULT         [ reduce using rule 250 (statement -> SEMI .) ]


state 683

    (21) classOrInterfaceModifier -> annotation .
    (167) variableModifier -> annotation .

  ! reduce/reduce conflict for FINAL resolved using rule 21 (classOrInterfaceModifier -> annotation .)
  ! reduce/reduce conflict for AT resolved using rule 21 (classOrInterfaceModifier -> annotation .)
    PUBLIC          reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    PROTECTED       reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    PRIVATE         reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    ABSTRACT        reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    STATIC          reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    FINAL           reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    STRICTFP        reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    AT              reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    CLASS           reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    ENUM            reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    INTERFACE       reduce using rule 21 (classOrInterfaceModifier -> annotation .)
    BOOLEAN         reduce using rule 167 (variableModifier -> annotation .)
    CHAR            reduce using rule 167 (variableModifier -> annotation .)
    BYTE            reduce using rule 167 (variableModifier -> annotation .)
    SHORT           reduce using rule 167 (variableModifier -> annotation .)
    INT             reduce using rule 167 (variableModifier -> annotation .)
    LONG            reduce using rule 167 (variableModifier -> annotation .)
    FLOAT           reduce using rule 167 (variableModifier -> annotation .)
    DOUBLE          reduce using rule 167 (variableModifier -> annotation .)
    Identifier      reduce using rule 167 (variableModifier -> annotation .)

  ! FINAL           [ reduce using rule 167 (variableModifier -> annotation .) ]
  ! AT              [ reduce using rule 167 (variableModifier -> annotation .) ]


state 684

    (264) statement -> IF . parExpression statement ELSE statement
    (265) statement -> IF . parExpression statement
    (293) parExpression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 728

    parExpression                  shift and go to state 751

state 685

    (249) statement -> statementExpression . SEMI

    SEMI            shift and go to state 752


state 686

    (255) statement -> THROW . expression SEMI
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 753

state 687

    (87) memberDecl -> VOID Identifier . voidMethodDeclaratorRest
    (111) voidMethodDeclaratorRest -> . formalParameters expt_25 expr_4
    (112) voidMethodDeclaratorRest -> . formalParameters empty expr_4
    (175) formalParameters -> . LPAREN expt_37 RPAREN
    (176) formalParameters -> . LPAREN empty RPAREN

    LPAREN          shift and go to state 693

    voidMethodDeclaratorRest       shift and go to state 755
    formalParameters               shift and go to state 754

state 688

    (92) genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .

    BRPAREN         reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    SEMI            reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    STATIC          reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    PUBLIC          reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    PROTECTED       reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    PRIVATE         reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    ABSTRACT        reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    FINAL           reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    NATIVE          reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    SYNCHRONIZED    reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    TRANSIENT       reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    VOLATILE        reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    STRICTFP        reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    AT              reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    VOID            reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    Identifier      reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    LESS            reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    INTERFACE       reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    CLASS           reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    ENUM            reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    BOOLEAN         reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    CHAR            reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    BYTE            reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    SHORT           reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    INT             reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    LONG            reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    FLOAT           reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    DOUBLE          reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    BLPAREN         reduce using rule 92 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)


state 689

    (93) genericMethodOrConstructorRest -> expr_3 . Identifier methodDeclaratorRest

    Identifier      shift and go to state 756


state 690

    (94) genericMethodOrConstructorRest -> Identifier . constructorDeclaratorRest
    (154) classOrInterfaceType -> Identifier . expt_32 expt_33
    (155) classOrInterfaceType -> Identifier . expt_32 empty
    (156) classOrInterfaceType -> Identifier . empty expt_33
    (157) classOrInterfaceType -> Identifier . empty empty
    (120) constructorDeclaratorRest -> . formalParameters expt_25 constructorBody
    (121) constructorDeclaratorRest -> . formalParameters empty constructorBody
    (500) expt_32 -> . typeArguments
    (501) expt_32 -> . empty
    (584) empty -> .
    (175) formalParameters -> . LPAREN expt_37 RPAREN
    (176) formalParameters -> . LPAREN empty RPAREN
    (168) typeArguments -> . LESS typeArgument expt_34 MORE
    (169) typeArguments -> . LESS typeArgument MORE

    DOT             reduce using rule 584 (empty -> .)
    FLPAREN         reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    LPAREN          shift and go to state 693
    LESS            shift and go to state 279

    typeArguments                  shift and go to state 280
    expt_32                        shift and go to state 281
    formalParameters               shift and go to state 691
    constructorDeclaratorRest      shift and go to state 757
    empty                          shift and go to state 282

state 691

    (120) constructorDeclaratorRest -> formalParameters . expt_25 constructorBody
    (121) constructorDeclaratorRest -> formalParameters . empty constructorBody
    (486) expt_25 -> . THROWS qualifiedNameList
    (487) expt_25 -> . empty
    (584) empty -> .

    THROWS          shift and go to state 759
    BLPAREN         reduce using rule 584 (empty -> .)

    expt_25                        shift and go to state 758
    empty                          shift and go to state 760

state 692

    (88) memberDecl -> Identifier constructorDeclaratorRest .

    BRPAREN         reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    SEMI            reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    STATIC          reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    PUBLIC          reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    PROTECTED       reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    PRIVATE         reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    ABSTRACT        reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    FINAL           reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    NATIVE          reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    TRANSIENT       reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    VOLATILE        reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    STRICTFP        reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    AT              reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    VOID            reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    Identifier      reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    LESS            reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    INTERFACE       reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    CLASS           reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    ENUM            reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    BOOLEAN         reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    CHAR            reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    BYTE            reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    SHORT           reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    INT             reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    LONG            reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    FLOAT           reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    DOUBLE          reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)
    BLPAREN         reduce using rule 88 (memberDecl -> Identifier constructorDeclaratorRest .)


state 693

    (175) formalParameters -> LPAREN . expt_37 RPAREN
    (176) formalParameters -> LPAREN . empty RPAREN
    (510) expt_37 -> . formalParameterDecls
    (511) expt_37 -> . empty
    (584) empty -> .
    (177) formalParameterDecls -> . variableModifiers type formalParameterDeclsRest
    (178) formalParameterDecls -> . type formalParameterDeclsRest
    (247) variableModifiers -> . expt_50
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (534) expt_50 -> . variableModifier
    (535) expt_50 -> . expt_50 variableModifier
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty
    (166) variableModifier -> . FINAL
    (167) variableModifier -> . annotation
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

    RPAREN          reduce using rule 584 (empty -> .)
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166
    FINAL           shift and go to state 736
    AT              shift and go to state 8

    variableModifiers              shift and go to state 765
    expt_37                        shift and go to state 761
    classOrInterfaceType           shift and go to state 164
    formalParameterDecls           shift and go to state 762
    primitiveType                  shift and go to state 165
    variableModifier               shift and go to state 658
    expt_50                        shift and go to state 667
    type                           shift and go to state 763
    annotation                     shift and go to state 734
    empty                          shift and go to state 764

state 694

    (96) fieldDeclaration -> variableDeclarators . SEMI

    SEMI            shift and go to state 766


state 695

    (407) expr_2 -> methodDeclaration .

    BRPAREN         reduce using rule 407 (expr_2 -> methodDeclaration .)
    SEMI            reduce using rule 407 (expr_2 -> methodDeclaration .)
    STATIC          reduce using rule 407 (expr_2 -> methodDeclaration .)
    PUBLIC          reduce using rule 407 (expr_2 -> methodDeclaration .)
    PROTECTED       reduce using rule 407 (expr_2 -> methodDeclaration .)
    PRIVATE         reduce using rule 407 (expr_2 -> methodDeclaration .)
    ABSTRACT        reduce using rule 407 (expr_2 -> methodDeclaration .)
    FINAL           reduce using rule 407 (expr_2 -> methodDeclaration .)
    NATIVE          reduce using rule 407 (expr_2 -> methodDeclaration .)
    SYNCHRONIZED    reduce using rule 407 (expr_2 -> methodDeclaration .)
    TRANSIENT       reduce using rule 407 (expr_2 -> methodDeclaration .)
    VOLATILE        reduce using rule 407 (expr_2 -> methodDeclaration .)
    STRICTFP        reduce using rule 407 (expr_2 -> methodDeclaration .)
    AT              reduce using rule 407 (expr_2 -> methodDeclaration .)
    VOID            reduce using rule 407 (expr_2 -> methodDeclaration .)
    Identifier      reduce using rule 407 (expr_2 -> methodDeclaration .)
    LESS            reduce using rule 407 (expr_2 -> methodDeclaration .)
    INTERFACE       reduce using rule 407 (expr_2 -> methodDeclaration .)
    CLASS           reduce using rule 407 (expr_2 -> methodDeclaration .)
    ENUM            reduce using rule 407 (expr_2 -> methodDeclaration .)
    BOOLEAN         reduce using rule 407 (expr_2 -> methodDeclaration .)
    CHAR            reduce using rule 407 (expr_2 -> methodDeclaration .)
    BYTE            reduce using rule 407 (expr_2 -> methodDeclaration .)
    SHORT           reduce using rule 407 (expr_2 -> methodDeclaration .)
    INT             reduce using rule 407 (expr_2 -> methodDeclaration .)
    LONG            reduce using rule 407 (expr_2 -> methodDeclaration .)
    FLOAT           reduce using rule 407 (expr_2 -> methodDeclaration .)
    DOUBLE          reduce using rule 407 (expr_2 -> methodDeclaration .)
    BLPAREN         reduce using rule 407 (expr_2 -> methodDeclaration .)


state 696

    (408) expr_2 -> fieldDeclaration .

    BRPAREN         reduce using rule 408 (expr_2 -> fieldDeclaration .)
    SEMI            reduce using rule 408 (expr_2 -> fieldDeclaration .)
    STATIC          reduce using rule 408 (expr_2 -> fieldDeclaration .)
    PUBLIC          reduce using rule 408 (expr_2 -> fieldDeclaration .)
    PROTECTED       reduce using rule 408 (expr_2 -> fieldDeclaration .)
    PRIVATE         reduce using rule 408 (expr_2 -> fieldDeclaration .)
    ABSTRACT        reduce using rule 408 (expr_2 -> fieldDeclaration .)
    FINAL           reduce using rule 408 (expr_2 -> fieldDeclaration .)
    NATIVE          reduce using rule 408 (expr_2 -> fieldDeclaration .)
    SYNCHRONIZED    reduce using rule 408 (expr_2 -> fieldDeclaration .)
    TRANSIENT       reduce using rule 408 (expr_2 -> fieldDeclaration .)
    VOLATILE        reduce using rule 408 (expr_2 -> fieldDeclaration .)
    STRICTFP        reduce using rule 408 (expr_2 -> fieldDeclaration .)
    AT              reduce using rule 408 (expr_2 -> fieldDeclaration .)
    VOID            reduce using rule 408 (expr_2 -> fieldDeclaration .)
    Identifier      reduce using rule 408 (expr_2 -> fieldDeclaration .)
    LESS            reduce using rule 408 (expr_2 -> fieldDeclaration .)
    INTERFACE       reduce using rule 408 (expr_2 -> fieldDeclaration .)
    CLASS           reduce using rule 408 (expr_2 -> fieldDeclaration .)
    ENUM            reduce using rule 408 (expr_2 -> fieldDeclaration .)
    BOOLEAN         reduce using rule 408 (expr_2 -> fieldDeclaration .)
    CHAR            reduce using rule 408 (expr_2 -> fieldDeclaration .)
    BYTE            reduce using rule 408 (expr_2 -> fieldDeclaration .)
    SHORT           reduce using rule 408 (expr_2 -> fieldDeclaration .)
    INT             reduce using rule 408 (expr_2 -> fieldDeclaration .)
    LONG            reduce using rule 408 (expr_2 -> fieldDeclaration .)
    FLOAT           reduce using rule 408 (expr_2 -> fieldDeclaration .)
    DOUBLE          reduce using rule 408 (expr_2 -> fieldDeclaration .)
    BLPAREN         reduce using rule 408 (expr_2 -> fieldDeclaration .)


state 697

    (95) methodDeclaration -> Identifier . methodDeclaratorRest
    (131) variableDeclaratorId -> Identifier . expt_24
    (132) variableDeclaratorId -> Identifier . empty
    (107) methodDeclaratorRest -> . formalParameters expt_24 expt_25 expr_4
    (108) methodDeclaratorRest -> . formalParameters expt_24 empty expr_4
    (109) methodDeclaratorRest -> . formalParameters empty expt_25 expr_4
    (110) methodDeclaratorRest -> . formalParameters empty empty expr_4
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN
    (584) empty -> .
    (175) formalParameters -> . LPAREN expt_37 RPAREN
    (176) formalParameters -> . LPAREN empty RPAREN

    FLPAREN         shift and go to state 245
    EQUALS          reduce using rule 584 (empty -> .)
    COMMA           reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)
    LPAREN          shift and go to state 693

    expt_24                        shift and go to state 634
    formalParameters               shift and go to state 767
    methodDeclaratorRest           shift and go to state 768
    empty                          shift and go to state 636

state 698

    (91) memberDeclaration -> type expr_2 .

    BRPAREN         reduce using rule 91 (memberDeclaration -> type expr_2 .)
    SEMI            reduce using rule 91 (memberDeclaration -> type expr_2 .)
    STATIC          reduce using rule 91 (memberDeclaration -> type expr_2 .)
    PUBLIC          reduce using rule 91 (memberDeclaration -> type expr_2 .)
    PROTECTED       reduce using rule 91 (memberDeclaration -> type expr_2 .)
    PRIVATE         reduce using rule 91 (memberDeclaration -> type expr_2 .)
    ABSTRACT        reduce using rule 91 (memberDeclaration -> type expr_2 .)
    FINAL           reduce using rule 91 (memberDeclaration -> type expr_2 .)
    NATIVE          reduce using rule 91 (memberDeclaration -> type expr_2 .)
    SYNCHRONIZED    reduce using rule 91 (memberDeclaration -> type expr_2 .)
    TRANSIENT       reduce using rule 91 (memberDeclaration -> type expr_2 .)
    VOLATILE        reduce using rule 91 (memberDeclaration -> type expr_2 .)
    STRICTFP        reduce using rule 91 (memberDeclaration -> type expr_2 .)
    AT              reduce using rule 91 (memberDeclaration -> type expr_2 .)
    VOID            reduce using rule 91 (memberDeclaration -> type expr_2 .)
    Identifier      reduce using rule 91 (memberDeclaration -> type expr_2 .)
    LESS            reduce using rule 91 (memberDeclaration -> type expr_2 .)
    INTERFACE       reduce using rule 91 (memberDeclaration -> type expr_2 .)
    CLASS           reduce using rule 91 (memberDeclaration -> type expr_2 .)
    ENUM            reduce using rule 91 (memberDeclaration -> type expr_2 .)
    BOOLEAN         reduce using rule 91 (memberDeclaration -> type expr_2 .)
    CHAR            reduce using rule 91 (memberDeclaration -> type expr_2 .)
    BYTE            reduce using rule 91 (memberDeclaration -> type expr_2 .)
    SHORT           reduce using rule 91 (memberDeclaration -> type expr_2 .)
    INT             reduce using rule 91 (memberDeclaration -> type expr_2 .)
    LONG            reduce using rule 91 (memberDeclaration -> type expr_2 .)
    FLOAT           reduce using rule 91 (memberDeclaration -> type expr_2 .)
    DOUBLE          reduce using rule 91 (memberDeclaration -> type expr_2 .)
    BLPAREN         reduce using rule 91 (memberDeclaration -> type expr_2 .)


state 699

    (490) expt_27 -> EQUALS variableInitializer .

    COMMA           reduce using rule 490 (expt_27 -> EQUALS variableInitializer .)
    SEMI            reduce using rule 490 (expt_27 -> EQUALS variableInitializer .)


state 700

    (134) variableInitializer -> expression .

    COMMA           reduce using rule 134 (variableInitializer -> expression .)
    SEMI            reduce using rule 134 (variableInitializer -> expression .)
    BRPAREN         reduce using rule 134 (variableInitializer -> expression .)


state 701

    (133) variableInitializer -> arrayInitializer .

    COMMA           reduce using rule 133 (variableInitializer -> arrayInitializer .)
    SEMI            reduce using rule 133 (variableInitializer -> arrayInitializer .)
    BRPAREN         reduce using rule 133 (variableInitializer -> arrayInitializer .)


state 702

    (234) annotationMethodRest -> Identifier LPAREN RPAREN . expt_49
    (235) annotationMethodRest -> Identifier LPAREN RPAREN . empty
    (532) expt_49 -> . defaultValue
    (533) expt_49 -> . empty
    (584) empty -> .
    (237) defaultValue -> . DEFAULT elementValue

    SEMI            reduce using rule 584 (empty -> .)
    DEFAULT         shift and go to state 769

    defaultValue                   shift and go to state 770
    expt_49                        shift and go to state 771
    empty                          shift and go to state 772

state 703

    (489) expt_26 -> expt_26 COMMA . variableDeclarator
    (125) variableDeclarator -> . variableDeclaratorId expt_27
    (126) variableDeclarator -> . variableDeclaratorId empty
    (131) variableDeclaratorId -> . Identifier expt_24
    (132) variableDeclaratorId -> . Identifier empty

    Identifier      shift and go to state 704

    variableDeclaratorId           shift and go to state 565
    variableDeclarator             shift and go to state 773

state 704

    (131) variableDeclaratorId -> Identifier . expt_24
    (132) variableDeclaratorId -> Identifier . empty
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN
    (584) empty -> .

    FLPAREN         shift and go to state 245
    EQUALS          reduce using rule 584 (empty -> .)
    COMMA           reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)
    RPAREN          reduce using rule 584 (empty -> .)

    expt_24                        shift and go to state 634
    empty                          shift and go to state 636

state 705

    (488) expt_26 -> COMMA variableDeclarator .

    COMMA           reduce using rule 488 (expt_26 -> COMMA variableDeclarator .)
    SEMI            reduce using rule 488 (expt_26 -> COMMA variableDeclarator .)


state 706

    (463) expt_12 -> expt_12 AND type .

    AND             reduce using rule 463 (expt_12 -> expt_12 AND type .)
    COMMA           reduce using rule 463 (expt_12 -> expt_12 AND type .)
    MORE            reduce using rule 463 (expt_12 -> expt_12 AND type .)


state 707

    (118) voidInterfaceMethodDeclaratorRest -> formalParameters . expt_25 SEMI
    (119) voidInterfaceMethodDeclaratorRest -> formalParameters . empty SEMI
    (486) expt_25 -> . THROWS qualifiedNameList
    (487) expt_25 -> . empty
    (584) empty -> .

    THROWS          shift and go to state 759
    SEMI            reduce using rule 584 (empty -> .)

    expt_25                        shift and go to state 774
    empty                          shift and go to state 775

state 708

    (101) interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .

    BRPAREN         reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    SEMI            reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    PUBLIC          reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    PROTECTED       reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    PRIVATE         reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    STATIC          reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    ABSTRACT        reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    FINAL           reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    NATIVE          reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    TRANSIENT       reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    VOLATILE        reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    STRICTFP        reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    AT              reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    VOID            reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    LESS            reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    INTERFACE       reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    CLASS           reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    ENUM            reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    BOOLEAN         reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    CHAR            reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    BYTE            reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    SHORT           reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    INT             reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    LONG            reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    FLOAT           reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    DOUBLE          reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    Identifier      reduce using rule 101 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)


state 709

    (117) interfaceGenericMethodDecl -> typeParameters expr_3 Identifier . interfaceMethodDeclaratorRest
    (113) interfaceMethodDeclaratorRest -> . formalParameters expt_24 expt_25 SEMI
    (114) interfaceMethodDeclaratorRest -> . formalParameters expt_24 empty SEMI
    (115) interfaceMethodDeclaratorRest -> . formalParameters empty expt_25 SEMI
    (116) interfaceMethodDeclaratorRest -> . formalParameters empty empty SEMI
    (175) formalParameters -> . LPAREN expt_37 RPAREN
    (176) formalParameters -> . LPAREN empty RPAREN

    LPAREN          shift and go to state 693

    interfaceMethodDeclaratorRest  shift and go to state 776
    formalParameters               shift and go to state 715

state 710

    (129) constantDeclaratorRest -> expt_24 . EQUALS variableInitializer
    (485) expt_24 -> expt_24 . FLPAREN FRPAREN

    EQUALS          shift and go to state 777
    FLPAREN         shift and go to state 391


state 711

    (106) interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .

    BRPAREN         reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    SEMI            reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    PUBLIC          reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    PROTECTED       reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    PRIVATE         reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    STATIC          reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    ABSTRACT        reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    FINAL           reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    NATIVE          reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    TRANSIENT       reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    VOLATILE        reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    STRICTFP        reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    AT              reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    VOID            reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    LESS            reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    INTERFACE       reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    CLASS           reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    ENUM            reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    BOOLEAN         reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    CHAR            reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    BYTE            reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    SHORT           reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    INT             reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    LONG            reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    FLOAT           reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    DOUBLE          reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    Identifier      reduce using rule 106 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)


state 712

    (104) interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .

    BRPAREN         reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    SEMI            reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    PUBLIC          reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    PROTECTED       reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    PRIVATE         reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    STATIC          reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    ABSTRACT        reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    FINAL           reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    NATIVE          reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    SYNCHRONIZED    reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    TRANSIENT       reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    VOLATILE        reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    STRICTFP        reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    AT              reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    VOID            reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    LESS            reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    INTERFACE       reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    CLASS           reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    ENUM            reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    BOOLEAN         reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    CHAR            reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    BYTE            reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    SHORT           reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    INT             reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    LONG            reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    FLOAT           reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    DOUBLE          reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    Identifier      reduce using rule 104 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)


state 713

    (105) interfaceMethodOrFieldRest -> constantDeclaratorsRest . SEMI

    SEMI            shift and go to state 778


state 714

    (127) constantDeclaratorsRest -> constantDeclaratorRest . expt_28
    (128) constantDeclaratorsRest -> constantDeclaratorRest . empty
    (492) expt_28 -> . COMMA constantDeclarator
    (493) expt_28 -> . expt_28 COMMA constantDeclarator
    (584) empty -> .

    COMMA           shift and go to state 779
    SEMI            reduce using rule 584 (empty -> .)

    empty                          shift and go to state 780
    expt_28                        shift and go to state 781

state 715

    (113) interfaceMethodDeclaratorRest -> formalParameters . expt_24 expt_25 SEMI
    (114) interfaceMethodDeclaratorRest -> formalParameters . expt_24 empty SEMI
    (115) interfaceMethodDeclaratorRest -> formalParameters . empty expt_25 SEMI
    (116) interfaceMethodDeclaratorRest -> formalParameters . empty empty SEMI
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN
    (584) empty -> .

    FLPAREN         shift and go to state 245
    THROWS          reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)

    expt_24                        shift and go to state 782
    empty                          shift and go to state 783

state 716

    (130) constantDeclaratorRest -> empty . EQUALS variableInitializer

    EQUALS          shift and go to state 784


state 717

    (438) expr_19 -> expression FRPAREN expt_76 expt_24 .
    (485) expt_24 -> expt_24 . FLPAREN FRPAREN

  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    OP_DEC          reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    DOT             reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    MULT            reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    SLASH           reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    PERCENT         reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    PLUS            reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    DASH            reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    OP_SHR          reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    OP_SHL          reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    OP_SHRR         reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    OP_LE           reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    OP_GE           reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    LESS            reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    MORE            reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    INSTANCEOF      reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    OP_EQ           reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    OP_NE           reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    AND             reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    CARET           reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    VERTICAL        reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    OP_LAND         reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    OP_LOR          reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    QUES            reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    RPAREN          reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    COMMA           reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    BRPAREN         reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    EQUALS          reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    ASS_ADD         reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    ASS_SUB         reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    ASS_MUL         reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    ASS_DIV         reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    ASS_AND         reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    ASS_OR          reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    ASS_XOR         reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    ASS_MOD         reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    ASS_SHL         reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    ASS_SHRR        reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    ASS_SHR         reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    FRPAREN         reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    COLON           reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    SEMI            reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .)
    FLPAREN         shift and go to state 391

  ! FLPAREN         [ reduce using rule 438 (expr_19 -> expression FRPAREN expt_76 expt_24 .) ]


state 718

    (576) expt_76 -> expt_76 FLPAREN . expression FRPAREN
    (484) expt_24 -> FLPAREN . FRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    FRPAREN         shift and go to state 393
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 785

state 719

    (575) expt_76 -> FLPAREN expression . FRPAREN

    FRPAREN         shift and go to state 786


state 720

    (498) expt_31 -> variableInitializer . expt_29 expt_30
    (494) expt_29 -> . COMMA variableInitializer
    (495) expt_29 -> . expt_29 COMMA variableInitializer

    COMMA           shift and go to state 787

    expt_29                        shift and go to state 788

state 721

    (135) arrayInitializer -> BLPAREN expt_31 . BRPAREN

    BRPAREN         shift and go to state 789


state 722

    (136) arrayInitializer -> BLPAREN empty . BRPAREN
    (499) expt_31 -> empty .

  ! shift/reduce conflict for BRPAREN resolved as shift
    BRPAREN         shift and go to state 790

  ! BRPAREN         [ reduce using rule 499 (expt_31 -> empty .) ]


state 723

    (257) statement -> RETURN SEMI .

    BRPAREN         reduce using rule 257 (statement -> RETURN SEMI .)
    SEMI            reduce using rule 257 (statement -> RETURN SEMI .)
    Identifier      reduce using rule 257 (statement -> RETURN SEMI .)
    CONTINUE        reduce using rule 257 (statement -> RETURN SEMI .)
    BREAK           reduce using rule 257 (statement -> RETURN SEMI .)
    THROW           reduce using rule 257 (statement -> RETURN SEMI .)
    RETURN          reduce using rule 257 (statement -> RETURN SEMI .)
    SYNCHRONIZED    reduce using rule 257 (statement -> RETURN SEMI .)
    SWITCH          reduce using rule 257 (statement -> RETURN SEMI .)
    TRY             reduce using rule 257 (statement -> RETURN SEMI .)
    DO              reduce using rule 257 (statement -> RETURN SEMI .)
    WHILE           reduce using rule 257 (statement -> RETURN SEMI .)
    FOR             reduce using rule 257 (statement -> RETURN SEMI .)
    IF              reduce using rule 257 (statement -> RETURN SEMI .)
    ASSERT          reduce using rule 257 (statement -> RETURN SEMI .)
    BLPAREN         reduce using rule 257 (statement -> RETURN SEMI .)
    BOOLEAN         reduce using rule 257 (statement -> RETURN SEMI .)
    CHAR            reduce using rule 257 (statement -> RETURN SEMI .)
    BYTE            reduce using rule 257 (statement -> RETURN SEMI .)
    SHORT           reduce using rule 257 (statement -> RETURN SEMI .)
    INT             reduce using rule 257 (statement -> RETURN SEMI .)
    LONG            reduce using rule 257 (statement -> RETURN SEMI .)
    FLOAT           reduce using rule 257 (statement -> RETURN SEMI .)
    DOUBLE          reduce using rule 257 (statement -> RETURN SEMI .)
    PUBLIC          reduce using rule 257 (statement -> RETURN SEMI .)
    PROTECTED       reduce using rule 257 (statement -> RETURN SEMI .)
    PRIVATE         reduce using rule 257 (statement -> RETURN SEMI .)
    ABSTRACT        reduce using rule 257 (statement -> RETURN SEMI .)
    STATIC          reduce using rule 257 (statement -> RETURN SEMI .)
    FINAL           reduce using rule 257 (statement -> RETURN SEMI .)
    STRICTFP        reduce using rule 257 (statement -> RETURN SEMI .)
    CLASS           reduce using rule 257 (statement -> RETURN SEMI .)
    ENUM            reduce using rule 257 (statement -> RETURN SEMI .)
    INTERFACE       reduce using rule 257 (statement -> RETURN SEMI .)
    AT              reduce using rule 257 (statement -> RETURN SEMI .)
    PLUS            reduce using rule 257 (statement -> RETURN SEMI .)
    DASH            reduce using rule 257 (statement -> RETURN SEMI .)
    OP_INC          reduce using rule 257 (statement -> RETURN SEMI .)
    OP_DEC          reduce using rule 257 (statement -> RETURN SEMI .)
    EXCLAMATION     reduce using rule 257 (statement -> RETURN SEMI .)
    TILDE           reduce using rule 257 (statement -> RETURN SEMI .)
    VOID            reduce using rule 257 (statement -> RETURN SEMI .)
    NEW             reduce using rule 257 (statement -> RETURN SEMI .)
    SUPER           reduce using rule 257 (statement -> RETURN SEMI .)
    THIS            reduce using rule 257 (statement -> RETURN SEMI .)
    LPAREN          reduce using rule 257 (statement -> RETURN SEMI .)
    CharacterLiteral reduce using rule 257 (statement -> RETURN SEMI .)
    StringLiteral   reduce using rule 257 (statement -> RETURN SEMI .)
    NULL            reduce using rule 257 (statement -> RETURN SEMI .)
    NUMBER          reduce using rule 257 (statement -> RETURN SEMI .)
    HEX_NUMBER      reduce using rule 257 (statement -> RETURN SEMI .)
    LONG_NUMBER     reduce using rule 257 (statement -> RETURN SEMI .)
    LONG_HEX_NUMBER reduce using rule 257 (statement -> RETURN SEMI .)
    NON_INTEGER_1   reduce using rule 257 (statement -> RETURN SEMI .)
    NON_INTEGER_2   reduce using rule 257 (statement -> RETURN SEMI .)
    NON_INTEGER_3   reduce using rule 257 (statement -> RETURN SEMI .)
    TRUE            reduce using rule 257 (statement -> RETURN SEMI .)
    FALSE           reduce using rule 257 (statement -> RETURN SEMI .)
    CASE            reduce using rule 257 (statement -> RETURN SEMI .)
    DEFAULT         reduce using rule 257 (statement -> RETURN SEMI .)
    ELSE            reduce using rule 257 (statement -> RETURN SEMI .)


state 724

    (539) expt_53 -> empty .

    SEMI            reduce using rule 539 (expt_53 -> empty .)


state 725

    (256) statement -> RETURN expt_53 . SEMI

    SEMI            shift and go to state 791


state 726

    (538) expt_53 -> expression .

    SEMI            reduce using rule 538 (expt_53 -> expression .)


state 727

    (258) statement -> SYNCHRONIZED parExpression . block
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN

    BLPAREN         shift and go to state 612

    block                          shift and go to state 792

state 728

    (293) parExpression -> LPAREN . expression RPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 793

state 729

    (517) expt_40 -> expt_40 blockStatement .

    BRPAREN         reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    SEMI            reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    Identifier      reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    CONTINUE        reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    BREAK           reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    THROW           reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    RETURN          reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    SYNCHRONIZED    reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    SWITCH          reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    TRY             reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    DO              reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    WHILE           reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    FOR             reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    IF              reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    ASSERT          reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    BLPAREN         reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    BOOLEAN         reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    CHAR            reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    BYTE            reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    SHORT           reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    INT             reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    LONG            reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    FLOAT           reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    DOUBLE          reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    PUBLIC          reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    PROTECTED       reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    PRIVATE         reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    ABSTRACT        reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    STATIC          reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    FINAL           reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    STRICTFP        reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    CLASS           reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    ENUM            reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    INTERFACE       reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    AT              reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    PLUS            reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    DASH            reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    OP_INC          reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    OP_DEC          reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    EXCLAMATION     reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    TILDE           reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    VOID            reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    NEW             reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    SUPER           reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    THIS            reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    LPAREN          reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    CharacterLiteral reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    StringLiteral   reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    NULL            reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    NUMBER          reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    HEX_NUMBER      reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    LONG_NUMBER     reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    LONG_HEX_NUMBER reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    NON_INTEGER_1   reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    NON_INTEGER_2   reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    NON_INTEGER_3   reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    TRUE            reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    FALSE           reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    CASE            reduce using rule 517 (expt_40 -> expt_40 blockStatement .)
    DEFAULT         reduce using rule 517 (expt_40 -> expt_40 blockStatement .)


state 730

    (238) block -> BLPAREN expt_40 BRPAREN .

    BRPAREN         reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    SEMI            reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    STATIC          reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    PUBLIC          reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    PROTECTED       reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    PRIVATE         reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    ABSTRACT        reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    FINAL           reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    NATIVE          reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    SYNCHRONIZED    reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    TRANSIENT       reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    VOLATILE        reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    STRICTFP        reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    AT              reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    VOID            reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    Identifier      reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    LESS            reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    INTERFACE       reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    CLASS           reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    ENUM            reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    BOOLEAN         reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    CHAR            reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    BYTE            reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    SHORT           reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    INT             reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    LONG            reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    FLOAT           reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    DOUBLE          reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    BLPAREN         reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    CONTINUE        reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    BREAK           reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    THROW           reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    RETURN          reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    SWITCH          reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    TRY             reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    DO              reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    WHILE           reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    FOR             reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    IF              reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    ASSERT          reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    PLUS            reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    DASH            reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    OP_INC          reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    OP_DEC          reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    EXCLAMATION     reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    TILDE           reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    NEW             reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    SUPER           reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    THIS            reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    LPAREN          reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    CharacterLiteral reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    StringLiteral   reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    NULL            reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    NUMBER          reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    HEX_NUMBER      reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    LONG_NUMBER     reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    NON_INTEGER_1   reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    NON_INTEGER_2   reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    NON_INTEGER_3   reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    TRUE            reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    FALSE           reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    ELSE            reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    CASE            reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    DEFAULT         reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    CATCH           reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)
    FINALLY         reduce using rule 238 (block -> BLPAREN expt_40 BRPAREN .)


state 731

    (263) statement -> FOR LPAREN . forControl RPAREN statement
    (280) forControl -> . expt_57 SEMI expt_58 SEMI expt_59
    (281) forControl -> . expt_57 SEMI expt_58 SEMI empty
    (282) forControl -> . expt_57 SEMI empty SEMI expt_59
    (283) forControl -> . expt_57 SEMI empty SEMI empty
    (284) forControl -> . empty SEMI expt_58 SEMI expt_59
    (285) forControl -> . empty SEMI expt_58 SEMI empty
    (286) forControl -> . empty SEMI empty SEMI expt_59
    (287) forControl -> . empty SEMI empty SEMI empty
    (288) forControl -> . enhancedForControl
    (544) expt_57 -> . forInit
    (545) expt_57 -> . empty
    (584) empty -> .
    (291) enhancedForControl -> . variableModifiers type Identifier COLON expression
    (289) forInit -> . localVariableDeclaration
    (290) forInit -> . expressionList
    (247) variableModifiers -> . expt_50
    (245) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (246) localVariableDeclaration -> . type variableDeclarators
    (294) expressionList -> . expression expt_60
    (295) expressionList -> . expression
    (534) expt_50 -> . variableModifier
    (535) expt_50 -> . expt_50 variableModifier
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (166) variableModifier -> . FINAL
    (167) variableModifier -> . annotation
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    SEMI            reduce using rule 584 (empty -> .)
    FINAL           shift and go to state 736
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 266
    AT              shift and go to state 8
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    localVariableDeclaration       shift and go to state 798
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    unaryExpression                shift and go to state 149
    shiftExpression                shift and go to state 148
    classOrInterfaceType           shift and go to state 164
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    expressionList                 shift and go to state 799
    type                           shift and go to state 674
    parExpression                  shift and go to state 150
    empty                          shift and go to state 800
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    forInit                        shift and go to state 794
    forControl                     shift and go to state 795
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    variableModifier               shift and go to state 658
    conditionalOrExpression        shift and go to state 124
    annotation                     shift and go to state 734
    instanceOfExpression           shift and go to state 108
    enhancedForControl             shift and go to state 796
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    variableModifiers              shift and go to state 801
    primitiveType                  shift and go to state 677
    integerLiteral                 shift and go to state 111
    andExpression                  shift and go to state 121
    expt_50                        shift and go to state 667
    expression                     shift and go to state 347
    expt_57                        shift and go to state 797

state 732

    (260) statement -> TRY block . expr_9
    (417) expr_9 -> . catches FINALLY block
    (418) expr_9 -> . catches
    (419) expr_9 -> . FINALLY block
    (269) catches -> . catchClause expt_55
    (270) catches -> . catchClause empty
    (271) catchClause -> . CATCH LPAREN formalParameter RPAREN block

    FINALLY         shift and go to state 804
    CATCH           shift and go to state 806

    catches                        shift and go to state 802
    catchClause                    shift and go to state 803
    expr_9                         shift and go to state 805

state 733

    (248) statement -> Identifier COLON . statement
    (248) statement -> . Identifier COLON statement
    (249) statement -> . statementExpression SEMI
    (250) statement -> . SEMI
    (251) statement -> . CONTINUE Identifier SEMI
    (252) statement -> . CONTINUE SEMI
    (253) statement -> . BREAK Identifier SEMI
    (254) statement -> . BREAK SEMI
    (255) statement -> . THROW expression SEMI
    (256) statement -> . RETURN expt_53 SEMI
    (257) statement -> . RETURN SEMI
    (258) statement -> . SYNCHRONIZED parExpression block
    (259) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (260) statement -> . TRY block expr_9
    (261) statement -> . DO statement WHILE parExpression SEMI
    (262) statement -> . WHILE parExpression statement
    (263) statement -> . FOR LPAREN forControl RPAREN statement
    (264) statement -> . IF parExpression statement ELSE statement
    (265) statement -> . IF parExpression statement
    (266) statement -> . ASSERT expression expt_51 SEMI
    (267) statement -> . ASSERT expression SEMI
    (268) statement -> . block
    (296) statementExpression -> . expression
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    Identifier      shift and go to state 745
    SEMI            shift and go to state 747
    CONTINUE        shift and go to state 681
    BREAK           shift and go to state 678
    THROW           shift and go to state 686
    RETURN          shift and go to state 660
    SYNCHRONIZED    shift and go to state 661
    SWITCH          shift and go to state 672
    TRY             shift and go to state 665
    DO              shift and go to state 679
    WHILE           shift and go to state 671
    FOR             shift and go to state 664
    IF              shift and go to state 684
    ASSERT          shift and go to state 680
    BLPAREN         shift and go to state 612
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    statement                      shift and go to state 807
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    integerLiteral                 shift and go to state 111
    statementExpression            shift and go to state 685
    andExpression                  shift and go to state 121
    expression                     shift and go to state 668
    block                          shift and go to state 669

state 734

    (167) variableModifier -> annotation .

    FINAL           reduce using rule 167 (variableModifier -> annotation .)
    AT              reduce using rule 167 (variableModifier -> annotation .)
    BOOLEAN         reduce using rule 167 (variableModifier -> annotation .)
    CHAR            reduce using rule 167 (variableModifier -> annotation .)
    BYTE            reduce using rule 167 (variableModifier -> annotation .)
    SHORT           reduce using rule 167 (variableModifier -> annotation .)
    INT             reduce using rule 167 (variableModifier -> annotation .)
    LONG            reduce using rule 167 (variableModifier -> annotation .)
    FLOAT           reduce using rule 167 (variableModifier -> annotation .)
    DOUBLE          reduce using rule 167 (variableModifier -> annotation .)
    Identifier      reduce using rule 167 (variableModifier -> annotation .)


state 735

    (535) expt_50 -> expt_50 variableModifier .

    FINAL           reduce using rule 535 (expt_50 -> expt_50 variableModifier .)
    AT              reduce using rule 535 (expt_50 -> expt_50 variableModifier .)
    BOOLEAN         reduce using rule 535 (expt_50 -> expt_50 variableModifier .)
    CHAR            reduce using rule 535 (expt_50 -> expt_50 variableModifier .)
    BYTE            reduce using rule 535 (expt_50 -> expt_50 variableModifier .)
    SHORT           reduce using rule 535 (expt_50 -> expt_50 variableModifier .)
    INT             reduce using rule 535 (expt_50 -> expt_50 variableModifier .)
    LONG            reduce using rule 535 (expt_50 -> expt_50 variableModifier .)
    FLOAT           reduce using rule 535 (expt_50 -> expt_50 variableModifier .)
    DOUBLE          reduce using rule 535 (expt_50 -> expt_50 variableModifier .)
    Identifier      reduce using rule 535 (expt_50 -> expt_50 variableModifier .)


state 736

    (166) variableModifier -> FINAL .

    FINAL           reduce using rule 166 (variableModifier -> FINAL .)
    AT              reduce using rule 166 (variableModifier -> FINAL .)
    BOOLEAN         reduce using rule 166 (variableModifier -> FINAL .)
    CHAR            reduce using rule 166 (variableModifier -> FINAL .)
    BYTE            reduce using rule 166 (variableModifier -> FINAL .)
    SHORT           reduce using rule 166 (variableModifier -> FINAL .)
    INT             reduce using rule 166 (variableModifier -> FINAL .)
    LONG            reduce using rule 166 (variableModifier -> FINAL .)
    FLOAT           reduce using rule 166 (variableModifier -> FINAL .)
    DOUBLE          reduce using rule 166 (variableModifier -> FINAL .)
    Identifier      reduce using rule 166 (variableModifier -> FINAL .)


state 737

    (243) localVariableDeclarationStatement -> localVariableDeclaration SEMI .

    BRPAREN         reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SEMI            reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    Identifier      reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CONTINUE        reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    BREAK           reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    THROW           reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    RETURN          reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SYNCHRONIZED    reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SWITCH          reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    TRY             reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    DO              reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    WHILE           reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    FOR             reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    IF              reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    ASSERT          reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    BLPAREN         reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    BOOLEAN         reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CHAR            reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    BYTE            reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SHORT           reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    INT             reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    LONG            reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    FLOAT           reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    DOUBLE          reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    PUBLIC          reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    PROTECTED       reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    PRIVATE         reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    ABSTRACT        reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    STATIC          reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    FINAL           reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    STRICTFP        reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CLASS           reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    ENUM            reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    INTERFACE       reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    AT              reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    PLUS            reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    DASH            reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    OP_INC          reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    OP_DEC          reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    EXCLAMATION     reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    TILDE           reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    VOID            reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NEW             reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SUPER           reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    THIS            reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    LPAREN          reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CharacterLiteral reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    StringLiteral   reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NULL            reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NUMBER          reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    HEX_NUMBER      reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    LONG_NUMBER     reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    LONG_HEX_NUMBER reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NON_INTEGER_1   reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NON_INTEGER_2   reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NON_INTEGER_3   reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    TRUE            reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    FALSE           reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CASE            reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    DEFAULT         reduce using rule 243 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)


state 738

    (262) statement -> WHILE parExpression . statement
    (248) statement -> . Identifier COLON statement
    (249) statement -> . statementExpression SEMI
    (250) statement -> . SEMI
    (251) statement -> . CONTINUE Identifier SEMI
    (252) statement -> . CONTINUE SEMI
    (253) statement -> . BREAK Identifier SEMI
    (254) statement -> . BREAK SEMI
    (255) statement -> . THROW expression SEMI
    (256) statement -> . RETURN expt_53 SEMI
    (257) statement -> . RETURN SEMI
    (258) statement -> . SYNCHRONIZED parExpression block
    (259) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (260) statement -> . TRY block expr_9
    (261) statement -> . DO statement WHILE parExpression SEMI
    (262) statement -> . WHILE parExpression statement
    (263) statement -> . FOR LPAREN forControl RPAREN statement
    (264) statement -> . IF parExpression statement ELSE statement
    (265) statement -> . IF parExpression statement
    (266) statement -> . ASSERT expression expt_51 SEMI
    (267) statement -> . ASSERT expression SEMI
    (268) statement -> . block
    (296) statementExpression -> . expression
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    Identifier      shift and go to state 745
    SEMI            shift and go to state 747
    CONTINUE        shift and go to state 681
    BREAK           shift and go to state 678
    THROW           shift and go to state 686
    RETURN          shift and go to state 660
    SYNCHRONIZED    shift and go to state 661
    SWITCH          shift and go to state 672
    TRY             shift and go to state 665
    DO              shift and go to state 679
    WHILE           shift and go to state 671
    FOR             shift and go to state 664
    IF              shift and go to state 684
    ASSERT          shift and go to state 680
    BLPAREN         shift and go to state 612
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    statement                      shift and go to state 808
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    integerLiteral                 shift and go to state 111
    statementExpression            shift and go to state 685
    andExpression                  shift and go to state 121
    expression                     shift and go to state 668
    block                          shift and go to state 669

state 739

    (259) statement -> SWITCH parExpression . BLPAREN switchBlockStatementGroups BRPAREN

    BLPAREN         shift and go to state 809


state 740

    (246) localVariableDeclaration -> type variableDeclarators .

    SEMI            reduce using rule 246 (localVariableDeclaration -> type variableDeclarators .)


state 741

    (239) block -> BLPAREN empty BRPAREN .

    BRPAREN         reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    SEMI            reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    STATIC          reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    PUBLIC          reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    PROTECTED       reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    PRIVATE         reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    ABSTRACT        reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    FINAL           reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    NATIVE          reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    SYNCHRONIZED    reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    TRANSIENT       reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    VOLATILE        reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    STRICTFP        reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    AT              reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    VOID            reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    Identifier      reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    LESS            reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    INTERFACE       reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    CLASS           reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    ENUM            reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    BOOLEAN         reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    CHAR            reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    BYTE            reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    SHORT           reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    INT             reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    LONG            reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    FLOAT           reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    DOUBLE          reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    BLPAREN         reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    CONTINUE        reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    BREAK           reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    THROW           reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    RETURN          reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    SWITCH          reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    TRY             reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    DO              reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    WHILE           reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    FOR             reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    IF              reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    ASSERT          reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    PLUS            reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    DASH            reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    OP_INC          reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    OP_DEC          reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    EXCLAMATION     reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    TILDE           reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    NEW             reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    SUPER           reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    THIS            reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    LPAREN          reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    CharacterLiteral reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    StringLiteral   reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    NULL            reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    NUMBER          reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    HEX_NUMBER      reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    LONG_NUMBER     reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    NON_INTEGER_1   reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    NON_INTEGER_2   reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    NON_INTEGER_3   reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    TRUE            reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    FALSE           reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    ELSE            reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    CASE            reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    DEFAULT         reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    CATCH           reduce using rule 239 (block -> BLPAREN empty BRPAREN .)
    FINALLY         reduce using rule 239 (block -> BLPAREN empty BRPAREN .)


state 742

    (245) localVariableDeclaration -> variableModifiers type . variableDeclarators
    (123) variableDeclarators -> . variableDeclarator expt_26
    (124) variableDeclarators -> . variableDeclarator empty
    (125) variableDeclarator -> . variableDeclaratorId expt_27
    (126) variableDeclarator -> . variableDeclaratorId empty
    (131) variableDeclaratorId -> . Identifier expt_24
    (132) variableDeclaratorId -> . Identifier empty

    Identifier      shift and go to state 704

    variableDeclarators            shift and go to state 810
    variableDeclaratorId           shift and go to state 565
    variableDeclarator             shift and go to state 568

state 743

    (253) statement -> BREAK Identifier . SEMI

    SEMI            shift and go to state 811


state 744

    (254) statement -> BREAK SEMI .

    BRPAREN         reduce using rule 254 (statement -> BREAK SEMI .)
    SEMI            reduce using rule 254 (statement -> BREAK SEMI .)
    Identifier      reduce using rule 254 (statement -> BREAK SEMI .)
    CONTINUE        reduce using rule 254 (statement -> BREAK SEMI .)
    BREAK           reduce using rule 254 (statement -> BREAK SEMI .)
    THROW           reduce using rule 254 (statement -> BREAK SEMI .)
    RETURN          reduce using rule 254 (statement -> BREAK SEMI .)
    SYNCHRONIZED    reduce using rule 254 (statement -> BREAK SEMI .)
    SWITCH          reduce using rule 254 (statement -> BREAK SEMI .)
    TRY             reduce using rule 254 (statement -> BREAK SEMI .)
    DO              reduce using rule 254 (statement -> BREAK SEMI .)
    WHILE           reduce using rule 254 (statement -> BREAK SEMI .)
    FOR             reduce using rule 254 (statement -> BREAK SEMI .)
    IF              reduce using rule 254 (statement -> BREAK SEMI .)
    ASSERT          reduce using rule 254 (statement -> BREAK SEMI .)
    BLPAREN         reduce using rule 254 (statement -> BREAK SEMI .)
    BOOLEAN         reduce using rule 254 (statement -> BREAK SEMI .)
    CHAR            reduce using rule 254 (statement -> BREAK SEMI .)
    BYTE            reduce using rule 254 (statement -> BREAK SEMI .)
    SHORT           reduce using rule 254 (statement -> BREAK SEMI .)
    INT             reduce using rule 254 (statement -> BREAK SEMI .)
    LONG            reduce using rule 254 (statement -> BREAK SEMI .)
    FLOAT           reduce using rule 254 (statement -> BREAK SEMI .)
    DOUBLE          reduce using rule 254 (statement -> BREAK SEMI .)
    PUBLIC          reduce using rule 254 (statement -> BREAK SEMI .)
    PROTECTED       reduce using rule 254 (statement -> BREAK SEMI .)
    PRIVATE         reduce using rule 254 (statement -> BREAK SEMI .)
    ABSTRACT        reduce using rule 254 (statement -> BREAK SEMI .)
    STATIC          reduce using rule 254 (statement -> BREAK SEMI .)
    FINAL           reduce using rule 254 (statement -> BREAK SEMI .)
    STRICTFP        reduce using rule 254 (statement -> BREAK SEMI .)
    CLASS           reduce using rule 254 (statement -> BREAK SEMI .)
    ENUM            reduce using rule 254 (statement -> BREAK SEMI .)
    INTERFACE       reduce using rule 254 (statement -> BREAK SEMI .)
    AT              reduce using rule 254 (statement -> BREAK SEMI .)
    PLUS            reduce using rule 254 (statement -> BREAK SEMI .)
    DASH            reduce using rule 254 (statement -> BREAK SEMI .)
    OP_INC          reduce using rule 254 (statement -> BREAK SEMI .)
    OP_DEC          reduce using rule 254 (statement -> BREAK SEMI .)
    EXCLAMATION     reduce using rule 254 (statement -> BREAK SEMI .)
    TILDE           reduce using rule 254 (statement -> BREAK SEMI .)
    VOID            reduce using rule 254 (statement -> BREAK SEMI .)
    NEW             reduce using rule 254 (statement -> BREAK SEMI .)
    SUPER           reduce using rule 254 (statement -> BREAK SEMI .)
    THIS            reduce using rule 254 (statement -> BREAK SEMI .)
    LPAREN          reduce using rule 254 (statement -> BREAK SEMI .)
    CharacterLiteral reduce using rule 254 (statement -> BREAK SEMI .)
    StringLiteral   reduce using rule 254 (statement -> BREAK SEMI .)
    NULL            reduce using rule 254 (statement -> BREAK SEMI .)
    NUMBER          reduce using rule 254 (statement -> BREAK SEMI .)
    HEX_NUMBER      reduce using rule 254 (statement -> BREAK SEMI .)
    LONG_NUMBER     reduce using rule 254 (statement -> BREAK SEMI .)
    LONG_HEX_NUMBER reduce using rule 254 (statement -> BREAK SEMI .)
    NON_INTEGER_1   reduce using rule 254 (statement -> BREAK SEMI .)
    NON_INTEGER_2   reduce using rule 254 (statement -> BREAK SEMI .)
    NON_INTEGER_3   reduce using rule 254 (statement -> BREAK SEMI .)
    TRUE            reduce using rule 254 (statement -> BREAK SEMI .)
    FALSE           reduce using rule 254 (statement -> BREAK SEMI .)
    CASE            reduce using rule 254 (statement -> BREAK SEMI .)
    DEFAULT         reduce using rule 254 (statement -> BREAK SEMI .)
    ELSE            reduce using rule 254 (statement -> BREAK SEMI .)


state 745

    (248) statement -> Identifier . COLON statement
    (360) primary -> Identifier . expt_42 identifierSuffix
    (361) primary -> Identifier . expt_42
    (362) primary -> Identifier . identifierSuffix
    (363) primary -> Identifier .
    (520) expt_42 -> . DOT Identifier
    (521) expt_42 -> . expt_42 DOT Identifier
    (372) identifierSuffix -> . suffixStatements DOT CLASS
    (373) identifierSuffix -> . suffixExprStatements
    (374) identifierSuffix -> . arguments
    (375) identifierSuffix -> . DOT CLASS
    (376) identifierSuffix -> . DOT explicitGenericInvocation
    (377) identifierSuffix -> . DOT THIS
    (378) identifierSuffix -> . DOT SUPER arguments
    (379) identifierSuffix -> . DOT NEW innerCreator
    (433) suffixStatements -> . FLPAREN FRPAREN
    (434) suffixStatements -> . suffixStatements FLPAREN FRPAREN
    (435) suffixExprStatements -> . FLPAREN expression FRPAREN
    (436) suffixExprStatements -> . suffixExprStatements FLPAREN expression FRPAREN
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    COLON           shift and go to state 733
    OP_INC          reduce using rule 363 (primary -> Identifier .)
    OP_DEC          reduce using rule 363 (primary -> Identifier .)
    MULT            reduce using rule 363 (primary -> Identifier .)
    SLASH           reduce using rule 363 (primary -> Identifier .)
    PERCENT         reduce using rule 363 (primary -> Identifier .)
    PLUS            reduce using rule 363 (primary -> Identifier .)
    DASH            reduce using rule 363 (primary -> Identifier .)
    OP_SHR          reduce using rule 363 (primary -> Identifier .)
    OP_SHL          reduce using rule 363 (primary -> Identifier .)
    OP_SHRR         reduce using rule 363 (primary -> Identifier .)
    OP_LE           reduce using rule 363 (primary -> Identifier .)
    OP_GE           reduce using rule 363 (primary -> Identifier .)
    LESS            reduce using rule 363 (primary -> Identifier .)
    MORE            reduce using rule 363 (primary -> Identifier .)
    INSTANCEOF      reduce using rule 363 (primary -> Identifier .)
    OP_EQ           reduce using rule 363 (primary -> Identifier .)
    OP_NE           reduce using rule 363 (primary -> Identifier .)
    AND             reduce using rule 363 (primary -> Identifier .)
    CARET           reduce using rule 363 (primary -> Identifier .)
    VERTICAL        reduce using rule 363 (primary -> Identifier .)
    OP_LAND         reduce using rule 363 (primary -> Identifier .)
    OP_LOR          reduce using rule 363 (primary -> Identifier .)
    QUES            reduce using rule 363 (primary -> Identifier .)
    EQUALS          reduce using rule 363 (primary -> Identifier .)
    ASS_ADD         reduce using rule 363 (primary -> Identifier .)
    ASS_SUB         reduce using rule 363 (primary -> Identifier .)
    ASS_MUL         reduce using rule 363 (primary -> Identifier .)
    ASS_DIV         reduce using rule 363 (primary -> Identifier .)
    ASS_AND         reduce using rule 363 (primary -> Identifier .)
    ASS_OR          reduce using rule 363 (primary -> Identifier .)
    ASS_XOR         reduce using rule 363 (primary -> Identifier .)
    ASS_MOD         reduce using rule 363 (primary -> Identifier .)
    ASS_SHL         reduce using rule 363 (primary -> Identifier .)
    ASS_SHRR        reduce using rule 363 (primary -> Identifier .)
    ASS_SHR         reduce using rule 363 (primary -> Identifier .)
    SEMI            reduce using rule 363 (primary -> Identifier .)
    DOT             shift and go to state 205
    FLPAREN         shift and go to state 201
    LPAREN          shift and go to state 204

  ! FLPAREN         [ reduce using rule 363 (primary -> Identifier .) ]
  ! DOT             [ reduce using rule 363 (primary -> Identifier .) ]

    identifierSuffix               shift and go to state 217
    suffixStatements               shift and go to state 200
    suffixExprStatements           shift and go to state 202
    arguments                      shift and go to state 203
    expt_42                        shift and go to state 219

state 746

    (261) statement -> DO statement . WHILE parExpression SEMI

    WHILE           shift and go to state 812


state 747

    (250) statement -> SEMI .

    BRPAREN         reduce using rule 250 (statement -> SEMI .)
    SEMI            reduce using rule 250 (statement -> SEMI .)
    Identifier      reduce using rule 250 (statement -> SEMI .)
    CONTINUE        reduce using rule 250 (statement -> SEMI .)
    BREAK           reduce using rule 250 (statement -> SEMI .)
    THROW           reduce using rule 250 (statement -> SEMI .)
    RETURN          reduce using rule 250 (statement -> SEMI .)
    SYNCHRONIZED    reduce using rule 250 (statement -> SEMI .)
    SWITCH          reduce using rule 250 (statement -> SEMI .)
    TRY             reduce using rule 250 (statement -> SEMI .)
    DO              reduce using rule 250 (statement -> SEMI .)
    WHILE           reduce using rule 250 (statement -> SEMI .)
    FOR             reduce using rule 250 (statement -> SEMI .)
    IF              reduce using rule 250 (statement -> SEMI .)
    ASSERT          reduce using rule 250 (statement -> SEMI .)
    BLPAREN         reduce using rule 250 (statement -> SEMI .)
    BOOLEAN         reduce using rule 250 (statement -> SEMI .)
    CHAR            reduce using rule 250 (statement -> SEMI .)
    BYTE            reduce using rule 250 (statement -> SEMI .)
    SHORT           reduce using rule 250 (statement -> SEMI .)
    INT             reduce using rule 250 (statement -> SEMI .)
    LONG            reduce using rule 250 (statement -> SEMI .)
    FLOAT           reduce using rule 250 (statement -> SEMI .)
    DOUBLE          reduce using rule 250 (statement -> SEMI .)
    PUBLIC          reduce using rule 250 (statement -> SEMI .)
    PROTECTED       reduce using rule 250 (statement -> SEMI .)
    PRIVATE         reduce using rule 250 (statement -> SEMI .)
    ABSTRACT        reduce using rule 250 (statement -> SEMI .)
    STATIC          reduce using rule 250 (statement -> SEMI .)
    FINAL           reduce using rule 250 (statement -> SEMI .)
    STRICTFP        reduce using rule 250 (statement -> SEMI .)
    CLASS           reduce using rule 250 (statement -> SEMI .)
    ENUM            reduce using rule 250 (statement -> SEMI .)
    INTERFACE       reduce using rule 250 (statement -> SEMI .)
    AT              reduce using rule 250 (statement -> SEMI .)
    PLUS            reduce using rule 250 (statement -> SEMI .)
    DASH            reduce using rule 250 (statement -> SEMI .)
    OP_INC          reduce using rule 250 (statement -> SEMI .)
    OP_DEC          reduce using rule 250 (statement -> SEMI .)
    EXCLAMATION     reduce using rule 250 (statement -> SEMI .)
    TILDE           reduce using rule 250 (statement -> SEMI .)
    VOID            reduce using rule 250 (statement -> SEMI .)
    NEW             reduce using rule 250 (statement -> SEMI .)
    SUPER           reduce using rule 250 (statement -> SEMI .)
    THIS            reduce using rule 250 (statement -> SEMI .)
    LPAREN          reduce using rule 250 (statement -> SEMI .)
    CharacterLiteral reduce using rule 250 (statement -> SEMI .)
    StringLiteral   reduce using rule 250 (statement -> SEMI .)
    NULL            reduce using rule 250 (statement -> SEMI .)
    NUMBER          reduce using rule 250 (statement -> SEMI .)
    HEX_NUMBER      reduce using rule 250 (statement -> SEMI .)
    LONG_NUMBER     reduce using rule 250 (statement -> SEMI .)
    LONG_HEX_NUMBER reduce using rule 250 (statement -> SEMI .)
    NON_INTEGER_1   reduce using rule 250 (statement -> SEMI .)
    NON_INTEGER_2   reduce using rule 250 (statement -> SEMI .)
    NON_INTEGER_3   reduce using rule 250 (statement -> SEMI .)
    TRUE            reduce using rule 250 (statement -> SEMI .)
    FALSE           reduce using rule 250 (statement -> SEMI .)
    ELSE            reduce using rule 250 (statement -> SEMI .)
    CASE            reduce using rule 250 (statement -> SEMI .)
    DEFAULT         reduce using rule 250 (statement -> SEMI .)


state 748

    (266) statement -> ASSERT expression . expt_51 SEMI
    (267) statement -> ASSERT expression . SEMI
    (536) expt_51 -> . COLON expression
    (537) expt_51 -> . empty
    (584) empty -> .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 813
    COLON           shift and go to state 814

  ! SEMI            [ reduce using rule 584 (empty -> .) ]

    expt_51                        shift and go to state 815
    empty                          shift and go to state 816

state 749

    (252) statement -> CONTINUE SEMI .

    BRPAREN         reduce using rule 252 (statement -> CONTINUE SEMI .)
    SEMI            reduce using rule 252 (statement -> CONTINUE SEMI .)
    Identifier      reduce using rule 252 (statement -> CONTINUE SEMI .)
    CONTINUE        reduce using rule 252 (statement -> CONTINUE SEMI .)
    BREAK           reduce using rule 252 (statement -> CONTINUE SEMI .)
    THROW           reduce using rule 252 (statement -> CONTINUE SEMI .)
    RETURN          reduce using rule 252 (statement -> CONTINUE SEMI .)
    SYNCHRONIZED    reduce using rule 252 (statement -> CONTINUE SEMI .)
    SWITCH          reduce using rule 252 (statement -> CONTINUE SEMI .)
    TRY             reduce using rule 252 (statement -> CONTINUE SEMI .)
    DO              reduce using rule 252 (statement -> CONTINUE SEMI .)
    WHILE           reduce using rule 252 (statement -> CONTINUE SEMI .)
    FOR             reduce using rule 252 (statement -> CONTINUE SEMI .)
    IF              reduce using rule 252 (statement -> CONTINUE SEMI .)
    ASSERT          reduce using rule 252 (statement -> CONTINUE SEMI .)
    BLPAREN         reduce using rule 252 (statement -> CONTINUE SEMI .)
    BOOLEAN         reduce using rule 252 (statement -> CONTINUE SEMI .)
    CHAR            reduce using rule 252 (statement -> CONTINUE SEMI .)
    BYTE            reduce using rule 252 (statement -> CONTINUE SEMI .)
    SHORT           reduce using rule 252 (statement -> CONTINUE SEMI .)
    INT             reduce using rule 252 (statement -> CONTINUE SEMI .)
    LONG            reduce using rule 252 (statement -> CONTINUE SEMI .)
    FLOAT           reduce using rule 252 (statement -> CONTINUE SEMI .)
    DOUBLE          reduce using rule 252 (statement -> CONTINUE SEMI .)
    PUBLIC          reduce using rule 252 (statement -> CONTINUE SEMI .)
    PROTECTED       reduce using rule 252 (statement -> CONTINUE SEMI .)
    PRIVATE         reduce using rule 252 (statement -> CONTINUE SEMI .)
    ABSTRACT        reduce using rule 252 (statement -> CONTINUE SEMI .)
    STATIC          reduce using rule 252 (statement -> CONTINUE SEMI .)
    FINAL           reduce using rule 252 (statement -> CONTINUE SEMI .)
    STRICTFP        reduce using rule 252 (statement -> CONTINUE SEMI .)
    CLASS           reduce using rule 252 (statement -> CONTINUE SEMI .)
    ENUM            reduce using rule 252 (statement -> CONTINUE SEMI .)
    INTERFACE       reduce using rule 252 (statement -> CONTINUE SEMI .)
    AT              reduce using rule 252 (statement -> CONTINUE SEMI .)
    PLUS            reduce using rule 252 (statement -> CONTINUE SEMI .)
    DASH            reduce using rule 252 (statement -> CONTINUE SEMI .)
    OP_INC          reduce using rule 252 (statement -> CONTINUE SEMI .)
    OP_DEC          reduce using rule 252 (statement -> CONTINUE SEMI .)
    EXCLAMATION     reduce using rule 252 (statement -> CONTINUE SEMI .)
    TILDE           reduce using rule 252 (statement -> CONTINUE SEMI .)
    VOID            reduce using rule 252 (statement -> CONTINUE SEMI .)
    NEW             reduce using rule 252 (statement -> CONTINUE SEMI .)
    SUPER           reduce using rule 252 (statement -> CONTINUE SEMI .)
    THIS            reduce using rule 252 (statement -> CONTINUE SEMI .)
    LPAREN          reduce using rule 252 (statement -> CONTINUE SEMI .)
    CharacterLiteral reduce using rule 252 (statement -> CONTINUE SEMI .)
    StringLiteral   reduce using rule 252 (statement -> CONTINUE SEMI .)
    NULL            reduce using rule 252 (statement -> CONTINUE SEMI .)
    NUMBER          reduce using rule 252 (statement -> CONTINUE SEMI .)
    HEX_NUMBER      reduce using rule 252 (statement -> CONTINUE SEMI .)
    LONG_NUMBER     reduce using rule 252 (statement -> CONTINUE SEMI .)
    LONG_HEX_NUMBER reduce using rule 252 (statement -> CONTINUE SEMI .)
    NON_INTEGER_1   reduce using rule 252 (statement -> CONTINUE SEMI .)
    NON_INTEGER_2   reduce using rule 252 (statement -> CONTINUE SEMI .)
    NON_INTEGER_3   reduce using rule 252 (statement -> CONTINUE SEMI .)
    TRUE            reduce using rule 252 (statement -> CONTINUE SEMI .)
    FALSE           reduce using rule 252 (statement -> CONTINUE SEMI .)
    CASE            reduce using rule 252 (statement -> CONTINUE SEMI .)
    DEFAULT         reduce using rule 252 (statement -> CONTINUE SEMI .)
    ELSE            reduce using rule 252 (statement -> CONTINUE SEMI .)


state 750

    (251) statement -> CONTINUE Identifier . SEMI

    SEMI            shift and go to state 817


state 751

    (264) statement -> IF parExpression . statement ELSE statement
    (265) statement -> IF parExpression . statement
    (248) statement -> . Identifier COLON statement
    (249) statement -> . statementExpression SEMI
    (250) statement -> . SEMI
    (251) statement -> . CONTINUE Identifier SEMI
    (252) statement -> . CONTINUE SEMI
    (253) statement -> . BREAK Identifier SEMI
    (254) statement -> . BREAK SEMI
    (255) statement -> . THROW expression SEMI
    (256) statement -> . RETURN expt_53 SEMI
    (257) statement -> . RETURN SEMI
    (258) statement -> . SYNCHRONIZED parExpression block
    (259) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (260) statement -> . TRY block expr_9
    (261) statement -> . DO statement WHILE parExpression SEMI
    (262) statement -> . WHILE parExpression statement
    (263) statement -> . FOR LPAREN forControl RPAREN statement
    (264) statement -> . IF parExpression statement ELSE statement
    (265) statement -> . IF parExpression statement
    (266) statement -> . ASSERT expression expt_51 SEMI
    (267) statement -> . ASSERT expression SEMI
    (268) statement -> . block
    (296) statementExpression -> . expression
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    Identifier      shift and go to state 745
    SEMI            shift and go to state 747
    CONTINUE        shift and go to state 681
    BREAK           shift and go to state 678
    THROW           shift and go to state 686
    RETURN          shift and go to state 660
    SYNCHRONIZED    shift and go to state 661
    SWITCH          shift and go to state 672
    TRY             shift and go to state 665
    DO              shift and go to state 679
    WHILE           shift and go to state 671
    FOR             shift and go to state 664
    IF              shift and go to state 684
    ASSERT          shift and go to state 680
    BLPAREN         shift and go to state 612
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    statement                      shift and go to state 818
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    integerLiteral                 shift and go to state 111
    statementExpression            shift and go to state 685
    andExpression                  shift and go to state 121
    expression                     shift and go to state 668
    block                          shift and go to state 669

state 752

    (249) statement -> statementExpression SEMI .

    BRPAREN         reduce using rule 249 (statement -> statementExpression SEMI .)
    SEMI            reduce using rule 249 (statement -> statementExpression SEMI .)
    Identifier      reduce using rule 249 (statement -> statementExpression SEMI .)
    CONTINUE        reduce using rule 249 (statement -> statementExpression SEMI .)
    BREAK           reduce using rule 249 (statement -> statementExpression SEMI .)
    THROW           reduce using rule 249 (statement -> statementExpression SEMI .)
    RETURN          reduce using rule 249 (statement -> statementExpression SEMI .)
    SYNCHRONIZED    reduce using rule 249 (statement -> statementExpression SEMI .)
    SWITCH          reduce using rule 249 (statement -> statementExpression SEMI .)
    TRY             reduce using rule 249 (statement -> statementExpression SEMI .)
    DO              reduce using rule 249 (statement -> statementExpression SEMI .)
    WHILE           reduce using rule 249 (statement -> statementExpression SEMI .)
    FOR             reduce using rule 249 (statement -> statementExpression SEMI .)
    IF              reduce using rule 249 (statement -> statementExpression SEMI .)
    ASSERT          reduce using rule 249 (statement -> statementExpression SEMI .)
    BLPAREN         reduce using rule 249 (statement -> statementExpression SEMI .)
    BOOLEAN         reduce using rule 249 (statement -> statementExpression SEMI .)
    CHAR            reduce using rule 249 (statement -> statementExpression SEMI .)
    BYTE            reduce using rule 249 (statement -> statementExpression SEMI .)
    SHORT           reduce using rule 249 (statement -> statementExpression SEMI .)
    INT             reduce using rule 249 (statement -> statementExpression SEMI .)
    LONG            reduce using rule 249 (statement -> statementExpression SEMI .)
    FLOAT           reduce using rule 249 (statement -> statementExpression SEMI .)
    DOUBLE          reduce using rule 249 (statement -> statementExpression SEMI .)
    PUBLIC          reduce using rule 249 (statement -> statementExpression SEMI .)
    PROTECTED       reduce using rule 249 (statement -> statementExpression SEMI .)
    PRIVATE         reduce using rule 249 (statement -> statementExpression SEMI .)
    ABSTRACT        reduce using rule 249 (statement -> statementExpression SEMI .)
    STATIC          reduce using rule 249 (statement -> statementExpression SEMI .)
    FINAL           reduce using rule 249 (statement -> statementExpression SEMI .)
    STRICTFP        reduce using rule 249 (statement -> statementExpression SEMI .)
    CLASS           reduce using rule 249 (statement -> statementExpression SEMI .)
    ENUM            reduce using rule 249 (statement -> statementExpression SEMI .)
    INTERFACE       reduce using rule 249 (statement -> statementExpression SEMI .)
    AT              reduce using rule 249 (statement -> statementExpression SEMI .)
    PLUS            reduce using rule 249 (statement -> statementExpression SEMI .)
    DASH            reduce using rule 249 (statement -> statementExpression SEMI .)
    OP_INC          reduce using rule 249 (statement -> statementExpression SEMI .)
    OP_DEC          reduce using rule 249 (statement -> statementExpression SEMI .)
    EXCLAMATION     reduce using rule 249 (statement -> statementExpression SEMI .)
    TILDE           reduce using rule 249 (statement -> statementExpression SEMI .)
    VOID            reduce using rule 249 (statement -> statementExpression SEMI .)
    NEW             reduce using rule 249 (statement -> statementExpression SEMI .)
    SUPER           reduce using rule 249 (statement -> statementExpression SEMI .)
    THIS            reduce using rule 249 (statement -> statementExpression SEMI .)
    LPAREN          reduce using rule 249 (statement -> statementExpression SEMI .)
    CharacterLiteral reduce using rule 249 (statement -> statementExpression SEMI .)
    StringLiteral   reduce using rule 249 (statement -> statementExpression SEMI .)
    NULL            reduce using rule 249 (statement -> statementExpression SEMI .)
    NUMBER          reduce using rule 249 (statement -> statementExpression SEMI .)
    HEX_NUMBER      reduce using rule 249 (statement -> statementExpression SEMI .)
    LONG_NUMBER     reduce using rule 249 (statement -> statementExpression SEMI .)
    LONG_HEX_NUMBER reduce using rule 249 (statement -> statementExpression SEMI .)
    NON_INTEGER_1   reduce using rule 249 (statement -> statementExpression SEMI .)
    NON_INTEGER_2   reduce using rule 249 (statement -> statementExpression SEMI .)
    NON_INTEGER_3   reduce using rule 249 (statement -> statementExpression SEMI .)
    TRUE            reduce using rule 249 (statement -> statementExpression SEMI .)
    FALSE           reduce using rule 249 (statement -> statementExpression SEMI .)
    CASE            reduce using rule 249 (statement -> statementExpression SEMI .)
    DEFAULT         reduce using rule 249 (statement -> statementExpression SEMI .)
    ELSE            reduce using rule 249 (statement -> statementExpression SEMI .)


state 753

    (255) statement -> THROW expression . SEMI

    SEMI            shift and go to state 819


state 754

    (111) voidMethodDeclaratorRest -> formalParameters . expt_25 expr_4
    (112) voidMethodDeclaratorRest -> formalParameters . empty expr_4
    (486) expt_25 -> . THROWS qualifiedNameList
    (487) expt_25 -> . empty
    (584) empty -> .

    THROWS          shift and go to state 759
    SEMI            reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)

    expt_25                        shift and go to state 820
    empty                          shift and go to state 821

state 755

    (87) memberDecl -> VOID Identifier voidMethodDeclaratorRest .

    BRPAREN         reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    SEMI            reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    STATIC          reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    PUBLIC          reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    PROTECTED       reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    PRIVATE         reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    ABSTRACT        reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    FINAL           reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    NATIVE          reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    TRANSIENT       reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    VOLATILE        reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    STRICTFP        reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    AT              reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    VOID            reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    Identifier      reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    LESS            reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    INTERFACE       reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    CLASS           reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    ENUM            reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    BOOLEAN         reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    CHAR            reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    BYTE            reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    SHORT           reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    INT             reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    LONG            reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    FLOAT           reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    DOUBLE          reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    BLPAREN         reduce using rule 87 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)


state 756

    (93) genericMethodOrConstructorRest -> expr_3 Identifier . methodDeclaratorRest
    (107) methodDeclaratorRest -> . formalParameters expt_24 expt_25 expr_4
    (108) methodDeclaratorRest -> . formalParameters expt_24 empty expr_4
    (109) methodDeclaratorRest -> . formalParameters empty expt_25 expr_4
    (110) methodDeclaratorRest -> . formalParameters empty empty expr_4
    (175) formalParameters -> . LPAREN expt_37 RPAREN
    (176) formalParameters -> . LPAREN empty RPAREN

    LPAREN          shift and go to state 693

    formalParameters               shift and go to state 767
    methodDeclaratorRest           shift and go to state 822

state 757

    (94) genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .

    BRPAREN         reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    SEMI            reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    STATIC          reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    PUBLIC          reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    PROTECTED       reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    PRIVATE         reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    ABSTRACT        reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    FINAL           reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    NATIVE          reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    TRANSIENT       reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    VOLATILE        reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    STRICTFP        reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    AT              reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    VOID            reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    Identifier      reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    LESS            reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    INTERFACE       reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    CLASS           reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    ENUM            reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    BOOLEAN         reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    CHAR            reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    BYTE            reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    SHORT           reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    INT             reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    LONG            reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    FLOAT           reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    DOUBLE          reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    BLPAREN         reduce using rule 94 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)


state 758

    (120) constructorDeclaratorRest -> formalParameters expt_25 . constructorBody
    (183) constructorBody -> . BLPAREN expt_39 expt_40 BRPAREN
    (184) constructorBody -> . BLPAREN expt_39 empty BRPAREN
    (185) constructorBody -> . BLPAREN empty expt_40 BRPAREN
    (186) constructorBody -> . BLPAREN empty empty BRPAREN

    BLPAREN         shift and go to state 823

    constructorBody                shift and go to state 824

state 759

    (486) expt_25 -> THROWS . qualifiedNameList
    (173) qualifiedNameList -> . qualifiedName expt_36
    (174) qualifiedNameList -> . qualifiedName empty
    (191) qualifiedName -> . Identifier expt_42
    (192) qualifiedName -> . Identifier empty

    Identifier      shift and go to state 10

    qualifiedNameList              shift and go to state 825
    qualifiedName                  shift and go to state 826

state 760

    (121) constructorDeclaratorRest -> formalParameters empty . constructorBody
    (487) expt_25 -> empty .
    (183) constructorBody -> . BLPAREN expt_39 expt_40 BRPAREN
    (184) constructorBody -> . BLPAREN expt_39 empty BRPAREN
    (185) constructorBody -> . BLPAREN empty expt_40 BRPAREN
    (186) constructorBody -> . BLPAREN empty empty BRPAREN

  ! shift/reduce conflict for BLPAREN resolved as shift
    BLPAREN         shift and go to state 823

  ! BLPAREN         [ reduce using rule 487 (expt_25 -> empty .) ]

    constructorBody                shift and go to state 827

state 761

    (175) formalParameters -> LPAREN expt_37 . RPAREN

    RPAREN          shift and go to state 828


state 762

    (510) expt_37 -> formalParameterDecls .

    RPAREN          reduce using rule 510 (expt_37 -> formalParameterDecls .)


state 763

    (178) formalParameterDecls -> type . formalParameterDeclsRest
    (179) formalParameterDeclsRest -> . OP_ARRAY variableDeclaratorId
    (180) formalParameterDeclsRest -> . variableDeclaratorId expt_38
    (181) formalParameterDeclsRest -> . variableDeclaratorId empty
    (131) variableDeclaratorId -> . Identifier expt_24
    (132) variableDeclaratorId -> . Identifier empty

    OP_ARRAY        shift and go to state 830
    Identifier      shift and go to state 704

    formalParameterDeclsRest       shift and go to state 829
    variableDeclaratorId           shift and go to state 831

state 764

    (176) formalParameters -> LPAREN empty . RPAREN
    (511) expt_37 -> empty .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 832

  ! RPAREN          [ reduce using rule 511 (expt_37 -> empty .) ]


state 765

    (177) formalParameterDecls -> variableModifiers . type formalParameterDeclsRest
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    type                           shift and go to state 833

state 766

    (96) fieldDeclaration -> variableDeclarators SEMI .

    BRPAREN         reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    SEMI            reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    STATIC          reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    PUBLIC          reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    PROTECTED       reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    PRIVATE         reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    ABSTRACT        reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    FINAL           reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    NATIVE          reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    SYNCHRONIZED    reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    TRANSIENT       reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    VOLATILE        reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    STRICTFP        reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    AT              reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    VOID            reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    Identifier      reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    LESS            reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    INTERFACE       reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    CLASS           reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    ENUM            reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    BOOLEAN         reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    CHAR            reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    BYTE            reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    SHORT           reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    INT             reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    LONG            reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    FLOAT           reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    DOUBLE          reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)
    BLPAREN         reduce using rule 96 (fieldDeclaration -> variableDeclarators SEMI .)


state 767

    (107) methodDeclaratorRest -> formalParameters . expt_24 expt_25 expr_4
    (108) methodDeclaratorRest -> formalParameters . expt_24 empty expr_4
    (109) methodDeclaratorRest -> formalParameters . empty expt_25 expr_4
    (110) methodDeclaratorRest -> formalParameters . empty empty expr_4
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN
    (584) empty -> .

    FLPAREN         shift and go to state 245
    THROWS          reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)

    expt_24                        shift and go to state 834
    empty                          shift and go to state 835

state 768

    (95) methodDeclaration -> Identifier methodDeclaratorRest .

    BRPAREN         reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    SEMI            reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    STATIC          reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    PUBLIC          reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    PROTECTED       reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    PRIVATE         reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    ABSTRACT        reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    FINAL           reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    NATIVE          reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    TRANSIENT       reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    VOLATILE        reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    STRICTFP        reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    AT              reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    VOID            reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    Identifier      reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    LESS            reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    INTERFACE       reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    CLASS           reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    ENUM            reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    BOOLEAN         reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    CHAR            reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    BYTE            reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    SHORT           reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    INT             reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    LONG            reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    FLOAT           reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    DOUBLE          reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)
    BLPAREN         reduce using rule 95 (methodDeclaration -> Identifier methodDeclaratorRest .)


state 769

    (237) defaultValue -> DEFAULT . elementValue
    (212) elementValue -> . conditionalExpression
    (213) elementValue -> . annotation
    (214) elementValue -> . elementValueArrayInitializer
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (215) elementValueArrayInitializer -> . BLPAREN expt_46 expt_30 BRPAREN
    (216) elementValueArrayInitializer -> . BLPAREN expt_46 empty BRPAREN
    (217) elementValueArrayInitializer -> . BLPAREN empty expt_30 BRPAREN
    (218) elementValueArrayInitializer -> . BLPAREN empty empty BRPAREN
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    AT              shift and go to state 8
    BLPAREN         shift and go to state 122
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 133
    unaryExpression                shift and go to state 149
    exclusiveOrExpression          shift and go to state 105
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    annotation                     shift and go to state 153
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    elementValueArrayInitializer   shift and go to state 140
    andExpression                  shift and go to state 121
    elementValue                   shift and go to state 836

state 770

    (532) expt_49 -> defaultValue .

    SEMI            reduce using rule 532 (expt_49 -> defaultValue .)


state 771

    (234) annotationMethodRest -> Identifier LPAREN RPAREN expt_49 .

    SEMI            reduce using rule 234 (annotationMethodRest -> Identifier LPAREN RPAREN expt_49 .)


state 772

    (235) annotationMethodRest -> Identifier LPAREN RPAREN empty .
    (533) expt_49 -> empty .

  ! reduce/reduce conflict for SEMI resolved using rule 235 (annotationMethodRest -> Identifier LPAREN RPAREN empty .)
    SEMI            reduce using rule 235 (annotationMethodRest -> Identifier LPAREN RPAREN empty .)

  ! SEMI            [ reduce using rule 533 (expt_49 -> empty .) ]


state 773

    (489) expt_26 -> expt_26 COMMA variableDeclarator .

    COMMA           reduce using rule 489 (expt_26 -> expt_26 COMMA variableDeclarator .)
    SEMI            reduce using rule 489 (expt_26 -> expt_26 COMMA variableDeclarator .)


state 774

    (118) voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 . SEMI

    SEMI            shift and go to state 837


state 775

    (119) voidInterfaceMethodDeclaratorRest -> formalParameters empty . SEMI
    (487) expt_25 -> empty .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 838

  ! SEMI            [ reduce using rule 487 (expt_25 -> empty .) ]


state 776

    (117) interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .

    BRPAREN         reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    SEMI            reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    PUBLIC          reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    PROTECTED       reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    PRIVATE         reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    STATIC          reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    ABSTRACT        reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    FINAL           reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    NATIVE          reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    TRANSIENT       reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    VOLATILE        reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    STRICTFP        reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    AT              reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    VOID            reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    LESS            reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    INTERFACE       reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    CLASS           reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    ENUM            reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    BOOLEAN         reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    CHAR            reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    BYTE            reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    SHORT           reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    INT             reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    LONG            reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    FLOAT           reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    DOUBLE          reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)
    Identifier      reduce using rule 117 (interfaceGenericMethodDecl -> typeParameters expr_3 Identifier interfaceMethodDeclaratorRest .)


state 777

    (129) constantDeclaratorRest -> expt_24 EQUALS . variableInitializer
    (133) variableInitializer -> . arrayInitializer
    (134) variableInitializer -> . expression
    (135) arrayInitializer -> . BLPAREN expt_31 BRPAREN
    (136) arrayInitializer -> . BLPAREN empty BRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    BLPAREN         shift and go to state 653
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    shiftExpression                shift and go to state 148
    arrayInitializer               shift and go to state 701
    primary                        shift and go to state 125
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    conditionalAndExpression       shift and go to state 99
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    variableInitializer            shift and go to state 839
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 700

state 778

    (105) interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .

    BRPAREN         reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    SEMI            reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    PUBLIC          reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    PROTECTED       reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    PRIVATE         reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    STATIC          reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    ABSTRACT        reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    FINAL           reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    NATIVE          reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    SYNCHRONIZED    reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    TRANSIENT       reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    VOLATILE        reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    STRICTFP        reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    AT              reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    VOID            reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    LESS            reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    INTERFACE       reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    CLASS           reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    ENUM            reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    BOOLEAN         reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    CHAR            reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    BYTE            reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    SHORT           reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    INT             reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    LONG            reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    FLOAT           reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    DOUBLE          reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    Identifier      reduce using rule 105 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)


state 779

    (492) expt_28 -> COMMA . constantDeclarator
    (122) constantDeclarator -> . Identifier constantDeclaratorRest

    Identifier      shift and go to state 841

    constantDeclarator             shift and go to state 840

state 780

    (128) constantDeclaratorsRest -> constantDeclaratorRest empty .

    SEMI            reduce using rule 128 (constantDeclaratorsRest -> constantDeclaratorRest empty .)


state 781

    (127) constantDeclaratorsRest -> constantDeclaratorRest expt_28 .
    (493) expt_28 -> expt_28 . COMMA constantDeclarator

    SEMI            reduce using rule 127 (constantDeclaratorsRest -> constantDeclaratorRest expt_28 .)
    COMMA           shift and go to state 842


state 782

    (113) interfaceMethodDeclaratorRest -> formalParameters expt_24 . expt_25 SEMI
    (114) interfaceMethodDeclaratorRest -> formalParameters expt_24 . empty SEMI
    (485) expt_24 -> expt_24 . FLPAREN FRPAREN
    (486) expt_25 -> . THROWS qualifiedNameList
    (487) expt_25 -> . empty
    (584) empty -> .

    FLPAREN         shift and go to state 391
    THROWS          shift and go to state 759
    SEMI            reduce using rule 584 (empty -> .)

    expt_25                        shift and go to state 843
    empty                          shift and go to state 844

state 783

    (115) interfaceMethodDeclaratorRest -> formalParameters empty . expt_25 SEMI
    (116) interfaceMethodDeclaratorRest -> formalParameters empty . empty SEMI
    (486) expt_25 -> . THROWS qualifiedNameList
    (487) expt_25 -> . empty
    (584) empty -> .

    THROWS          shift and go to state 759
    SEMI            reduce using rule 584 (empty -> .)

    expt_25                        shift and go to state 845
    empty                          shift and go to state 846

state 784

    (130) constantDeclaratorRest -> empty EQUALS . variableInitializer
    (133) variableInitializer -> . arrayInitializer
    (134) variableInitializer -> . expression
    (135) arrayInitializer -> . BLPAREN expt_31 BRPAREN
    (136) arrayInitializer -> . BLPAREN empty BRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    BLPAREN         shift and go to state 653
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    shiftExpression                shift and go to state 148
    arrayInitializer               shift and go to state 701
    primary                        shift and go to state 125
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    conditionalAndExpression       shift and go to state 99
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    variableInitializer            shift and go to state 847
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 700

state 785

    (576) expt_76 -> expt_76 FLPAREN expression . FRPAREN

    FRPAREN         shift and go to state 848


state 786

    (575) expt_76 -> FLPAREN expression FRPAREN .

    FLPAREN         reduce using rule 575 (expt_76 -> FLPAREN expression FRPAREN .)


state 787

    (494) expt_29 -> COMMA . variableInitializer
    (133) variableInitializer -> . arrayInitializer
    (134) variableInitializer -> . expression
    (135) arrayInitializer -> . BLPAREN expt_31 BRPAREN
    (136) arrayInitializer -> . BLPAREN empty BRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    BLPAREN         shift and go to state 653
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    shiftExpression                shift and go to state 148
    arrayInitializer               shift and go to state 701
    primary                        shift and go to state 125
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    conditionalAndExpression       shift and go to state 99
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    variableInitializer            shift and go to state 849
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 700

state 788

    (498) expt_31 -> variableInitializer expt_29 . expt_30
    (495) expt_29 -> expt_29 . COMMA variableInitializer
    (496) expt_30 -> . COMMA
    (497) expt_30 -> . empty
    (584) empty -> .

    COMMA           shift and go to state 850
    BRPAREN         reduce using rule 584 (empty -> .)

    expt_30                        shift and go to state 851
    empty                          shift and go to state 852

state 789

    (135) arrayInitializer -> BLPAREN expt_31 BRPAREN .

    COMMA           reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    BRPAREN         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    OP_INC          reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    OP_DEC          reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    FLPAREN         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    DOT             reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    MULT            reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    SLASH           reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    PERCENT         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    PLUS            reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    DASH            reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    OP_SHR          reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    OP_SHL          reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    OP_SHRR         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    OP_LE           reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    OP_GE           reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    LESS            reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    MORE            reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    INSTANCEOF      reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    OP_EQ           reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    OP_NE           reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    AND             reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    CARET           reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    VERTICAL        reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    OP_LAND         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    OP_LOR          reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    QUES            reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    RPAREN          reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    EQUALS          reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    ASS_ADD         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    ASS_SUB         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    ASS_MUL         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    ASS_DIV         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    ASS_AND         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    ASS_OR          reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    ASS_XOR         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    ASS_MOD         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    ASS_SHL         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    ASS_SHRR        reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    ASS_SHR         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    FRPAREN         reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    COLON           reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)
    SEMI            reduce using rule 135 (arrayInitializer -> BLPAREN expt_31 BRPAREN .)


state 790

    (136) arrayInitializer -> BLPAREN empty BRPAREN .

    COMMA           reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    BRPAREN         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    OP_INC          reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    OP_DEC          reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    FLPAREN         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    DOT             reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    MULT            reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    SLASH           reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    PERCENT         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    PLUS            reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    DASH            reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    OP_SHR          reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    OP_SHL          reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    OP_SHRR         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    OP_LE           reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    OP_GE           reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    LESS            reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    MORE            reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    INSTANCEOF      reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    OP_EQ           reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    OP_NE           reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    AND             reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    CARET           reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    VERTICAL        reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    OP_LAND         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    OP_LOR          reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    QUES            reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    RPAREN          reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    EQUALS          reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    ASS_ADD         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    ASS_SUB         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    ASS_MUL         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    ASS_DIV         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    ASS_AND         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    ASS_OR          reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    ASS_XOR         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    ASS_MOD         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    ASS_SHL         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    ASS_SHRR        reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    ASS_SHR         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    FRPAREN         reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    COLON           reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)
    SEMI            reduce using rule 136 (arrayInitializer -> BLPAREN empty BRPAREN .)


state 791

    (256) statement -> RETURN expt_53 SEMI .

    BRPAREN         reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    SEMI            reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    Identifier      reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    CONTINUE        reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    BREAK           reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    THROW           reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    RETURN          reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    SYNCHRONIZED    reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    SWITCH          reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    TRY             reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    DO              reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    WHILE           reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    FOR             reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    IF              reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    ASSERT          reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    BLPAREN         reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    BOOLEAN         reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    CHAR            reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    BYTE            reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    SHORT           reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    INT             reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    LONG            reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    FLOAT           reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    DOUBLE          reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    PUBLIC          reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    PROTECTED       reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    PRIVATE         reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    ABSTRACT        reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    STATIC          reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    FINAL           reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    STRICTFP        reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    CLASS           reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    ENUM            reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    INTERFACE       reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    AT              reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    PLUS            reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    DASH            reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    OP_INC          reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    OP_DEC          reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    EXCLAMATION     reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    TILDE           reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    VOID            reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    NEW             reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    SUPER           reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    THIS            reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    LPAREN          reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    CharacterLiteral reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    StringLiteral   reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    NULL            reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    NUMBER          reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    HEX_NUMBER      reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    LONG_NUMBER     reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    LONG_HEX_NUMBER reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    NON_INTEGER_1   reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    NON_INTEGER_2   reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    NON_INTEGER_3   reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    TRUE            reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    FALSE           reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    CASE            reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    DEFAULT         reduce using rule 256 (statement -> RETURN expt_53 SEMI .)
    ELSE            reduce using rule 256 (statement -> RETURN expt_53 SEMI .)


state 792

    (258) statement -> SYNCHRONIZED parExpression block .

    BRPAREN         reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    SEMI            reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    Identifier      reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    CONTINUE        reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    BREAK           reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    THROW           reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    RETURN          reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    SYNCHRONIZED    reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    SWITCH          reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    TRY             reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    DO              reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    WHILE           reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    FOR             reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    IF              reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    ASSERT          reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    BLPAREN         reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    BOOLEAN         reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    CHAR            reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    BYTE            reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    SHORT           reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    INT             reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    LONG            reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    FLOAT           reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    DOUBLE          reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    PUBLIC          reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    PROTECTED       reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    PRIVATE         reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    ABSTRACT        reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    STATIC          reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    FINAL           reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    STRICTFP        reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    CLASS           reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    ENUM            reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    INTERFACE       reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    AT              reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    PLUS            reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    DASH            reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    OP_INC          reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    OP_DEC          reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    EXCLAMATION     reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    TILDE           reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    VOID            reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    NEW             reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    SUPER           reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    THIS            reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    LPAREN          reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    CharacterLiteral reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    StringLiteral   reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    NULL            reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    NUMBER          reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    HEX_NUMBER      reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    LONG_NUMBER     reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    LONG_HEX_NUMBER reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    NON_INTEGER_1   reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    NON_INTEGER_2   reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    NON_INTEGER_3   reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    TRUE            reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    FALSE           reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    CASE            reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    DEFAULT         reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)
    ELSE            reduce using rule 258 (statement -> SYNCHRONIZED parExpression block .)


state 793

    (293) parExpression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 417


state 794

    (544) expt_57 -> forInit .

    SEMI            reduce using rule 544 (expt_57 -> forInit .)


state 795

    (263) statement -> FOR LPAREN forControl . RPAREN statement

    RPAREN          shift and go to state 853


state 796

    (288) forControl -> enhancedForControl .

    RPAREN          reduce using rule 288 (forControl -> enhancedForControl .)


state 797

    (280) forControl -> expt_57 . SEMI expt_58 SEMI expt_59
    (281) forControl -> expt_57 . SEMI expt_58 SEMI empty
    (282) forControl -> expt_57 . SEMI empty SEMI expt_59
    (283) forControl -> expt_57 . SEMI empty SEMI empty

    SEMI            shift and go to state 854


state 798

    (289) forInit -> localVariableDeclaration .

    SEMI            reduce using rule 289 (forInit -> localVariableDeclaration .)


state 799

    (290) forInit -> expressionList .

    SEMI            reduce using rule 290 (forInit -> expressionList .)


state 800

    (284) forControl -> empty . SEMI expt_58 SEMI expt_59
    (285) forControl -> empty . SEMI expt_58 SEMI empty
    (286) forControl -> empty . SEMI empty SEMI expt_59
    (287) forControl -> empty . SEMI empty SEMI empty
    (545) expt_57 -> empty .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 855

  ! SEMI            [ reduce using rule 545 (expt_57 -> empty .) ]


state 801

    (291) enhancedForControl -> variableModifiers . type Identifier COLON expression
    (245) localVariableDeclaration -> variableModifiers . type variableDeclarators
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    type                           shift and go to state 856
    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165

state 802

    (417) expr_9 -> catches . FINALLY block
    (418) expr_9 -> catches .

    FINALLY         shift and go to state 857
    BRPAREN         reduce using rule 418 (expr_9 -> catches .)
    SEMI            reduce using rule 418 (expr_9 -> catches .)
    Identifier      reduce using rule 418 (expr_9 -> catches .)
    CONTINUE        reduce using rule 418 (expr_9 -> catches .)
    BREAK           reduce using rule 418 (expr_9 -> catches .)
    THROW           reduce using rule 418 (expr_9 -> catches .)
    RETURN          reduce using rule 418 (expr_9 -> catches .)
    SYNCHRONIZED    reduce using rule 418 (expr_9 -> catches .)
    SWITCH          reduce using rule 418 (expr_9 -> catches .)
    TRY             reduce using rule 418 (expr_9 -> catches .)
    DO              reduce using rule 418 (expr_9 -> catches .)
    WHILE           reduce using rule 418 (expr_9 -> catches .)
    FOR             reduce using rule 418 (expr_9 -> catches .)
    IF              reduce using rule 418 (expr_9 -> catches .)
    ASSERT          reduce using rule 418 (expr_9 -> catches .)
    BLPAREN         reduce using rule 418 (expr_9 -> catches .)
    BOOLEAN         reduce using rule 418 (expr_9 -> catches .)
    CHAR            reduce using rule 418 (expr_9 -> catches .)
    BYTE            reduce using rule 418 (expr_9 -> catches .)
    SHORT           reduce using rule 418 (expr_9 -> catches .)
    INT             reduce using rule 418 (expr_9 -> catches .)
    LONG            reduce using rule 418 (expr_9 -> catches .)
    FLOAT           reduce using rule 418 (expr_9 -> catches .)
    DOUBLE          reduce using rule 418 (expr_9 -> catches .)
    PUBLIC          reduce using rule 418 (expr_9 -> catches .)
    PROTECTED       reduce using rule 418 (expr_9 -> catches .)
    PRIVATE         reduce using rule 418 (expr_9 -> catches .)
    ABSTRACT        reduce using rule 418 (expr_9 -> catches .)
    STATIC          reduce using rule 418 (expr_9 -> catches .)
    FINAL           reduce using rule 418 (expr_9 -> catches .)
    STRICTFP        reduce using rule 418 (expr_9 -> catches .)
    CLASS           reduce using rule 418 (expr_9 -> catches .)
    ENUM            reduce using rule 418 (expr_9 -> catches .)
    INTERFACE       reduce using rule 418 (expr_9 -> catches .)
    AT              reduce using rule 418 (expr_9 -> catches .)
    PLUS            reduce using rule 418 (expr_9 -> catches .)
    DASH            reduce using rule 418 (expr_9 -> catches .)
    OP_INC          reduce using rule 418 (expr_9 -> catches .)
    OP_DEC          reduce using rule 418 (expr_9 -> catches .)
    EXCLAMATION     reduce using rule 418 (expr_9 -> catches .)
    TILDE           reduce using rule 418 (expr_9 -> catches .)
    VOID            reduce using rule 418 (expr_9 -> catches .)
    NEW             reduce using rule 418 (expr_9 -> catches .)
    SUPER           reduce using rule 418 (expr_9 -> catches .)
    THIS            reduce using rule 418 (expr_9 -> catches .)
    LPAREN          reduce using rule 418 (expr_9 -> catches .)
    CharacterLiteral reduce using rule 418 (expr_9 -> catches .)
    StringLiteral   reduce using rule 418 (expr_9 -> catches .)
    NULL            reduce using rule 418 (expr_9 -> catches .)
    NUMBER          reduce using rule 418 (expr_9 -> catches .)
    HEX_NUMBER      reduce using rule 418 (expr_9 -> catches .)
    LONG_NUMBER     reduce using rule 418 (expr_9 -> catches .)
    LONG_HEX_NUMBER reduce using rule 418 (expr_9 -> catches .)
    NON_INTEGER_1   reduce using rule 418 (expr_9 -> catches .)
    NON_INTEGER_2   reduce using rule 418 (expr_9 -> catches .)
    NON_INTEGER_3   reduce using rule 418 (expr_9 -> catches .)
    TRUE            reduce using rule 418 (expr_9 -> catches .)
    FALSE           reduce using rule 418 (expr_9 -> catches .)
    ELSE            reduce using rule 418 (expr_9 -> catches .)
    CASE            reduce using rule 418 (expr_9 -> catches .)
    DEFAULT         reduce using rule 418 (expr_9 -> catches .)


state 803

    (269) catches -> catchClause . expt_55
    (270) catches -> catchClause . empty
    (540) expt_55 -> . catchClause
    (541) expt_55 -> . expt_55 catchClause
    (584) empty -> .
    (271) catchClause -> . CATCH LPAREN formalParameter RPAREN block

    FINALLY         reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)
    Identifier      reduce using rule 584 (empty -> .)
    CONTINUE        reduce using rule 584 (empty -> .)
    BREAK           reduce using rule 584 (empty -> .)
    THROW           reduce using rule 584 (empty -> .)
    RETURN          reduce using rule 584 (empty -> .)
    SYNCHRONIZED    reduce using rule 584 (empty -> .)
    SWITCH          reduce using rule 584 (empty -> .)
    TRY             reduce using rule 584 (empty -> .)
    DO              reduce using rule 584 (empty -> .)
    WHILE           reduce using rule 584 (empty -> .)
    FOR             reduce using rule 584 (empty -> .)
    IF              reduce using rule 584 (empty -> .)
    ASSERT          reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)
    BOOLEAN         reduce using rule 584 (empty -> .)
    CHAR            reduce using rule 584 (empty -> .)
    BYTE            reduce using rule 584 (empty -> .)
    SHORT           reduce using rule 584 (empty -> .)
    INT             reduce using rule 584 (empty -> .)
    LONG            reduce using rule 584 (empty -> .)
    FLOAT           reduce using rule 584 (empty -> .)
    DOUBLE          reduce using rule 584 (empty -> .)
    PUBLIC          reduce using rule 584 (empty -> .)
    PROTECTED       reduce using rule 584 (empty -> .)
    PRIVATE         reduce using rule 584 (empty -> .)
    ABSTRACT        reduce using rule 584 (empty -> .)
    STATIC          reduce using rule 584 (empty -> .)
    FINAL           reduce using rule 584 (empty -> .)
    STRICTFP        reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    AT              reduce using rule 584 (empty -> .)
    PLUS            reduce using rule 584 (empty -> .)
    DASH            reduce using rule 584 (empty -> .)
    OP_INC          reduce using rule 584 (empty -> .)
    OP_DEC          reduce using rule 584 (empty -> .)
    EXCLAMATION     reduce using rule 584 (empty -> .)
    TILDE           reduce using rule 584 (empty -> .)
    VOID            reduce using rule 584 (empty -> .)
    NEW             reduce using rule 584 (empty -> .)
    SUPER           reduce using rule 584 (empty -> .)
    THIS            reduce using rule 584 (empty -> .)
    LPAREN          reduce using rule 584 (empty -> .)
    CharacterLiteral reduce using rule 584 (empty -> .)
    StringLiteral   reduce using rule 584 (empty -> .)
    NULL            reduce using rule 584 (empty -> .)
    NUMBER          reduce using rule 584 (empty -> .)
    HEX_NUMBER      reduce using rule 584 (empty -> .)
    LONG_NUMBER     reduce using rule 584 (empty -> .)
    LONG_HEX_NUMBER reduce using rule 584 (empty -> .)
    NON_INTEGER_1   reduce using rule 584 (empty -> .)
    NON_INTEGER_2   reduce using rule 584 (empty -> .)
    NON_INTEGER_3   reduce using rule 584 (empty -> .)
    TRUE            reduce using rule 584 (empty -> .)
    FALSE           reduce using rule 584 (empty -> .)
    ELSE            reduce using rule 584 (empty -> .)
    CASE            reduce using rule 584 (empty -> .)
    DEFAULT         reduce using rule 584 (empty -> .)
    CATCH           shift and go to state 806

    catchClause                    shift and go to state 858
    empty                          shift and go to state 859
    expt_55                        shift and go to state 860

state 804

    (419) expr_9 -> FINALLY . block
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN

    BLPAREN         shift and go to state 612

    block                          shift and go to state 861

state 805

    (260) statement -> TRY block expr_9 .

    BRPAREN         reduce using rule 260 (statement -> TRY block expr_9 .)
    SEMI            reduce using rule 260 (statement -> TRY block expr_9 .)
    Identifier      reduce using rule 260 (statement -> TRY block expr_9 .)
    CONTINUE        reduce using rule 260 (statement -> TRY block expr_9 .)
    BREAK           reduce using rule 260 (statement -> TRY block expr_9 .)
    THROW           reduce using rule 260 (statement -> TRY block expr_9 .)
    RETURN          reduce using rule 260 (statement -> TRY block expr_9 .)
    SYNCHRONIZED    reduce using rule 260 (statement -> TRY block expr_9 .)
    SWITCH          reduce using rule 260 (statement -> TRY block expr_9 .)
    TRY             reduce using rule 260 (statement -> TRY block expr_9 .)
    DO              reduce using rule 260 (statement -> TRY block expr_9 .)
    WHILE           reduce using rule 260 (statement -> TRY block expr_9 .)
    FOR             reduce using rule 260 (statement -> TRY block expr_9 .)
    IF              reduce using rule 260 (statement -> TRY block expr_9 .)
    ASSERT          reduce using rule 260 (statement -> TRY block expr_9 .)
    BLPAREN         reduce using rule 260 (statement -> TRY block expr_9 .)
    BOOLEAN         reduce using rule 260 (statement -> TRY block expr_9 .)
    CHAR            reduce using rule 260 (statement -> TRY block expr_9 .)
    BYTE            reduce using rule 260 (statement -> TRY block expr_9 .)
    SHORT           reduce using rule 260 (statement -> TRY block expr_9 .)
    INT             reduce using rule 260 (statement -> TRY block expr_9 .)
    LONG            reduce using rule 260 (statement -> TRY block expr_9 .)
    FLOAT           reduce using rule 260 (statement -> TRY block expr_9 .)
    DOUBLE          reduce using rule 260 (statement -> TRY block expr_9 .)
    PUBLIC          reduce using rule 260 (statement -> TRY block expr_9 .)
    PROTECTED       reduce using rule 260 (statement -> TRY block expr_9 .)
    PRIVATE         reduce using rule 260 (statement -> TRY block expr_9 .)
    ABSTRACT        reduce using rule 260 (statement -> TRY block expr_9 .)
    STATIC          reduce using rule 260 (statement -> TRY block expr_9 .)
    FINAL           reduce using rule 260 (statement -> TRY block expr_9 .)
    STRICTFP        reduce using rule 260 (statement -> TRY block expr_9 .)
    CLASS           reduce using rule 260 (statement -> TRY block expr_9 .)
    ENUM            reduce using rule 260 (statement -> TRY block expr_9 .)
    INTERFACE       reduce using rule 260 (statement -> TRY block expr_9 .)
    AT              reduce using rule 260 (statement -> TRY block expr_9 .)
    PLUS            reduce using rule 260 (statement -> TRY block expr_9 .)
    DASH            reduce using rule 260 (statement -> TRY block expr_9 .)
    OP_INC          reduce using rule 260 (statement -> TRY block expr_9 .)
    OP_DEC          reduce using rule 260 (statement -> TRY block expr_9 .)
    EXCLAMATION     reduce using rule 260 (statement -> TRY block expr_9 .)
    TILDE           reduce using rule 260 (statement -> TRY block expr_9 .)
    VOID            reduce using rule 260 (statement -> TRY block expr_9 .)
    NEW             reduce using rule 260 (statement -> TRY block expr_9 .)
    SUPER           reduce using rule 260 (statement -> TRY block expr_9 .)
    THIS            reduce using rule 260 (statement -> TRY block expr_9 .)
    LPAREN          reduce using rule 260 (statement -> TRY block expr_9 .)
    CharacterLiteral reduce using rule 260 (statement -> TRY block expr_9 .)
    StringLiteral   reduce using rule 260 (statement -> TRY block expr_9 .)
    NULL            reduce using rule 260 (statement -> TRY block expr_9 .)
    NUMBER          reduce using rule 260 (statement -> TRY block expr_9 .)
    HEX_NUMBER      reduce using rule 260 (statement -> TRY block expr_9 .)
    LONG_NUMBER     reduce using rule 260 (statement -> TRY block expr_9 .)
    LONG_HEX_NUMBER reduce using rule 260 (statement -> TRY block expr_9 .)
    NON_INTEGER_1   reduce using rule 260 (statement -> TRY block expr_9 .)
    NON_INTEGER_2   reduce using rule 260 (statement -> TRY block expr_9 .)
    NON_INTEGER_3   reduce using rule 260 (statement -> TRY block expr_9 .)
    TRUE            reduce using rule 260 (statement -> TRY block expr_9 .)
    FALSE           reduce using rule 260 (statement -> TRY block expr_9 .)
    CASE            reduce using rule 260 (statement -> TRY block expr_9 .)
    DEFAULT         reduce using rule 260 (statement -> TRY block expr_9 .)
    ELSE            reduce using rule 260 (statement -> TRY block expr_9 .)


state 806

    (271) catchClause -> CATCH . LPAREN formalParameter RPAREN block

    LPAREN          shift and go to state 862


state 807

    (248) statement -> Identifier COLON statement .

    BRPAREN         reduce using rule 248 (statement -> Identifier COLON statement .)
    SEMI            reduce using rule 248 (statement -> Identifier COLON statement .)
    Identifier      reduce using rule 248 (statement -> Identifier COLON statement .)
    CONTINUE        reduce using rule 248 (statement -> Identifier COLON statement .)
    BREAK           reduce using rule 248 (statement -> Identifier COLON statement .)
    THROW           reduce using rule 248 (statement -> Identifier COLON statement .)
    RETURN          reduce using rule 248 (statement -> Identifier COLON statement .)
    SYNCHRONIZED    reduce using rule 248 (statement -> Identifier COLON statement .)
    SWITCH          reduce using rule 248 (statement -> Identifier COLON statement .)
    TRY             reduce using rule 248 (statement -> Identifier COLON statement .)
    DO              reduce using rule 248 (statement -> Identifier COLON statement .)
    WHILE           reduce using rule 248 (statement -> Identifier COLON statement .)
    FOR             reduce using rule 248 (statement -> Identifier COLON statement .)
    IF              reduce using rule 248 (statement -> Identifier COLON statement .)
    ASSERT          reduce using rule 248 (statement -> Identifier COLON statement .)
    BLPAREN         reduce using rule 248 (statement -> Identifier COLON statement .)
    BOOLEAN         reduce using rule 248 (statement -> Identifier COLON statement .)
    CHAR            reduce using rule 248 (statement -> Identifier COLON statement .)
    BYTE            reduce using rule 248 (statement -> Identifier COLON statement .)
    SHORT           reduce using rule 248 (statement -> Identifier COLON statement .)
    INT             reduce using rule 248 (statement -> Identifier COLON statement .)
    LONG            reduce using rule 248 (statement -> Identifier COLON statement .)
    FLOAT           reduce using rule 248 (statement -> Identifier COLON statement .)
    DOUBLE          reduce using rule 248 (statement -> Identifier COLON statement .)
    PUBLIC          reduce using rule 248 (statement -> Identifier COLON statement .)
    PROTECTED       reduce using rule 248 (statement -> Identifier COLON statement .)
    PRIVATE         reduce using rule 248 (statement -> Identifier COLON statement .)
    ABSTRACT        reduce using rule 248 (statement -> Identifier COLON statement .)
    STATIC          reduce using rule 248 (statement -> Identifier COLON statement .)
    FINAL           reduce using rule 248 (statement -> Identifier COLON statement .)
    STRICTFP        reduce using rule 248 (statement -> Identifier COLON statement .)
    CLASS           reduce using rule 248 (statement -> Identifier COLON statement .)
    ENUM            reduce using rule 248 (statement -> Identifier COLON statement .)
    INTERFACE       reduce using rule 248 (statement -> Identifier COLON statement .)
    AT              reduce using rule 248 (statement -> Identifier COLON statement .)
    PLUS            reduce using rule 248 (statement -> Identifier COLON statement .)
    DASH            reduce using rule 248 (statement -> Identifier COLON statement .)
    OP_INC          reduce using rule 248 (statement -> Identifier COLON statement .)
    OP_DEC          reduce using rule 248 (statement -> Identifier COLON statement .)
    EXCLAMATION     reduce using rule 248 (statement -> Identifier COLON statement .)
    TILDE           reduce using rule 248 (statement -> Identifier COLON statement .)
    VOID            reduce using rule 248 (statement -> Identifier COLON statement .)
    NEW             reduce using rule 248 (statement -> Identifier COLON statement .)
    SUPER           reduce using rule 248 (statement -> Identifier COLON statement .)
    THIS            reduce using rule 248 (statement -> Identifier COLON statement .)
    LPAREN          reduce using rule 248 (statement -> Identifier COLON statement .)
    CharacterLiteral reduce using rule 248 (statement -> Identifier COLON statement .)
    StringLiteral   reduce using rule 248 (statement -> Identifier COLON statement .)
    NULL            reduce using rule 248 (statement -> Identifier COLON statement .)
    NUMBER          reduce using rule 248 (statement -> Identifier COLON statement .)
    HEX_NUMBER      reduce using rule 248 (statement -> Identifier COLON statement .)
    LONG_NUMBER     reduce using rule 248 (statement -> Identifier COLON statement .)
    LONG_HEX_NUMBER reduce using rule 248 (statement -> Identifier COLON statement .)
    NON_INTEGER_1   reduce using rule 248 (statement -> Identifier COLON statement .)
    NON_INTEGER_2   reduce using rule 248 (statement -> Identifier COLON statement .)
    NON_INTEGER_3   reduce using rule 248 (statement -> Identifier COLON statement .)
    TRUE            reduce using rule 248 (statement -> Identifier COLON statement .)
    FALSE           reduce using rule 248 (statement -> Identifier COLON statement .)
    CASE            reduce using rule 248 (statement -> Identifier COLON statement .)
    DEFAULT         reduce using rule 248 (statement -> Identifier COLON statement .)
    ELSE            reduce using rule 248 (statement -> Identifier COLON statement .)


state 808

    (262) statement -> WHILE parExpression statement .

    BRPAREN         reduce using rule 262 (statement -> WHILE parExpression statement .)
    SEMI            reduce using rule 262 (statement -> WHILE parExpression statement .)
    Identifier      reduce using rule 262 (statement -> WHILE parExpression statement .)
    CONTINUE        reduce using rule 262 (statement -> WHILE parExpression statement .)
    BREAK           reduce using rule 262 (statement -> WHILE parExpression statement .)
    THROW           reduce using rule 262 (statement -> WHILE parExpression statement .)
    RETURN          reduce using rule 262 (statement -> WHILE parExpression statement .)
    SYNCHRONIZED    reduce using rule 262 (statement -> WHILE parExpression statement .)
    SWITCH          reduce using rule 262 (statement -> WHILE parExpression statement .)
    TRY             reduce using rule 262 (statement -> WHILE parExpression statement .)
    DO              reduce using rule 262 (statement -> WHILE parExpression statement .)
    WHILE           reduce using rule 262 (statement -> WHILE parExpression statement .)
    FOR             reduce using rule 262 (statement -> WHILE parExpression statement .)
    IF              reduce using rule 262 (statement -> WHILE parExpression statement .)
    ASSERT          reduce using rule 262 (statement -> WHILE parExpression statement .)
    BLPAREN         reduce using rule 262 (statement -> WHILE parExpression statement .)
    BOOLEAN         reduce using rule 262 (statement -> WHILE parExpression statement .)
    CHAR            reduce using rule 262 (statement -> WHILE parExpression statement .)
    BYTE            reduce using rule 262 (statement -> WHILE parExpression statement .)
    SHORT           reduce using rule 262 (statement -> WHILE parExpression statement .)
    INT             reduce using rule 262 (statement -> WHILE parExpression statement .)
    LONG            reduce using rule 262 (statement -> WHILE parExpression statement .)
    FLOAT           reduce using rule 262 (statement -> WHILE parExpression statement .)
    DOUBLE          reduce using rule 262 (statement -> WHILE parExpression statement .)
    PUBLIC          reduce using rule 262 (statement -> WHILE parExpression statement .)
    PROTECTED       reduce using rule 262 (statement -> WHILE parExpression statement .)
    PRIVATE         reduce using rule 262 (statement -> WHILE parExpression statement .)
    ABSTRACT        reduce using rule 262 (statement -> WHILE parExpression statement .)
    STATIC          reduce using rule 262 (statement -> WHILE parExpression statement .)
    FINAL           reduce using rule 262 (statement -> WHILE parExpression statement .)
    STRICTFP        reduce using rule 262 (statement -> WHILE parExpression statement .)
    CLASS           reduce using rule 262 (statement -> WHILE parExpression statement .)
    ENUM            reduce using rule 262 (statement -> WHILE parExpression statement .)
    INTERFACE       reduce using rule 262 (statement -> WHILE parExpression statement .)
    AT              reduce using rule 262 (statement -> WHILE parExpression statement .)
    PLUS            reduce using rule 262 (statement -> WHILE parExpression statement .)
    DASH            reduce using rule 262 (statement -> WHILE parExpression statement .)
    OP_INC          reduce using rule 262 (statement -> WHILE parExpression statement .)
    OP_DEC          reduce using rule 262 (statement -> WHILE parExpression statement .)
    EXCLAMATION     reduce using rule 262 (statement -> WHILE parExpression statement .)
    TILDE           reduce using rule 262 (statement -> WHILE parExpression statement .)
    VOID            reduce using rule 262 (statement -> WHILE parExpression statement .)
    NEW             reduce using rule 262 (statement -> WHILE parExpression statement .)
    SUPER           reduce using rule 262 (statement -> WHILE parExpression statement .)
    THIS            reduce using rule 262 (statement -> WHILE parExpression statement .)
    LPAREN          reduce using rule 262 (statement -> WHILE parExpression statement .)
    CharacterLiteral reduce using rule 262 (statement -> WHILE parExpression statement .)
    StringLiteral   reduce using rule 262 (statement -> WHILE parExpression statement .)
    NULL            reduce using rule 262 (statement -> WHILE parExpression statement .)
    NUMBER          reduce using rule 262 (statement -> WHILE parExpression statement .)
    HEX_NUMBER      reduce using rule 262 (statement -> WHILE parExpression statement .)
    LONG_NUMBER     reduce using rule 262 (statement -> WHILE parExpression statement .)
    LONG_HEX_NUMBER reduce using rule 262 (statement -> WHILE parExpression statement .)
    NON_INTEGER_1   reduce using rule 262 (statement -> WHILE parExpression statement .)
    NON_INTEGER_2   reduce using rule 262 (statement -> WHILE parExpression statement .)
    NON_INTEGER_3   reduce using rule 262 (statement -> WHILE parExpression statement .)
    TRUE            reduce using rule 262 (statement -> WHILE parExpression statement .)
    FALSE           reduce using rule 262 (statement -> WHILE parExpression statement .)
    CASE            reduce using rule 262 (statement -> WHILE parExpression statement .)
    DEFAULT         reduce using rule 262 (statement -> WHILE parExpression statement .)
    ELSE            reduce using rule 262 (statement -> WHILE parExpression statement .)


state 809

    (259) statement -> SWITCH parExpression BLPAREN . switchBlockStatementGroups BRPAREN
    (273) switchBlockStatementGroups -> . expt_56
    (274) switchBlockStatementGroups -> . empty
    (542) expt_56 -> . switchBlockStatementGroup
    (543) expt_56 -> . expt_56 switchBlockStatementGroup
    (584) empty -> .
    (275) switchBlockStatementGroup -> . expr_10 expt_40
    (276) switchBlockStatementGroup -> . expr_10 empty
    (420) expr_10 -> . switchLabel
    (421) expr_10 -> . expr_10 switchLabel
    (277) switchLabel -> . CASE constantExpression COLON
    (278) switchLabel -> . CASE enumConstantName COLON
    (279) switchLabel -> . DEFAULT COLON

    BRPAREN         reduce using rule 584 (empty -> .)
    CASE            shift and go to state 864
    DEFAULT         shift and go to state 866

    switchBlockStatementGroups     shift and go to state 863
    switchLabel                    shift and go to state 865
    expt_56                        shift and go to state 869
    switchBlockStatementGroup      shift and go to state 868
    expr_10                        shift and go to state 867
    empty                          shift and go to state 870

state 810

    (245) localVariableDeclaration -> variableModifiers type variableDeclarators .

    SEMI            reduce using rule 245 (localVariableDeclaration -> variableModifiers type variableDeclarators .)


state 811

    (253) statement -> BREAK Identifier SEMI .

    BRPAREN         reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    SEMI            reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    Identifier      reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    CONTINUE        reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    BREAK           reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    THROW           reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    RETURN          reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    SYNCHRONIZED    reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    SWITCH          reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    TRY             reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    DO              reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    WHILE           reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    FOR             reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    IF              reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    ASSERT          reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    BLPAREN         reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    BOOLEAN         reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    CHAR            reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    BYTE            reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    SHORT           reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    INT             reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    LONG            reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    FLOAT           reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    DOUBLE          reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    PUBLIC          reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    PROTECTED       reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    PRIVATE         reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    ABSTRACT        reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    STATIC          reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    FINAL           reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    STRICTFP        reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    CLASS           reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    ENUM            reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    INTERFACE       reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    AT              reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    PLUS            reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    DASH            reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    OP_INC          reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    OP_DEC          reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    EXCLAMATION     reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    TILDE           reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    VOID            reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    NEW             reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    SUPER           reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    THIS            reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    LPAREN          reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    CharacterLiteral reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    StringLiteral   reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    NULL            reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    NUMBER          reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    HEX_NUMBER      reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    LONG_NUMBER     reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    LONG_HEX_NUMBER reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    NON_INTEGER_1   reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    NON_INTEGER_2   reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    NON_INTEGER_3   reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    TRUE            reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    FALSE           reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    CASE            reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    DEFAULT         reduce using rule 253 (statement -> BREAK Identifier SEMI .)
    ELSE            reduce using rule 253 (statement -> BREAK Identifier SEMI .)


state 812

    (261) statement -> DO statement WHILE . parExpression SEMI
    (293) parExpression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 728

    parExpression                  shift and go to state 871

state 813

    (267) statement -> ASSERT expression SEMI .

    BRPAREN         reduce using rule 267 (statement -> ASSERT expression SEMI .)
    SEMI            reduce using rule 267 (statement -> ASSERT expression SEMI .)
    Identifier      reduce using rule 267 (statement -> ASSERT expression SEMI .)
    CONTINUE        reduce using rule 267 (statement -> ASSERT expression SEMI .)
    BREAK           reduce using rule 267 (statement -> ASSERT expression SEMI .)
    THROW           reduce using rule 267 (statement -> ASSERT expression SEMI .)
    RETURN          reduce using rule 267 (statement -> ASSERT expression SEMI .)
    SYNCHRONIZED    reduce using rule 267 (statement -> ASSERT expression SEMI .)
    SWITCH          reduce using rule 267 (statement -> ASSERT expression SEMI .)
    TRY             reduce using rule 267 (statement -> ASSERT expression SEMI .)
    DO              reduce using rule 267 (statement -> ASSERT expression SEMI .)
    WHILE           reduce using rule 267 (statement -> ASSERT expression SEMI .)
    FOR             reduce using rule 267 (statement -> ASSERT expression SEMI .)
    IF              reduce using rule 267 (statement -> ASSERT expression SEMI .)
    ASSERT          reduce using rule 267 (statement -> ASSERT expression SEMI .)
    BLPAREN         reduce using rule 267 (statement -> ASSERT expression SEMI .)
    BOOLEAN         reduce using rule 267 (statement -> ASSERT expression SEMI .)
    CHAR            reduce using rule 267 (statement -> ASSERT expression SEMI .)
    BYTE            reduce using rule 267 (statement -> ASSERT expression SEMI .)
    SHORT           reduce using rule 267 (statement -> ASSERT expression SEMI .)
    INT             reduce using rule 267 (statement -> ASSERT expression SEMI .)
    LONG            reduce using rule 267 (statement -> ASSERT expression SEMI .)
    FLOAT           reduce using rule 267 (statement -> ASSERT expression SEMI .)
    DOUBLE          reduce using rule 267 (statement -> ASSERT expression SEMI .)
    PUBLIC          reduce using rule 267 (statement -> ASSERT expression SEMI .)
    PROTECTED       reduce using rule 267 (statement -> ASSERT expression SEMI .)
    PRIVATE         reduce using rule 267 (statement -> ASSERT expression SEMI .)
    ABSTRACT        reduce using rule 267 (statement -> ASSERT expression SEMI .)
    STATIC          reduce using rule 267 (statement -> ASSERT expression SEMI .)
    FINAL           reduce using rule 267 (statement -> ASSERT expression SEMI .)
    STRICTFP        reduce using rule 267 (statement -> ASSERT expression SEMI .)
    CLASS           reduce using rule 267 (statement -> ASSERT expression SEMI .)
    ENUM            reduce using rule 267 (statement -> ASSERT expression SEMI .)
    INTERFACE       reduce using rule 267 (statement -> ASSERT expression SEMI .)
    AT              reduce using rule 267 (statement -> ASSERT expression SEMI .)
    PLUS            reduce using rule 267 (statement -> ASSERT expression SEMI .)
    DASH            reduce using rule 267 (statement -> ASSERT expression SEMI .)
    OP_INC          reduce using rule 267 (statement -> ASSERT expression SEMI .)
    OP_DEC          reduce using rule 267 (statement -> ASSERT expression SEMI .)
    EXCLAMATION     reduce using rule 267 (statement -> ASSERT expression SEMI .)
    TILDE           reduce using rule 267 (statement -> ASSERT expression SEMI .)
    VOID            reduce using rule 267 (statement -> ASSERT expression SEMI .)
    NEW             reduce using rule 267 (statement -> ASSERT expression SEMI .)
    SUPER           reduce using rule 267 (statement -> ASSERT expression SEMI .)
    THIS            reduce using rule 267 (statement -> ASSERT expression SEMI .)
    LPAREN          reduce using rule 267 (statement -> ASSERT expression SEMI .)
    CharacterLiteral reduce using rule 267 (statement -> ASSERT expression SEMI .)
    StringLiteral   reduce using rule 267 (statement -> ASSERT expression SEMI .)
    NULL            reduce using rule 267 (statement -> ASSERT expression SEMI .)
    NUMBER          reduce using rule 267 (statement -> ASSERT expression SEMI .)
    HEX_NUMBER      reduce using rule 267 (statement -> ASSERT expression SEMI .)
    LONG_NUMBER     reduce using rule 267 (statement -> ASSERT expression SEMI .)
    LONG_HEX_NUMBER reduce using rule 267 (statement -> ASSERT expression SEMI .)
    NON_INTEGER_1   reduce using rule 267 (statement -> ASSERT expression SEMI .)
    NON_INTEGER_2   reduce using rule 267 (statement -> ASSERT expression SEMI .)
    NON_INTEGER_3   reduce using rule 267 (statement -> ASSERT expression SEMI .)
    TRUE            reduce using rule 267 (statement -> ASSERT expression SEMI .)
    FALSE           reduce using rule 267 (statement -> ASSERT expression SEMI .)
    CASE            reduce using rule 267 (statement -> ASSERT expression SEMI .)
    DEFAULT         reduce using rule 267 (statement -> ASSERT expression SEMI .)
    ELSE            reduce using rule 267 (statement -> ASSERT expression SEMI .)


state 814

    (536) expt_51 -> COLON . expression
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 872

state 815

    (266) statement -> ASSERT expression expt_51 . SEMI

    SEMI            shift and go to state 873


state 816

    (537) expt_51 -> empty .

    SEMI            reduce using rule 537 (expt_51 -> empty .)


state 817

    (251) statement -> CONTINUE Identifier SEMI .

    BRPAREN         reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    SEMI            reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    Identifier      reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    CONTINUE        reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    BREAK           reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    THROW           reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    RETURN          reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    SYNCHRONIZED    reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    SWITCH          reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    TRY             reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    DO              reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    WHILE           reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    FOR             reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    IF              reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    ASSERT          reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    BLPAREN         reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    BOOLEAN         reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    CHAR            reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    BYTE            reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    SHORT           reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    INT             reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    LONG            reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    FLOAT           reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    DOUBLE          reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    PUBLIC          reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    PROTECTED       reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    PRIVATE         reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    ABSTRACT        reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    STATIC          reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    FINAL           reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    STRICTFP        reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    CLASS           reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    ENUM            reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    INTERFACE       reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    AT              reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    PLUS            reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    DASH            reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    OP_INC          reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    OP_DEC          reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    EXCLAMATION     reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    TILDE           reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    VOID            reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    NEW             reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    SUPER           reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    THIS            reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    LPAREN          reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    CharacterLiteral reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    StringLiteral   reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    NULL            reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    NUMBER          reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    HEX_NUMBER      reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    LONG_NUMBER     reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    LONG_HEX_NUMBER reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    NON_INTEGER_1   reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    NON_INTEGER_2   reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    NON_INTEGER_3   reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    TRUE            reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    FALSE           reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    CASE            reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    DEFAULT         reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)
    ELSE            reduce using rule 251 (statement -> CONTINUE Identifier SEMI .)


state 818

    (264) statement -> IF parExpression statement . ELSE statement
    (265) statement -> IF parExpression statement .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 874
    BRPAREN         reduce using rule 265 (statement -> IF parExpression statement .)
    SEMI            reduce using rule 265 (statement -> IF parExpression statement .)
    Identifier      reduce using rule 265 (statement -> IF parExpression statement .)
    CONTINUE        reduce using rule 265 (statement -> IF parExpression statement .)
    BREAK           reduce using rule 265 (statement -> IF parExpression statement .)
    THROW           reduce using rule 265 (statement -> IF parExpression statement .)
    RETURN          reduce using rule 265 (statement -> IF parExpression statement .)
    SYNCHRONIZED    reduce using rule 265 (statement -> IF parExpression statement .)
    SWITCH          reduce using rule 265 (statement -> IF parExpression statement .)
    TRY             reduce using rule 265 (statement -> IF parExpression statement .)
    DO              reduce using rule 265 (statement -> IF parExpression statement .)
    WHILE           reduce using rule 265 (statement -> IF parExpression statement .)
    FOR             reduce using rule 265 (statement -> IF parExpression statement .)
    IF              reduce using rule 265 (statement -> IF parExpression statement .)
    ASSERT          reduce using rule 265 (statement -> IF parExpression statement .)
    BLPAREN         reduce using rule 265 (statement -> IF parExpression statement .)
    BOOLEAN         reduce using rule 265 (statement -> IF parExpression statement .)
    CHAR            reduce using rule 265 (statement -> IF parExpression statement .)
    BYTE            reduce using rule 265 (statement -> IF parExpression statement .)
    SHORT           reduce using rule 265 (statement -> IF parExpression statement .)
    INT             reduce using rule 265 (statement -> IF parExpression statement .)
    LONG            reduce using rule 265 (statement -> IF parExpression statement .)
    FLOAT           reduce using rule 265 (statement -> IF parExpression statement .)
    DOUBLE          reduce using rule 265 (statement -> IF parExpression statement .)
    PUBLIC          reduce using rule 265 (statement -> IF parExpression statement .)
    PROTECTED       reduce using rule 265 (statement -> IF parExpression statement .)
    PRIVATE         reduce using rule 265 (statement -> IF parExpression statement .)
    ABSTRACT        reduce using rule 265 (statement -> IF parExpression statement .)
    STATIC          reduce using rule 265 (statement -> IF parExpression statement .)
    FINAL           reduce using rule 265 (statement -> IF parExpression statement .)
    STRICTFP        reduce using rule 265 (statement -> IF parExpression statement .)
    CLASS           reduce using rule 265 (statement -> IF parExpression statement .)
    ENUM            reduce using rule 265 (statement -> IF parExpression statement .)
    INTERFACE       reduce using rule 265 (statement -> IF parExpression statement .)
    AT              reduce using rule 265 (statement -> IF parExpression statement .)
    PLUS            reduce using rule 265 (statement -> IF parExpression statement .)
    DASH            reduce using rule 265 (statement -> IF parExpression statement .)
    OP_INC          reduce using rule 265 (statement -> IF parExpression statement .)
    OP_DEC          reduce using rule 265 (statement -> IF parExpression statement .)
    EXCLAMATION     reduce using rule 265 (statement -> IF parExpression statement .)
    TILDE           reduce using rule 265 (statement -> IF parExpression statement .)
    VOID            reduce using rule 265 (statement -> IF parExpression statement .)
    NEW             reduce using rule 265 (statement -> IF parExpression statement .)
    SUPER           reduce using rule 265 (statement -> IF parExpression statement .)
    THIS            reduce using rule 265 (statement -> IF parExpression statement .)
    LPAREN          reduce using rule 265 (statement -> IF parExpression statement .)
    CharacterLiteral reduce using rule 265 (statement -> IF parExpression statement .)
    StringLiteral   reduce using rule 265 (statement -> IF parExpression statement .)
    NULL            reduce using rule 265 (statement -> IF parExpression statement .)
    NUMBER          reduce using rule 265 (statement -> IF parExpression statement .)
    HEX_NUMBER      reduce using rule 265 (statement -> IF parExpression statement .)
    LONG_NUMBER     reduce using rule 265 (statement -> IF parExpression statement .)
    LONG_HEX_NUMBER reduce using rule 265 (statement -> IF parExpression statement .)
    NON_INTEGER_1   reduce using rule 265 (statement -> IF parExpression statement .)
    NON_INTEGER_2   reduce using rule 265 (statement -> IF parExpression statement .)
    NON_INTEGER_3   reduce using rule 265 (statement -> IF parExpression statement .)
    TRUE            reduce using rule 265 (statement -> IF parExpression statement .)
    FALSE           reduce using rule 265 (statement -> IF parExpression statement .)
    CASE            reduce using rule 265 (statement -> IF parExpression statement .)
    DEFAULT         reduce using rule 265 (statement -> IF parExpression statement .)

  ! ELSE            [ reduce using rule 265 (statement -> IF parExpression statement .) ]


state 819

    (255) statement -> THROW expression SEMI .

    BRPAREN         reduce using rule 255 (statement -> THROW expression SEMI .)
    SEMI            reduce using rule 255 (statement -> THROW expression SEMI .)
    Identifier      reduce using rule 255 (statement -> THROW expression SEMI .)
    CONTINUE        reduce using rule 255 (statement -> THROW expression SEMI .)
    BREAK           reduce using rule 255 (statement -> THROW expression SEMI .)
    THROW           reduce using rule 255 (statement -> THROW expression SEMI .)
    RETURN          reduce using rule 255 (statement -> THROW expression SEMI .)
    SYNCHRONIZED    reduce using rule 255 (statement -> THROW expression SEMI .)
    SWITCH          reduce using rule 255 (statement -> THROW expression SEMI .)
    TRY             reduce using rule 255 (statement -> THROW expression SEMI .)
    DO              reduce using rule 255 (statement -> THROW expression SEMI .)
    WHILE           reduce using rule 255 (statement -> THROW expression SEMI .)
    FOR             reduce using rule 255 (statement -> THROW expression SEMI .)
    IF              reduce using rule 255 (statement -> THROW expression SEMI .)
    ASSERT          reduce using rule 255 (statement -> THROW expression SEMI .)
    BLPAREN         reduce using rule 255 (statement -> THROW expression SEMI .)
    BOOLEAN         reduce using rule 255 (statement -> THROW expression SEMI .)
    CHAR            reduce using rule 255 (statement -> THROW expression SEMI .)
    BYTE            reduce using rule 255 (statement -> THROW expression SEMI .)
    SHORT           reduce using rule 255 (statement -> THROW expression SEMI .)
    INT             reduce using rule 255 (statement -> THROW expression SEMI .)
    LONG            reduce using rule 255 (statement -> THROW expression SEMI .)
    FLOAT           reduce using rule 255 (statement -> THROW expression SEMI .)
    DOUBLE          reduce using rule 255 (statement -> THROW expression SEMI .)
    PUBLIC          reduce using rule 255 (statement -> THROW expression SEMI .)
    PROTECTED       reduce using rule 255 (statement -> THROW expression SEMI .)
    PRIVATE         reduce using rule 255 (statement -> THROW expression SEMI .)
    ABSTRACT        reduce using rule 255 (statement -> THROW expression SEMI .)
    STATIC          reduce using rule 255 (statement -> THROW expression SEMI .)
    FINAL           reduce using rule 255 (statement -> THROW expression SEMI .)
    STRICTFP        reduce using rule 255 (statement -> THROW expression SEMI .)
    CLASS           reduce using rule 255 (statement -> THROW expression SEMI .)
    ENUM            reduce using rule 255 (statement -> THROW expression SEMI .)
    INTERFACE       reduce using rule 255 (statement -> THROW expression SEMI .)
    AT              reduce using rule 255 (statement -> THROW expression SEMI .)
    PLUS            reduce using rule 255 (statement -> THROW expression SEMI .)
    DASH            reduce using rule 255 (statement -> THROW expression SEMI .)
    OP_INC          reduce using rule 255 (statement -> THROW expression SEMI .)
    OP_DEC          reduce using rule 255 (statement -> THROW expression SEMI .)
    EXCLAMATION     reduce using rule 255 (statement -> THROW expression SEMI .)
    TILDE           reduce using rule 255 (statement -> THROW expression SEMI .)
    VOID            reduce using rule 255 (statement -> THROW expression SEMI .)
    NEW             reduce using rule 255 (statement -> THROW expression SEMI .)
    SUPER           reduce using rule 255 (statement -> THROW expression SEMI .)
    THIS            reduce using rule 255 (statement -> THROW expression SEMI .)
    LPAREN          reduce using rule 255 (statement -> THROW expression SEMI .)
    CharacterLiteral reduce using rule 255 (statement -> THROW expression SEMI .)
    StringLiteral   reduce using rule 255 (statement -> THROW expression SEMI .)
    NULL            reduce using rule 255 (statement -> THROW expression SEMI .)
    NUMBER          reduce using rule 255 (statement -> THROW expression SEMI .)
    HEX_NUMBER      reduce using rule 255 (statement -> THROW expression SEMI .)
    LONG_NUMBER     reduce using rule 255 (statement -> THROW expression SEMI .)
    LONG_HEX_NUMBER reduce using rule 255 (statement -> THROW expression SEMI .)
    NON_INTEGER_1   reduce using rule 255 (statement -> THROW expression SEMI .)
    NON_INTEGER_2   reduce using rule 255 (statement -> THROW expression SEMI .)
    NON_INTEGER_3   reduce using rule 255 (statement -> THROW expression SEMI .)
    TRUE            reduce using rule 255 (statement -> THROW expression SEMI .)
    FALSE           reduce using rule 255 (statement -> THROW expression SEMI .)
    CASE            reduce using rule 255 (statement -> THROW expression SEMI .)
    DEFAULT         reduce using rule 255 (statement -> THROW expression SEMI .)
    ELSE            reduce using rule 255 (statement -> THROW expression SEMI .)


state 820

    (111) voidMethodDeclaratorRest -> formalParameters expt_25 . expr_4
    (411) expr_4 -> . methodBody
    (412) expr_4 -> . SEMI
    (182) methodBody -> . block
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN

    SEMI            shift and go to state 876
    BLPAREN         shift and go to state 612

    methodBody                     shift and go to state 875
    expr_4                         shift and go to state 877
    block                          shift and go to state 878

state 821

    (112) voidMethodDeclaratorRest -> formalParameters empty . expr_4
    (487) expt_25 -> empty .
    (411) expr_4 -> . methodBody
    (412) expr_4 -> . SEMI
    (182) methodBody -> . block
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN

  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for BLPAREN resolved as shift
    SEMI            shift and go to state 876
    BLPAREN         shift and go to state 612

  ! SEMI            [ reduce using rule 487 (expt_25 -> empty .) ]
  ! BLPAREN         [ reduce using rule 487 (expt_25 -> empty .) ]

    methodBody                     shift and go to state 875
    expr_4                         shift and go to state 879
    block                          shift and go to state 878

state 822

    (93) genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .

    BRPAREN         reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    SEMI            reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    STATIC          reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    PUBLIC          reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    PROTECTED       reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    PRIVATE         reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    ABSTRACT        reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    FINAL           reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    NATIVE          reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    TRANSIENT       reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    VOLATILE        reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    STRICTFP        reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    AT              reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    VOID            reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    Identifier      reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    LESS            reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    INTERFACE       reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    CLASS           reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    ENUM            reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    BOOLEAN         reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    CHAR            reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    BYTE            reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    SHORT           reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    INT             reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    LONG            reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    FLOAT           reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    DOUBLE          reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)
    BLPAREN         reduce using rule 93 (genericMethodOrConstructorRest -> expr_3 Identifier methodDeclaratorRest .)


state 823

    (183) constructorBody -> BLPAREN . expt_39 expt_40 BRPAREN
    (184) constructorBody -> BLPAREN . expt_39 empty BRPAREN
    (185) constructorBody -> BLPAREN . empty expt_40 BRPAREN
    (186) constructorBody -> BLPAREN . empty empty BRPAREN
    (514) expt_39 -> . explicitConstructorInvocation
    (515) expt_39 -> . empty
    (584) empty -> .
    (187) explicitConstructorInvocation -> . primary DOT expt_41 SUPER arguments SEMI
    (188) explicitConstructorInvocation -> . primary DOT empty SUPER arguments SEMI
    (189) explicitConstructorInvocation -> . expt_41 expr_6 arguments SEMI
    (190) explicitConstructorInvocation -> . empty expr_6 arguments SEMI
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (518) expt_41 -> . nonWildcardTypeArguments
    (519) expt_41 -> . empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (391) nonWildcardTypeArguments -> . LESS typeList MORE
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for Identifier resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for SUPER resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for CharacterLiteral resolved as shift
  ! shift/reduce conflict for StringLiteral resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for HEX_NUMBER resolved as shift
  ! shift/reduce conflict for LONG_NUMBER resolved as shift
  ! shift/reduce conflict for LONG_HEX_NUMBER resolved as shift
  ! shift/reduce conflict for NON_INTEGER_1 resolved as shift
  ! shift/reduce conflict for NON_INTEGER_2 resolved as shift
  ! shift/reduce conflict for NON_INTEGER_3 resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    SEMI            reduce using rule 584 (empty -> .)
    CONTINUE        reduce using rule 584 (empty -> .)
    BREAK           reduce using rule 584 (empty -> .)
    THROW           reduce using rule 584 (empty -> .)
    RETURN          reduce using rule 584 (empty -> .)
    SYNCHRONIZED    reduce using rule 584 (empty -> .)
    SWITCH          reduce using rule 584 (empty -> .)
    TRY             reduce using rule 584 (empty -> .)
    DO              reduce using rule 584 (empty -> .)
    WHILE           reduce using rule 584 (empty -> .)
    FOR             reduce using rule 584 (empty -> .)
    IF              reduce using rule 584 (empty -> .)
    ASSERT          reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)
    PUBLIC          reduce using rule 584 (empty -> .)
    PROTECTED       reduce using rule 584 (empty -> .)
    PRIVATE         reduce using rule 584 (empty -> .)
    ABSTRACT        reduce using rule 584 (empty -> .)
    STATIC          reduce using rule 584 (empty -> .)
    FINAL           reduce using rule 584 (empty -> .)
    STRICTFP        reduce using rule 584 (empty -> .)
    CLASS           reduce using rule 584 (empty -> .)
    ENUM            reduce using rule 584 (empty -> .)
    INTERFACE       reduce using rule 584 (empty -> .)
    AT              reduce using rule 584 (empty -> .)
    PLUS            reduce using rule 584 (empty -> .)
    DASH            reduce using rule 584 (empty -> .)
    OP_INC          reduce using rule 584 (empty -> .)
    OP_DEC          reduce using rule 584 (empty -> .)
    EXCLAMATION     reduce using rule 584 (empty -> .)
    TILDE           reduce using rule 584 (empty -> .)
    BRPAREN         reduce using rule 584 (empty -> .)
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    LPAREN          shift and go to state 728
    LESS            shift and go to state 238
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

  ! THIS            [ reduce using rule 584 (empty -> .) ]
  ! SUPER           [ reduce using rule 584 (empty -> .) ]
  ! Identifier      [ reduce using rule 584 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 584 (empty -> .) ]
  ! CHAR            [ reduce using rule 584 (empty -> .) ]
  ! BYTE            [ reduce using rule 584 (empty -> .) ]
  ! SHORT           [ reduce using rule 584 (empty -> .) ]
  ! INT             [ reduce using rule 584 (empty -> .) ]
  ! LONG            [ reduce using rule 584 (empty -> .) ]
  ! FLOAT           [ reduce using rule 584 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 584 (empty -> .) ]
  ! VOID            [ reduce using rule 584 (empty -> .) ]
  ! NEW             [ reduce using rule 584 (empty -> .) ]
  ! LPAREN          [ reduce using rule 584 (empty -> .) ]
  ! CharacterLiteral [ reduce using rule 584 (empty -> .) ]
  ! StringLiteral   [ reduce using rule 584 (empty -> .) ]
  ! NULL            [ reduce using rule 584 (empty -> .) ]
  ! NUMBER          [ reduce using rule 584 (empty -> .) ]
  ! HEX_NUMBER      [ reduce using rule 584 (empty -> .) ]
  ! LONG_NUMBER     [ reduce using rule 584 (empty -> .) ]
  ! LONG_HEX_NUMBER [ reduce using rule 584 (empty -> .) ]
  ! NON_INTEGER_1   [ reduce using rule 584 (empty -> .) ]
  ! NON_INTEGER_2   [ reduce using rule 584 (empty -> .) ]
  ! NON_INTEGER_3   [ reduce using rule 584 (empty -> .) ]
  ! TRUE            [ reduce using rule 584 (empty -> .) ]
  ! FALSE           [ reduce using rule 584 (empty -> .) ]

    expt_39                        shift and go to state 880
    primary                        shift and go to state 881
    nonWildcardTypeArguments       shift and go to state 486
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    expt_41                        shift and go to state 882
    integerLiteral                 shift and go to state 111
    empty                          shift and go to state 883
    FloatingPointLiteral           shift and go to state 134
    parExpression                  shift and go to state 150
    primitiveType                  shift and go to state 138
    explicitConstructorInvocation  shift and go to state 884

state 824

    (120) constructorDeclaratorRest -> formalParameters expt_25 constructorBody .

    BRPAREN         reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    SEMI            reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    STATIC          reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    PUBLIC          reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    PROTECTED       reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    PRIVATE         reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    ABSTRACT        reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    FINAL           reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    NATIVE          reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    SYNCHRONIZED    reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    TRANSIENT       reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    VOLATILE        reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    STRICTFP        reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    AT              reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    VOID            reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    Identifier      reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    LESS            reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    INTERFACE       reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    CLASS           reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    ENUM            reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    BOOLEAN         reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    CHAR            reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    BYTE            reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    SHORT           reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    INT             reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    LONG            reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    FLOAT           reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    DOUBLE          reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)
    BLPAREN         reduce using rule 120 (constructorDeclaratorRest -> formalParameters expt_25 constructorBody .)


state 825

    (486) expt_25 -> THROWS qualifiedNameList .

    SEMI            reduce using rule 486 (expt_25 -> THROWS qualifiedNameList .)
    BLPAREN         reduce using rule 486 (expt_25 -> THROWS qualifiedNameList .)


state 826

    (173) qualifiedNameList -> qualifiedName . expt_36
    (174) qualifiedNameList -> qualifiedName . empty
    (508) expt_36 -> . COMMA qualifiedName
    (509) expt_36 -> . expt_36 COMMA qualifiedName
    (584) empty -> .

    COMMA           shift and go to state 885
    BLPAREN         reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)

    expt_36                        shift and go to state 886
    empty                          shift and go to state 887

state 827

    (121) constructorDeclaratorRest -> formalParameters empty constructorBody .

    BRPAREN         reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    SEMI            reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    STATIC          reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    PUBLIC          reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    PROTECTED       reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    PRIVATE         reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    ABSTRACT        reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    FINAL           reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    NATIVE          reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    SYNCHRONIZED    reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    TRANSIENT       reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    VOLATILE        reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    STRICTFP        reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    AT              reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    VOID            reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    Identifier      reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    LESS            reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    INTERFACE       reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    CLASS           reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    ENUM            reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    BOOLEAN         reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    CHAR            reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    BYTE            reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    SHORT           reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    INT             reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    LONG            reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    FLOAT           reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    DOUBLE          reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)
    BLPAREN         reduce using rule 121 (constructorDeclaratorRest -> formalParameters empty constructorBody .)


state 828

    (175) formalParameters -> LPAREN expt_37 RPAREN .

    THROWS          reduce using rule 175 (formalParameters -> LPAREN expt_37 RPAREN .)
    BLPAREN         reduce using rule 175 (formalParameters -> LPAREN expt_37 RPAREN .)
    SEMI            reduce using rule 175 (formalParameters -> LPAREN expt_37 RPAREN .)
    FLPAREN         reduce using rule 175 (formalParameters -> LPAREN expt_37 RPAREN .)


state 829

    (178) formalParameterDecls -> type formalParameterDeclsRest .

    RPAREN          reduce using rule 178 (formalParameterDecls -> type formalParameterDeclsRest .)


state 830

    (179) formalParameterDeclsRest -> OP_ARRAY . variableDeclaratorId
    (131) variableDeclaratorId -> . Identifier expt_24
    (132) variableDeclaratorId -> . Identifier empty

    Identifier      shift and go to state 704

    variableDeclaratorId           shift and go to state 888

state 831

    (180) formalParameterDeclsRest -> variableDeclaratorId . expt_38
    (181) formalParameterDeclsRest -> variableDeclaratorId . empty
    (512) expt_38 -> . COMMA formalParameterDecls
    (513) expt_38 -> . empty
    (584) empty -> .

    COMMA           shift and go to state 889
    RPAREN          reduce using rule 584 (empty -> .)

    expt_38                        shift and go to state 890
    empty                          shift and go to state 891

state 832

    (176) formalParameters -> LPAREN empty RPAREN .

    THROWS          reduce using rule 176 (formalParameters -> LPAREN empty RPAREN .)
    BLPAREN         reduce using rule 176 (formalParameters -> LPAREN empty RPAREN .)
    SEMI            reduce using rule 176 (formalParameters -> LPAREN empty RPAREN .)
    FLPAREN         reduce using rule 176 (formalParameters -> LPAREN empty RPAREN .)


state 833

    (177) formalParameterDecls -> variableModifiers type . formalParameterDeclsRest
    (179) formalParameterDeclsRest -> . OP_ARRAY variableDeclaratorId
    (180) formalParameterDeclsRest -> . variableDeclaratorId expt_38
    (181) formalParameterDeclsRest -> . variableDeclaratorId empty
    (131) variableDeclaratorId -> . Identifier expt_24
    (132) variableDeclaratorId -> . Identifier empty

    OP_ARRAY        shift and go to state 830
    Identifier      shift and go to state 704

    formalParameterDeclsRest       shift and go to state 892
    variableDeclaratorId           shift and go to state 831

state 834

    (107) methodDeclaratorRest -> formalParameters expt_24 . expt_25 expr_4
    (108) methodDeclaratorRest -> formalParameters expt_24 . empty expr_4
    (485) expt_24 -> expt_24 . FLPAREN FRPAREN
    (486) expt_25 -> . THROWS qualifiedNameList
    (487) expt_25 -> . empty
    (584) empty -> .

    FLPAREN         shift and go to state 391
    THROWS          shift and go to state 759
    SEMI            reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)

    expt_25                        shift and go to state 893
    empty                          shift and go to state 894

state 835

    (109) methodDeclaratorRest -> formalParameters empty . expt_25 expr_4
    (110) methodDeclaratorRest -> formalParameters empty . empty expr_4
    (486) expt_25 -> . THROWS qualifiedNameList
    (487) expt_25 -> . empty
    (584) empty -> .

    THROWS          shift and go to state 759
    SEMI            reduce using rule 584 (empty -> .)
    BLPAREN         reduce using rule 584 (empty -> .)

    expt_25                        shift and go to state 895
    empty                          shift and go to state 896

state 836

    (237) defaultValue -> DEFAULT elementValue .

    SEMI            reduce using rule 237 (defaultValue -> DEFAULT elementValue .)


state 837

    (118) voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .

    BRPAREN         reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    SEMI            reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    PUBLIC          reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    PROTECTED       reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    PRIVATE         reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    STATIC          reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    ABSTRACT        reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    FINAL           reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    NATIVE          reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    SYNCHRONIZED    reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    TRANSIENT       reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    VOLATILE        reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    STRICTFP        reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    AT              reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    VOID            reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    LESS            reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    INTERFACE       reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    CLASS           reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    ENUM            reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    BOOLEAN         reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    CHAR            reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    BYTE            reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    SHORT           reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    INT             reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    LONG            reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    FLOAT           reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    DOUBLE          reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)
    Identifier      reduce using rule 118 (voidInterfaceMethodDeclaratorRest -> formalParameters expt_25 SEMI .)


state 838

    (119) voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .

    BRPAREN         reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    SEMI            reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    PUBLIC          reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    PROTECTED       reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    PRIVATE         reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    STATIC          reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    ABSTRACT        reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    FINAL           reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    NATIVE          reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    SYNCHRONIZED    reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    TRANSIENT       reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    VOLATILE        reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    STRICTFP        reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    AT              reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    VOID            reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    LESS            reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    INTERFACE       reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    CLASS           reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    ENUM            reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    BOOLEAN         reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    CHAR            reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    BYTE            reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    SHORT           reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    INT             reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    LONG            reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    FLOAT           reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    DOUBLE          reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)
    Identifier      reduce using rule 119 (voidInterfaceMethodDeclaratorRest -> formalParameters empty SEMI .)


state 839

    (129) constantDeclaratorRest -> expt_24 EQUALS variableInitializer .

    COMMA           reduce using rule 129 (constantDeclaratorRest -> expt_24 EQUALS variableInitializer .)
    SEMI            reduce using rule 129 (constantDeclaratorRest -> expt_24 EQUALS variableInitializer .)


state 840

    (492) expt_28 -> COMMA constantDeclarator .

    COMMA           reduce using rule 492 (expt_28 -> COMMA constantDeclarator .)
    SEMI            reduce using rule 492 (expt_28 -> COMMA constantDeclarator .)


state 841

    (122) constantDeclarator -> Identifier . constantDeclaratorRest
    (129) constantDeclaratorRest -> . expt_24 EQUALS variableInitializer
    (130) constantDeclaratorRest -> . empty EQUALS variableInitializer
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN
    (584) empty -> .

    FLPAREN         shift and go to state 245
    EQUALS          reduce using rule 584 (empty -> .)

    constantDeclaratorRest         shift and go to state 897
    expt_24                        shift and go to state 710
    empty                          shift and go to state 716

state 842

    (493) expt_28 -> expt_28 COMMA . constantDeclarator
    (122) constantDeclarator -> . Identifier constantDeclaratorRest

    Identifier      shift and go to state 841

    constantDeclarator             shift and go to state 898

state 843

    (113) interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 . SEMI

    SEMI            shift and go to state 899


state 844

    (114) interfaceMethodDeclaratorRest -> formalParameters expt_24 empty . SEMI
    (487) expt_25 -> empty .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 900

  ! SEMI            [ reduce using rule 487 (expt_25 -> empty .) ]


state 845

    (115) interfaceMethodDeclaratorRest -> formalParameters empty expt_25 . SEMI

    SEMI            shift and go to state 901


state 846

    (116) interfaceMethodDeclaratorRest -> formalParameters empty empty . SEMI
    (487) expt_25 -> empty .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 902

  ! SEMI            [ reduce using rule 487 (expt_25 -> empty .) ]


state 847

    (130) constantDeclaratorRest -> empty EQUALS variableInitializer .

    COMMA           reduce using rule 130 (constantDeclaratorRest -> empty EQUALS variableInitializer .)
    SEMI            reduce using rule 130 (constantDeclaratorRest -> empty EQUALS variableInitializer .)


state 848

    (576) expt_76 -> expt_76 FLPAREN expression FRPAREN .

    FLPAREN         reduce using rule 576 (expt_76 -> expt_76 FLPAREN expression FRPAREN .)


state 849

    (494) expt_29 -> COMMA variableInitializer .

    COMMA           reduce using rule 494 (expt_29 -> COMMA variableInitializer .)
    BRPAREN         reduce using rule 494 (expt_29 -> COMMA variableInitializer .)


state 850

    (495) expt_29 -> expt_29 COMMA . variableInitializer
    (496) expt_30 -> COMMA .
    (133) variableInitializer -> . arrayInitializer
    (134) variableInitializer -> . expression
    (135) arrayInitializer -> . BLPAREN expt_31 BRPAREN
    (136) arrayInitializer -> . BLPAREN empty BRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    BRPAREN         reduce using rule 496 (expt_30 -> COMMA .)
    BLPAREN         shift and go to state 653
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    shiftExpression                shift and go to state 148
    arrayInitializer               shift and go to state 701
    primary                        shift and go to state 125
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    conditionalAndExpression       shift and go to state 99
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    variableInitializer            shift and go to state 903
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 700

state 851

    (498) expt_31 -> variableInitializer expt_29 expt_30 .

    BRPAREN         reduce using rule 498 (expt_31 -> variableInitializer expt_29 expt_30 .)


state 852

    (497) expt_30 -> empty .

    BRPAREN         reduce using rule 497 (expt_30 -> empty .)


state 853

    (263) statement -> FOR LPAREN forControl RPAREN . statement
    (248) statement -> . Identifier COLON statement
    (249) statement -> . statementExpression SEMI
    (250) statement -> . SEMI
    (251) statement -> . CONTINUE Identifier SEMI
    (252) statement -> . CONTINUE SEMI
    (253) statement -> . BREAK Identifier SEMI
    (254) statement -> . BREAK SEMI
    (255) statement -> . THROW expression SEMI
    (256) statement -> . RETURN expt_53 SEMI
    (257) statement -> . RETURN SEMI
    (258) statement -> . SYNCHRONIZED parExpression block
    (259) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (260) statement -> . TRY block expr_9
    (261) statement -> . DO statement WHILE parExpression SEMI
    (262) statement -> . WHILE parExpression statement
    (263) statement -> . FOR LPAREN forControl RPAREN statement
    (264) statement -> . IF parExpression statement ELSE statement
    (265) statement -> . IF parExpression statement
    (266) statement -> . ASSERT expression expt_51 SEMI
    (267) statement -> . ASSERT expression SEMI
    (268) statement -> . block
    (296) statementExpression -> . expression
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    Identifier      shift and go to state 745
    SEMI            shift and go to state 747
    CONTINUE        shift and go to state 681
    BREAK           shift and go to state 678
    THROW           shift and go to state 686
    RETURN          shift and go to state 660
    SYNCHRONIZED    shift and go to state 661
    SWITCH          shift and go to state 672
    TRY             shift and go to state 665
    DO              shift and go to state 679
    WHILE           shift and go to state 671
    FOR             shift and go to state 664
    IF              shift and go to state 684
    ASSERT          shift and go to state 680
    BLPAREN         shift and go to state 612
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    statement                      shift and go to state 904
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    integerLiteral                 shift and go to state 111
    statementExpression            shift and go to state 685
    andExpression                  shift and go to state 121
    expression                     shift and go to state 668
    block                          shift and go to state 669

state 854

    (280) forControl -> expt_57 SEMI . expt_58 SEMI expt_59
    (281) forControl -> expt_57 SEMI . expt_58 SEMI empty
    (282) forControl -> expt_57 SEMI . empty SEMI expt_59
    (283) forControl -> expt_57 SEMI . empty SEMI empty
    (546) expt_58 -> . expression
    (547) expt_58 -> . empty
    (584) empty -> .
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    SEMI            reduce using rule 584 (empty -> .)
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    empty                          shift and go to state 907
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    expt_58                        shift and go to state 905
    andExpression                  shift and go to state 121
    expression                     shift and go to state 906

state 855

    (284) forControl -> empty SEMI . expt_58 SEMI expt_59
    (285) forControl -> empty SEMI . expt_58 SEMI empty
    (286) forControl -> empty SEMI . empty SEMI expt_59
    (287) forControl -> empty SEMI . empty SEMI empty
    (546) expt_58 -> . expression
    (547) expt_58 -> . empty
    (584) empty -> .
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    SEMI            reduce using rule 584 (empty -> .)
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    empty                          shift and go to state 909
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    expt_58                        shift and go to state 908
    andExpression                  shift and go to state 121
    expression                     shift and go to state 906

state 856

    (291) enhancedForControl -> variableModifiers type . Identifier COLON expression
    (245) localVariableDeclaration -> variableModifiers type . variableDeclarators
    (123) variableDeclarators -> . variableDeclarator expt_26
    (124) variableDeclarators -> . variableDeclarator empty
    (125) variableDeclarator -> . variableDeclaratorId expt_27
    (126) variableDeclarator -> . variableDeclaratorId empty
    (131) variableDeclaratorId -> . Identifier expt_24
    (132) variableDeclaratorId -> . Identifier empty

    Identifier      shift and go to state 910

    variableDeclarators            shift and go to state 810
    variableDeclaratorId           shift and go to state 565
    variableDeclarator             shift and go to state 568

state 857

    (417) expr_9 -> catches FINALLY . block
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN

    BLPAREN         shift and go to state 612

    block                          shift and go to state 911

state 858

    (540) expt_55 -> catchClause .

    CATCH           reduce using rule 540 (expt_55 -> catchClause .)
    FINALLY         reduce using rule 540 (expt_55 -> catchClause .)
    BRPAREN         reduce using rule 540 (expt_55 -> catchClause .)
    SEMI            reduce using rule 540 (expt_55 -> catchClause .)
    Identifier      reduce using rule 540 (expt_55 -> catchClause .)
    CONTINUE        reduce using rule 540 (expt_55 -> catchClause .)
    BREAK           reduce using rule 540 (expt_55 -> catchClause .)
    THROW           reduce using rule 540 (expt_55 -> catchClause .)
    RETURN          reduce using rule 540 (expt_55 -> catchClause .)
    SYNCHRONIZED    reduce using rule 540 (expt_55 -> catchClause .)
    SWITCH          reduce using rule 540 (expt_55 -> catchClause .)
    TRY             reduce using rule 540 (expt_55 -> catchClause .)
    DO              reduce using rule 540 (expt_55 -> catchClause .)
    WHILE           reduce using rule 540 (expt_55 -> catchClause .)
    FOR             reduce using rule 540 (expt_55 -> catchClause .)
    IF              reduce using rule 540 (expt_55 -> catchClause .)
    ASSERT          reduce using rule 540 (expt_55 -> catchClause .)
    BLPAREN         reduce using rule 540 (expt_55 -> catchClause .)
    BOOLEAN         reduce using rule 540 (expt_55 -> catchClause .)
    CHAR            reduce using rule 540 (expt_55 -> catchClause .)
    BYTE            reduce using rule 540 (expt_55 -> catchClause .)
    SHORT           reduce using rule 540 (expt_55 -> catchClause .)
    INT             reduce using rule 540 (expt_55 -> catchClause .)
    LONG            reduce using rule 540 (expt_55 -> catchClause .)
    FLOAT           reduce using rule 540 (expt_55 -> catchClause .)
    DOUBLE          reduce using rule 540 (expt_55 -> catchClause .)
    PUBLIC          reduce using rule 540 (expt_55 -> catchClause .)
    PROTECTED       reduce using rule 540 (expt_55 -> catchClause .)
    PRIVATE         reduce using rule 540 (expt_55 -> catchClause .)
    ABSTRACT        reduce using rule 540 (expt_55 -> catchClause .)
    STATIC          reduce using rule 540 (expt_55 -> catchClause .)
    FINAL           reduce using rule 540 (expt_55 -> catchClause .)
    STRICTFP        reduce using rule 540 (expt_55 -> catchClause .)
    CLASS           reduce using rule 540 (expt_55 -> catchClause .)
    ENUM            reduce using rule 540 (expt_55 -> catchClause .)
    INTERFACE       reduce using rule 540 (expt_55 -> catchClause .)
    AT              reduce using rule 540 (expt_55 -> catchClause .)
    PLUS            reduce using rule 540 (expt_55 -> catchClause .)
    DASH            reduce using rule 540 (expt_55 -> catchClause .)
    OP_INC          reduce using rule 540 (expt_55 -> catchClause .)
    OP_DEC          reduce using rule 540 (expt_55 -> catchClause .)
    EXCLAMATION     reduce using rule 540 (expt_55 -> catchClause .)
    TILDE           reduce using rule 540 (expt_55 -> catchClause .)
    VOID            reduce using rule 540 (expt_55 -> catchClause .)
    NEW             reduce using rule 540 (expt_55 -> catchClause .)
    SUPER           reduce using rule 540 (expt_55 -> catchClause .)
    THIS            reduce using rule 540 (expt_55 -> catchClause .)
    LPAREN          reduce using rule 540 (expt_55 -> catchClause .)
    CharacterLiteral reduce using rule 540 (expt_55 -> catchClause .)
    StringLiteral   reduce using rule 540 (expt_55 -> catchClause .)
    NULL            reduce using rule 540 (expt_55 -> catchClause .)
    NUMBER          reduce using rule 540 (expt_55 -> catchClause .)
    HEX_NUMBER      reduce using rule 540 (expt_55 -> catchClause .)
    LONG_NUMBER     reduce using rule 540 (expt_55 -> catchClause .)
    LONG_HEX_NUMBER reduce using rule 540 (expt_55 -> catchClause .)
    NON_INTEGER_1   reduce using rule 540 (expt_55 -> catchClause .)
    NON_INTEGER_2   reduce using rule 540 (expt_55 -> catchClause .)
    NON_INTEGER_3   reduce using rule 540 (expt_55 -> catchClause .)
    TRUE            reduce using rule 540 (expt_55 -> catchClause .)
    FALSE           reduce using rule 540 (expt_55 -> catchClause .)
    ELSE            reduce using rule 540 (expt_55 -> catchClause .)
    CASE            reduce using rule 540 (expt_55 -> catchClause .)
    DEFAULT         reduce using rule 540 (expt_55 -> catchClause .)


state 859

    (270) catches -> catchClause empty .

    FINALLY         reduce using rule 270 (catches -> catchClause empty .)
    BRPAREN         reduce using rule 270 (catches -> catchClause empty .)
    SEMI            reduce using rule 270 (catches -> catchClause empty .)
    Identifier      reduce using rule 270 (catches -> catchClause empty .)
    CONTINUE        reduce using rule 270 (catches -> catchClause empty .)
    BREAK           reduce using rule 270 (catches -> catchClause empty .)
    THROW           reduce using rule 270 (catches -> catchClause empty .)
    RETURN          reduce using rule 270 (catches -> catchClause empty .)
    SYNCHRONIZED    reduce using rule 270 (catches -> catchClause empty .)
    SWITCH          reduce using rule 270 (catches -> catchClause empty .)
    TRY             reduce using rule 270 (catches -> catchClause empty .)
    DO              reduce using rule 270 (catches -> catchClause empty .)
    WHILE           reduce using rule 270 (catches -> catchClause empty .)
    FOR             reduce using rule 270 (catches -> catchClause empty .)
    IF              reduce using rule 270 (catches -> catchClause empty .)
    ASSERT          reduce using rule 270 (catches -> catchClause empty .)
    BLPAREN         reduce using rule 270 (catches -> catchClause empty .)
    BOOLEAN         reduce using rule 270 (catches -> catchClause empty .)
    CHAR            reduce using rule 270 (catches -> catchClause empty .)
    BYTE            reduce using rule 270 (catches -> catchClause empty .)
    SHORT           reduce using rule 270 (catches -> catchClause empty .)
    INT             reduce using rule 270 (catches -> catchClause empty .)
    LONG            reduce using rule 270 (catches -> catchClause empty .)
    FLOAT           reduce using rule 270 (catches -> catchClause empty .)
    DOUBLE          reduce using rule 270 (catches -> catchClause empty .)
    PUBLIC          reduce using rule 270 (catches -> catchClause empty .)
    PROTECTED       reduce using rule 270 (catches -> catchClause empty .)
    PRIVATE         reduce using rule 270 (catches -> catchClause empty .)
    ABSTRACT        reduce using rule 270 (catches -> catchClause empty .)
    STATIC          reduce using rule 270 (catches -> catchClause empty .)
    FINAL           reduce using rule 270 (catches -> catchClause empty .)
    STRICTFP        reduce using rule 270 (catches -> catchClause empty .)
    CLASS           reduce using rule 270 (catches -> catchClause empty .)
    ENUM            reduce using rule 270 (catches -> catchClause empty .)
    INTERFACE       reduce using rule 270 (catches -> catchClause empty .)
    AT              reduce using rule 270 (catches -> catchClause empty .)
    PLUS            reduce using rule 270 (catches -> catchClause empty .)
    DASH            reduce using rule 270 (catches -> catchClause empty .)
    OP_INC          reduce using rule 270 (catches -> catchClause empty .)
    OP_DEC          reduce using rule 270 (catches -> catchClause empty .)
    EXCLAMATION     reduce using rule 270 (catches -> catchClause empty .)
    TILDE           reduce using rule 270 (catches -> catchClause empty .)
    VOID            reduce using rule 270 (catches -> catchClause empty .)
    NEW             reduce using rule 270 (catches -> catchClause empty .)
    SUPER           reduce using rule 270 (catches -> catchClause empty .)
    THIS            reduce using rule 270 (catches -> catchClause empty .)
    LPAREN          reduce using rule 270 (catches -> catchClause empty .)
    CharacterLiteral reduce using rule 270 (catches -> catchClause empty .)
    StringLiteral   reduce using rule 270 (catches -> catchClause empty .)
    NULL            reduce using rule 270 (catches -> catchClause empty .)
    NUMBER          reduce using rule 270 (catches -> catchClause empty .)
    HEX_NUMBER      reduce using rule 270 (catches -> catchClause empty .)
    LONG_NUMBER     reduce using rule 270 (catches -> catchClause empty .)
    LONG_HEX_NUMBER reduce using rule 270 (catches -> catchClause empty .)
    NON_INTEGER_1   reduce using rule 270 (catches -> catchClause empty .)
    NON_INTEGER_2   reduce using rule 270 (catches -> catchClause empty .)
    NON_INTEGER_3   reduce using rule 270 (catches -> catchClause empty .)
    TRUE            reduce using rule 270 (catches -> catchClause empty .)
    FALSE           reduce using rule 270 (catches -> catchClause empty .)
    ELSE            reduce using rule 270 (catches -> catchClause empty .)
    CASE            reduce using rule 270 (catches -> catchClause empty .)
    DEFAULT         reduce using rule 270 (catches -> catchClause empty .)


state 860

    (269) catches -> catchClause expt_55 .
    (541) expt_55 -> expt_55 . catchClause
    (271) catchClause -> . CATCH LPAREN formalParameter RPAREN block

    FINALLY         reduce using rule 269 (catches -> catchClause expt_55 .)
    BRPAREN         reduce using rule 269 (catches -> catchClause expt_55 .)
    SEMI            reduce using rule 269 (catches -> catchClause expt_55 .)
    Identifier      reduce using rule 269 (catches -> catchClause expt_55 .)
    CONTINUE        reduce using rule 269 (catches -> catchClause expt_55 .)
    BREAK           reduce using rule 269 (catches -> catchClause expt_55 .)
    THROW           reduce using rule 269 (catches -> catchClause expt_55 .)
    RETURN          reduce using rule 269 (catches -> catchClause expt_55 .)
    SYNCHRONIZED    reduce using rule 269 (catches -> catchClause expt_55 .)
    SWITCH          reduce using rule 269 (catches -> catchClause expt_55 .)
    TRY             reduce using rule 269 (catches -> catchClause expt_55 .)
    DO              reduce using rule 269 (catches -> catchClause expt_55 .)
    WHILE           reduce using rule 269 (catches -> catchClause expt_55 .)
    FOR             reduce using rule 269 (catches -> catchClause expt_55 .)
    IF              reduce using rule 269 (catches -> catchClause expt_55 .)
    ASSERT          reduce using rule 269 (catches -> catchClause expt_55 .)
    BLPAREN         reduce using rule 269 (catches -> catchClause expt_55 .)
    BOOLEAN         reduce using rule 269 (catches -> catchClause expt_55 .)
    CHAR            reduce using rule 269 (catches -> catchClause expt_55 .)
    BYTE            reduce using rule 269 (catches -> catchClause expt_55 .)
    SHORT           reduce using rule 269 (catches -> catchClause expt_55 .)
    INT             reduce using rule 269 (catches -> catchClause expt_55 .)
    LONG            reduce using rule 269 (catches -> catchClause expt_55 .)
    FLOAT           reduce using rule 269 (catches -> catchClause expt_55 .)
    DOUBLE          reduce using rule 269 (catches -> catchClause expt_55 .)
    PUBLIC          reduce using rule 269 (catches -> catchClause expt_55 .)
    PROTECTED       reduce using rule 269 (catches -> catchClause expt_55 .)
    PRIVATE         reduce using rule 269 (catches -> catchClause expt_55 .)
    ABSTRACT        reduce using rule 269 (catches -> catchClause expt_55 .)
    STATIC          reduce using rule 269 (catches -> catchClause expt_55 .)
    FINAL           reduce using rule 269 (catches -> catchClause expt_55 .)
    STRICTFP        reduce using rule 269 (catches -> catchClause expt_55 .)
    CLASS           reduce using rule 269 (catches -> catchClause expt_55 .)
    ENUM            reduce using rule 269 (catches -> catchClause expt_55 .)
    INTERFACE       reduce using rule 269 (catches -> catchClause expt_55 .)
    AT              reduce using rule 269 (catches -> catchClause expt_55 .)
    PLUS            reduce using rule 269 (catches -> catchClause expt_55 .)
    DASH            reduce using rule 269 (catches -> catchClause expt_55 .)
    OP_INC          reduce using rule 269 (catches -> catchClause expt_55 .)
    OP_DEC          reduce using rule 269 (catches -> catchClause expt_55 .)
    EXCLAMATION     reduce using rule 269 (catches -> catchClause expt_55 .)
    TILDE           reduce using rule 269 (catches -> catchClause expt_55 .)
    VOID            reduce using rule 269 (catches -> catchClause expt_55 .)
    NEW             reduce using rule 269 (catches -> catchClause expt_55 .)
    SUPER           reduce using rule 269 (catches -> catchClause expt_55 .)
    THIS            reduce using rule 269 (catches -> catchClause expt_55 .)
    LPAREN          reduce using rule 269 (catches -> catchClause expt_55 .)
    CharacterLiteral reduce using rule 269 (catches -> catchClause expt_55 .)
    StringLiteral   reduce using rule 269 (catches -> catchClause expt_55 .)
    NULL            reduce using rule 269 (catches -> catchClause expt_55 .)
    NUMBER          reduce using rule 269 (catches -> catchClause expt_55 .)
    HEX_NUMBER      reduce using rule 269 (catches -> catchClause expt_55 .)
    LONG_NUMBER     reduce using rule 269 (catches -> catchClause expt_55 .)
    LONG_HEX_NUMBER reduce using rule 269 (catches -> catchClause expt_55 .)
    NON_INTEGER_1   reduce using rule 269 (catches -> catchClause expt_55 .)
    NON_INTEGER_2   reduce using rule 269 (catches -> catchClause expt_55 .)
    NON_INTEGER_3   reduce using rule 269 (catches -> catchClause expt_55 .)
    TRUE            reduce using rule 269 (catches -> catchClause expt_55 .)
    FALSE           reduce using rule 269 (catches -> catchClause expt_55 .)
    ELSE            reduce using rule 269 (catches -> catchClause expt_55 .)
    CASE            reduce using rule 269 (catches -> catchClause expt_55 .)
    DEFAULT         reduce using rule 269 (catches -> catchClause expt_55 .)
    CATCH           shift and go to state 806

    catchClause                    shift and go to state 912

state 861

    (419) expr_9 -> FINALLY block .

    BRPAREN         reduce using rule 419 (expr_9 -> FINALLY block .)
    SEMI            reduce using rule 419 (expr_9 -> FINALLY block .)
    Identifier      reduce using rule 419 (expr_9 -> FINALLY block .)
    CONTINUE        reduce using rule 419 (expr_9 -> FINALLY block .)
    BREAK           reduce using rule 419 (expr_9 -> FINALLY block .)
    THROW           reduce using rule 419 (expr_9 -> FINALLY block .)
    RETURN          reduce using rule 419 (expr_9 -> FINALLY block .)
    SYNCHRONIZED    reduce using rule 419 (expr_9 -> FINALLY block .)
    SWITCH          reduce using rule 419 (expr_9 -> FINALLY block .)
    TRY             reduce using rule 419 (expr_9 -> FINALLY block .)
    DO              reduce using rule 419 (expr_9 -> FINALLY block .)
    WHILE           reduce using rule 419 (expr_9 -> FINALLY block .)
    FOR             reduce using rule 419 (expr_9 -> FINALLY block .)
    IF              reduce using rule 419 (expr_9 -> FINALLY block .)
    ASSERT          reduce using rule 419 (expr_9 -> FINALLY block .)
    BLPAREN         reduce using rule 419 (expr_9 -> FINALLY block .)
    BOOLEAN         reduce using rule 419 (expr_9 -> FINALLY block .)
    CHAR            reduce using rule 419 (expr_9 -> FINALLY block .)
    BYTE            reduce using rule 419 (expr_9 -> FINALLY block .)
    SHORT           reduce using rule 419 (expr_9 -> FINALLY block .)
    INT             reduce using rule 419 (expr_9 -> FINALLY block .)
    LONG            reduce using rule 419 (expr_9 -> FINALLY block .)
    FLOAT           reduce using rule 419 (expr_9 -> FINALLY block .)
    DOUBLE          reduce using rule 419 (expr_9 -> FINALLY block .)
    PUBLIC          reduce using rule 419 (expr_9 -> FINALLY block .)
    PROTECTED       reduce using rule 419 (expr_9 -> FINALLY block .)
    PRIVATE         reduce using rule 419 (expr_9 -> FINALLY block .)
    ABSTRACT        reduce using rule 419 (expr_9 -> FINALLY block .)
    STATIC          reduce using rule 419 (expr_9 -> FINALLY block .)
    FINAL           reduce using rule 419 (expr_9 -> FINALLY block .)
    STRICTFP        reduce using rule 419 (expr_9 -> FINALLY block .)
    CLASS           reduce using rule 419 (expr_9 -> FINALLY block .)
    ENUM            reduce using rule 419 (expr_9 -> FINALLY block .)
    INTERFACE       reduce using rule 419 (expr_9 -> FINALLY block .)
    AT              reduce using rule 419 (expr_9 -> FINALLY block .)
    PLUS            reduce using rule 419 (expr_9 -> FINALLY block .)
    DASH            reduce using rule 419 (expr_9 -> FINALLY block .)
    OP_INC          reduce using rule 419 (expr_9 -> FINALLY block .)
    OP_DEC          reduce using rule 419 (expr_9 -> FINALLY block .)
    EXCLAMATION     reduce using rule 419 (expr_9 -> FINALLY block .)
    TILDE           reduce using rule 419 (expr_9 -> FINALLY block .)
    VOID            reduce using rule 419 (expr_9 -> FINALLY block .)
    NEW             reduce using rule 419 (expr_9 -> FINALLY block .)
    SUPER           reduce using rule 419 (expr_9 -> FINALLY block .)
    THIS            reduce using rule 419 (expr_9 -> FINALLY block .)
    LPAREN          reduce using rule 419 (expr_9 -> FINALLY block .)
    CharacterLiteral reduce using rule 419 (expr_9 -> FINALLY block .)
    StringLiteral   reduce using rule 419 (expr_9 -> FINALLY block .)
    NULL            reduce using rule 419 (expr_9 -> FINALLY block .)
    NUMBER          reduce using rule 419 (expr_9 -> FINALLY block .)
    HEX_NUMBER      reduce using rule 419 (expr_9 -> FINALLY block .)
    LONG_NUMBER     reduce using rule 419 (expr_9 -> FINALLY block .)
    LONG_HEX_NUMBER reduce using rule 419 (expr_9 -> FINALLY block .)
    NON_INTEGER_1   reduce using rule 419 (expr_9 -> FINALLY block .)
    NON_INTEGER_2   reduce using rule 419 (expr_9 -> FINALLY block .)
    NON_INTEGER_3   reduce using rule 419 (expr_9 -> FINALLY block .)
    TRUE            reduce using rule 419 (expr_9 -> FINALLY block .)
    FALSE           reduce using rule 419 (expr_9 -> FINALLY block .)
    ELSE            reduce using rule 419 (expr_9 -> FINALLY block .)
    CASE            reduce using rule 419 (expr_9 -> FINALLY block .)
    DEFAULT         reduce using rule 419 (expr_9 -> FINALLY block .)


state 862

    (271) catchClause -> CATCH LPAREN . formalParameter RPAREN block
    (272) formalParameter -> . variableModifiers type variableDeclaratorId
    (247) variableModifiers -> . expt_50
    (534) expt_50 -> . variableModifier
    (535) expt_50 -> . expt_50 variableModifier
    (166) variableModifier -> . FINAL
    (167) variableModifier -> . annotation
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

    FINAL           shift and go to state 736
    AT              shift and go to state 8

    formalParameter                shift and go to state 913
    variableModifiers              shift and go to state 914
    annotation                     shift and go to state 734
    variableModifier               shift and go to state 658
    expt_50                        shift and go to state 667

state 863

    (259) statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups . BRPAREN

    BRPAREN         shift and go to state 915


state 864

    (277) switchLabel -> CASE . constantExpression COLON
    (278) switchLabel -> CASE . enumConstantName COLON
    (297) constantExpression -> . expression
    (149) enumConstantName -> . Identifier
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    Identifier      shift and go to state 917
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    enumConstantName               shift and go to state 916
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    instanceOfExpression           shift and go to state 108
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    constantExpression             shift and go to state 918
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 919

state 865

    (420) expr_10 -> switchLabel .

    CASE            reduce using rule 420 (expr_10 -> switchLabel .)
    DEFAULT         reduce using rule 420 (expr_10 -> switchLabel .)
    SEMI            reduce using rule 420 (expr_10 -> switchLabel .)
    Identifier      reduce using rule 420 (expr_10 -> switchLabel .)
    CONTINUE        reduce using rule 420 (expr_10 -> switchLabel .)
    BREAK           reduce using rule 420 (expr_10 -> switchLabel .)
    THROW           reduce using rule 420 (expr_10 -> switchLabel .)
    RETURN          reduce using rule 420 (expr_10 -> switchLabel .)
    SYNCHRONIZED    reduce using rule 420 (expr_10 -> switchLabel .)
    SWITCH          reduce using rule 420 (expr_10 -> switchLabel .)
    TRY             reduce using rule 420 (expr_10 -> switchLabel .)
    DO              reduce using rule 420 (expr_10 -> switchLabel .)
    WHILE           reduce using rule 420 (expr_10 -> switchLabel .)
    FOR             reduce using rule 420 (expr_10 -> switchLabel .)
    IF              reduce using rule 420 (expr_10 -> switchLabel .)
    ASSERT          reduce using rule 420 (expr_10 -> switchLabel .)
    BLPAREN         reduce using rule 420 (expr_10 -> switchLabel .)
    BOOLEAN         reduce using rule 420 (expr_10 -> switchLabel .)
    CHAR            reduce using rule 420 (expr_10 -> switchLabel .)
    BYTE            reduce using rule 420 (expr_10 -> switchLabel .)
    SHORT           reduce using rule 420 (expr_10 -> switchLabel .)
    INT             reduce using rule 420 (expr_10 -> switchLabel .)
    LONG            reduce using rule 420 (expr_10 -> switchLabel .)
    FLOAT           reduce using rule 420 (expr_10 -> switchLabel .)
    DOUBLE          reduce using rule 420 (expr_10 -> switchLabel .)
    PUBLIC          reduce using rule 420 (expr_10 -> switchLabel .)
    PROTECTED       reduce using rule 420 (expr_10 -> switchLabel .)
    PRIVATE         reduce using rule 420 (expr_10 -> switchLabel .)
    ABSTRACT        reduce using rule 420 (expr_10 -> switchLabel .)
    STATIC          reduce using rule 420 (expr_10 -> switchLabel .)
    FINAL           reduce using rule 420 (expr_10 -> switchLabel .)
    STRICTFP        reduce using rule 420 (expr_10 -> switchLabel .)
    CLASS           reduce using rule 420 (expr_10 -> switchLabel .)
    ENUM            reduce using rule 420 (expr_10 -> switchLabel .)
    INTERFACE       reduce using rule 420 (expr_10 -> switchLabel .)
    AT              reduce using rule 420 (expr_10 -> switchLabel .)
    PLUS            reduce using rule 420 (expr_10 -> switchLabel .)
    DASH            reduce using rule 420 (expr_10 -> switchLabel .)
    OP_INC          reduce using rule 420 (expr_10 -> switchLabel .)
    OP_DEC          reduce using rule 420 (expr_10 -> switchLabel .)
    EXCLAMATION     reduce using rule 420 (expr_10 -> switchLabel .)
    TILDE           reduce using rule 420 (expr_10 -> switchLabel .)
    VOID            reduce using rule 420 (expr_10 -> switchLabel .)
    NEW             reduce using rule 420 (expr_10 -> switchLabel .)
    SUPER           reduce using rule 420 (expr_10 -> switchLabel .)
    THIS            reduce using rule 420 (expr_10 -> switchLabel .)
    LPAREN          reduce using rule 420 (expr_10 -> switchLabel .)
    CharacterLiteral reduce using rule 420 (expr_10 -> switchLabel .)
    StringLiteral   reduce using rule 420 (expr_10 -> switchLabel .)
    NULL            reduce using rule 420 (expr_10 -> switchLabel .)
    NUMBER          reduce using rule 420 (expr_10 -> switchLabel .)
    HEX_NUMBER      reduce using rule 420 (expr_10 -> switchLabel .)
    LONG_NUMBER     reduce using rule 420 (expr_10 -> switchLabel .)
    LONG_HEX_NUMBER reduce using rule 420 (expr_10 -> switchLabel .)
    NON_INTEGER_1   reduce using rule 420 (expr_10 -> switchLabel .)
    NON_INTEGER_2   reduce using rule 420 (expr_10 -> switchLabel .)
    NON_INTEGER_3   reduce using rule 420 (expr_10 -> switchLabel .)
    TRUE            reduce using rule 420 (expr_10 -> switchLabel .)
    FALSE           reduce using rule 420 (expr_10 -> switchLabel .)
    BRPAREN         reduce using rule 420 (expr_10 -> switchLabel .)


state 866

    (279) switchLabel -> DEFAULT . COLON

    COLON           shift and go to state 920


state 867

    (275) switchBlockStatementGroup -> expr_10 . expt_40
    (276) switchBlockStatementGroup -> expr_10 . empty
    (421) expr_10 -> expr_10 . switchLabel
    (516) expt_40 -> . blockStatement
    (517) expt_40 -> . expt_40 blockStatement
    (584) empty -> .
    (277) switchLabel -> . CASE constantExpression COLON
    (278) switchLabel -> . CASE enumConstantName COLON
    (279) switchLabel -> . DEFAULT COLON
    (240) blockStatement -> . localVariableDeclarationStatement
    (241) blockStatement -> . classOrInterfaceDeclaration
    (242) blockStatement -> . statement
    (243) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (244) localVariableDeclarationStatement -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (248) statement -> . Identifier COLON statement
    (249) statement -> . statementExpression SEMI
    (250) statement -> . SEMI
    (251) statement -> . CONTINUE Identifier SEMI
    (252) statement -> . CONTINUE SEMI
    (253) statement -> . BREAK Identifier SEMI
    (254) statement -> . BREAK SEMI
    (255) statement -> . THROW expression SEMI
    (256) statement -> . RETURN expt_53 SEMI
    (257) statement -> . RETURN SEMI
    (258) statement -> . SYNCHRONIZED parExpression block
    (259) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (260) statement -> . TRY block expr_9
    (261) statement -> . DO statement WHILE parExpression SEMI
    (262) statement -> . WHILE parExpression statement
    (263) statement -> . FOR LPAREN forControl RPAREN statement
    (264) statement -> . IF parExpression statement ELSE statement
    (265) statement -> . IF parExpression statement
    (266) statement -> . ASSERT expression expt_51 SEMI
    (267) statement -> . ASSERT expression SEMI
    (268) statement -> . block
    (245) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (246) localVariableDeclaration -> . type variableDeclarators
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (296) statementExpression -> . expression
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN
    (247) variableModifiers -> . expt_50
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (534) expt_50 -> . variableModifier
    (535) expt_50 -> . expt_50 variableModifier
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (166) variableModifier -> . FINAL
    (167) variableModifier -> . annotation
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    BRPAREN         reduce using rule 584 (empty -> .)
    CASE            shift and go to state 864
    DEFAULT         shift and go to state 866
    SEMI            shift and go to state 682
    Identifier      shift and go to state 666
    CONTINUE        shift and go to state 681
    BREAK           shift and go to state 678
    THROW           shift and go to state 686
    RETURN          shift and go to state 660
    SYNCHRONIZED    shift and go to state 661
    SWITCH          shift and go to state 672
    TRY             shift and go to state 665
    DO              shift and go to state 679
    WHILE           shift and go to state 671
    FOR             shift and go to state 664
    IF              shift and go to state 684
    ASSERT          shift and go to state 680
    BLPAREN         shift and go to state 612
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 662
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

  ! CASE            [ reduce using rule 584 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 584 (empty -> .) ]
  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    conditionalAndExpression       shift and go to state 99
    blockStatement                 shift and go to state 656
    classOrInterfaceType           shift and go to state 164
    booleanLiteral                 shift and go to state 103
    classOrInterfaceDeclaration    shift and go to state 657
    relationalExpression           shift and go to state 107
    variableModifier               shift and go to state 658
    localVariableDeclarationStatement shift and go to state 659
    instanceOfExpression           shift and go to state 108
    inclusiveOrExpression          shift and go to state 113
    expt_40                        shift and go to state 921
    additiveExpression             shift and go to state 116
    classDeclaration               shift and go to state 31
    unaryExpressionNotPlusMinus    shift and go to state 120
    annotationTypeDeclaration      shift and go to state 36
    interfaceDeclaration           shift and go to state 24
    andExpression                  shift and go to state 121
    expt_50                        shift and go to state 667
    expression                     shift and go to state 668
    block                          shift and go to state 669
    equalityExpression             shift and go to state 123
    localVariableDeclaration       shift and go to state 670
    exclusiveOrExpression          shift and go to state 105
    primary                        shift and go to state 125
    literal                        shift and go to state 131
    statement                      shift and go to state 673
    type                           shift and go to state 674
    empty                          shift and go to state 922
    conditionalExpression          shift and go to state 264
    enumDeclaration                shift and go to state 27
    FloatingPointLiteral           shift and go to state 134
    switchLabel                    shift and go to state 923
    primitiveType                  shift and go to state 677
    variableModifiers              shift and go to state 676
    multiplicativeExpression       shift and go to state 145
    normalInterfaceDeclaration     shift and go to state 18
    shiftExpression                shift and go to state 148
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    classOrInterfaceModifiers      shift and go to state 37
    integerLiteral                 shift and go to state 111
    expr_1                         shift and go to state 26
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    conditionalOrExpression        shift and go to state 124
    annotation                     shift and go to state 683
    castExpression                 shift and go to state 154
    classOrInterfaceModifier       shift and go to state 34
    statementExpression            shift and go to state 685

state 868

    (542) expt_56 -> switchBlockStatementGroup .

    CASE            reduce using rule 542 (expt_56 -> switchBlockStatementGroup .)
    DEFAULT         reduce using rule 542 (expt_56 -> switchBlockStatementGroup .)
    BRPAREN         reduce using rule 542 (expt_56 -> switchBlockStatementGroup .)


state 869

    (273) switchBlockStatementGroups -> expt_56 .
    (543) expt_56 -> expt_56 . switchBlockStatementGroup
    (275) switchBlockStatementGroup -> . expr_10 expt_40
    (276) switchBlockStatementGroup -> . expr_10 empty
    (420) expr_10 -> . switchLabel
    (421) expr_10 -> . expr_10 switchLabel
    (277) switchLabel -> . CASE constantExpression COLON
    (278) switchLabel -> . CASE enumConstantName COLON
    (279) switchLabel -> . DEFAULT COLON

    BRPAREN         reduce using rule 273 (switchBlockStatementGroups -> expt_56 .)
    CASE            shift and go to state 864
    DEFAULT         shift and go to state 866

    switchLabel                    shift and go to state 865
    switchBlockStatementGroup      shift and go to state 924
    expr_10                        shift and go to state 867

state 870

    (274) switchBlockStatementGroups -> empty .

    BRPAREN         reduce using rule 274 (switchBlockStatementGroups -> empty .)


state 871

    (261) statement -> DO statement WHILE parExpression . SEMI

    SEMI            shift and go to state 925


state 872

    (536) expt_51 -> COLON expression .

    SEMI            reduce using rule 536 (expt_51 -> COLON expression .)


state 873

    (266) statement -> ASSERT expression expt_51 SEMI .

    BRPAREN         reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    SEMI            reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    Identifier      reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    CONTINUE        reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    BREAK           reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    THROW           reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    RETURN          reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    SYNCHRONIZED    reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    SWITCH          reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    TRY             reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    DO              reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    WHILE           reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    FOR             reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    IF              reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    ASSERT          reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    BLPAREN         reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    BOOLEAN         reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    CHAR            reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    BYTE            reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    SHORT           reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    INT             reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    LONG            reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    FLOAT           reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    DOUBLE          reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    PUBLIC          reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    PROTECTED       reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    PRIVATE         reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    ABSTRACT        reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    STATIC          reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    FINAL           reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    STRICTFP        reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    CLASS           reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    ENUM            reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    INTERFACE       reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    AT              reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    PLUS            reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    DASH            reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    OP_INC          reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    OP_DEC          reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    EXCLAMATION     reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    TILDE           reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    VOID            reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    NEW             reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    SUPER           reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    THIS            reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    LPAREN          reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    CharacterLiteral reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    StringLiteral   reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    NULL            reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    NUMBER          reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    HEX_NUMBER      reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    LONG_NUMBER     reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    LONG_HEX_NUMBER reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    NON_INTEGER_1   reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    NON_INTEGER_2   reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    NON_INTEGER_3   reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    TRUE            reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    FALSE           reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    CASE            reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    DEFAULT         reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)
    ELSE            reduce using rule 266 (statement -> ASSERT expression expt_51 SEMI .)


state 874

    (264) statement -> IF parExpression statement ELSE . statement
    (248) statement -> . Identifier COLON statement
    (249) statement -> . statementExpression SEMI
    (250) statement -> . SEMI
    (251) statement -> . CONTINUE Identifier SEMI
    (252) statement -> . CONTINUE SEMI
    (253) statement -> . BREAK Identifier SEMI
    (254) statement -> . BREAK SEMI
    (255) statement -> . THROW expression SEMI
    (256) statement -> . RETURN expt_53 SEMI
    (257) statement -> . RETURN SEMI
    (258) statement -> . SYNCHRONIZED parExpression block
    (259) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (260) statement -> . TRY block expr_9
    (261) statement -> . DO statement WHILE parExpression SEMI
    (262) statement -> . WHILE parExpression statement
    (263) statement -> . FOR LPAREN forControl RPAREN statement
    (264) statement -> . IF parExpression statement ELSE statement
    (265) statement -> . IF parExpression statement
    (266) statement -> . ASSERT expression expt_51 SEMI
    (267) statement -> . ASSERT expression SEMI
    (268) statement -> . block
    (296) statementExpression -> . expression
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    Identifier      shift and go to state 745
    SEMI            shift and go to state 747
    CONTINUE        shift and go to state 681
    BREAK           shift and go to state 678
    THROW           shift and go to state 686
    RETURN          shift and go to state 660
    SYNCHRONIZED    shift and go to state 661
    SWITCH          shift and go to state 672
    TRY             shift and go to state 665
    DO              shift and go to state 679
    WHILE           shift and go to state 671
    FOR             shift and go to state 664
    IF              shift and go to state 684
    ASSERT          shift and go to state 680
    BLPAREN         shift and go to state 612
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    statement                      shift and go to state 926
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    integerLiteral                 shift and go to state 111
    statementExpression            shift and go to state 685
    andExpression                  shift and go to state 121
    expression                     shift and go to state 668
    block                          shift and go to state 669

state 875

    (411) expr_4 -> methodBody .

    BRPAREN         reduce using rule 411 (expr_4 -> methodBody .)
    SEMI            reduce using rule 411 (expr_4 -> methodBody .)
    STATIC          reduce using rule 411 (expr_4 -> methodBody .)
    PUBLIC          reduce using rule 411 (expr_4 -> methodBody .)
    PROTECTED       reduce using rule 411 (expr_4 -> methodBody .)
    PRIVATE         reduce using rule 411 (expr_4 -> methodBody .)
    ABSTRACT        reduce using rule 411 (expr_4 -> methodBody .)
    FINAL           reduce using rule 411 (expr_4 -> methodBody .)
    NATIVE          reduce using rule 411 (expr_4 -> methodBody .)
    SYNCHRONIZED    reduce using rule 411 (expr_4 -> methodBody .)
    TRANSIENT       reduce using rule 411 (expr_4 -> methodBody .)
    VOLATILE        reduce using rule 411 (expr_4 -> methodBody .)
    STRICTFP        reduce using rule 411 (expr_4 -> methodBody .)
    AT              reduce using rule 411 (expr_4 -> methodBody .)
    VOID            reduce using rule 411 (expr_4 -> methodBody .)
    Identifier      reduce using rule 411 (expr_4 -> methodBody .)
    LESS            reduce using rule 411 (expr_4 -> methodBody .)
    INTERFACE       reduce using rule 411 (expr_4 -> methodBody .)
    CLASS           reduce using rule 411 (expr_4 -> methodBody .)
    ENUM            reduce using rule 411 (expr_4 -> methodBody .)
    BOOLEAN         reduce using rule 411 (expr_4 -> methodBody .)
    CHAR            reduce using rule 411 (expr_4 -> methodBody .)
    BYTE            reduce using rule 411 (expr_4 -> methodBody .)
    SHORT           reduce using rule 411 (expr_4 -> methodBody .)
    INT             reduce using rule 411 (expr_4 -> methodBody .)
    LONG            reduce using rule 411 (expr_4 -> methodBody .)
    FLOAT           reduce using rule 411 (expr_4 -> methodBody .)
    DOUBLE          reduce using rule 411 (expr_4 -> methodBody .)
    BLPAREN         reduce using rule 411 (expr_4 -> methodBody .)


state 876

    (412) expr_4 -> SEMI .

    BRPAREN         reduce using rule 412 (expr_4 -> SEMI .)
    SEMI            reduce using rule 412 (expr_4 -> SEMI .)
    STATIC          reduce using rule 412 (expr_4 -> SEMI .)
    PUBLIC          reduce using rule 412 (expr_4 -> SEMI .)
    PROTECTED       reduce using rule 412 (expr_4 -> SEMI .)
    PRIVATE         reduce using rule 412 (expr_4 -> SEMI .)
    ABSTRACT        reduce using rule 412 (expr_4 -> SEMI .)
    FINAL           reduce using rule 412 (expr_4 -> SEMI .)
    NATIVE          reduce using rule 412 (expr_4 -> SEMI .)
    SYNCHRONIZED    reduce using rule 412 (expr_4 -> SEMI .)
    TRANSIENT       reduce using rule 412 (expr_4 -> SEMI .)
    VOLATILE        reduce using rule 412 (expr_4 -> SEMI .)
    STRICTFP        reduce using rule 412 (expr_4 -> SEMI .)
    AT              reduce using rule 412 (expr_4 -> SEMI .)
    VOID            reduce using rule 412 (expr_4 -> SEMI .)
    Identifier      reduce using rule 412 (expr_4 -> SEMI .)
    LESS            reduce using rule 412 (expr_4 -> SEMI .)
    INTERFACE       reduce using rule 412 (expr_4 -> SEMI .)
    CLASS           reduce using rule 412 (expr_4 -> SEMI .)
    ENUM            reduce using rule 412 (expr_4 -> SEMI .)
    BOOLEAN         reduce using rule 412 (expr_4 -> SEMI .)
    CHAR            reduce using rule 412 (expr_4 -> SEMI .)
    BYTE            reduce using rule 412 (expr_4 -> SEMI .)
    SHORT           reduce using rule 412 (expr_4 -> SEMI .)
    INT             reduce using rule 412 (expr_4 -> SEMI .)
    LONG            reduce using rule 412 (expr_4 -> SEMI .)
    FLOAT           reduce using rule 412 (expr_4 -> SEMI .)
    DOUBLE          reduce using rule 412 (expr_4 -> SEMI .)
    BLPAREN         reduce using rule 412 (expr_4 -> SEMI .)


state 877

    (111) voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .

    BRPAREN         reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    SEMI            reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    STATIC          reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    PUBLIC          reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    PROTECTED       reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    PRIVATE         reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    ABSTRACT        reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    FINAL           reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    NATIVE          reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    SYNCHRONIZED    reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    TRANSIENT       reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    VOLATILE        reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    STRICTFP        reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    AT              reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    VOID            reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    Identifier      reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    LESS            reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    INTERFACE       reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    CLASS           reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    ENUM            reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    BOOLEAN         reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    CHAR            reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    BYTE            reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    SHORT           reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    INT             reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    LONG            reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    FLOAT           reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    DOUBLE          reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)
    BLPAREN         reduce using rule 111 (voidMethodDeclaratorRest -> formalParameters expt_25 expr_4 .)


state 878

    (182) methodBody -> block .

    BRPAREN         reduce using rule 182 (methodBody -> block .)
    SEMI            reduce using rule 182 (methodBody -> block .)
    STATIC          reduce using rule 182 (methodBody -> block .)
    PUBLIC          reduce using rule 182 (methodBody -> block .)
    PROTECTED       reduce using rule 182 (methodBody -> block .)
    PRIVATE         reduce using rule 182 (methodBody -> block .)
    ABSTRACT        reduce using rule 182 (methodBody -> block .)
    FINAL           reduce using rule 182 (methodBody -> block .)
    NATIVE          reduce using rule 182 (methodBody -> block .)
    SYNCHRONIZED    reduce using rule 182 (methodBody -> block .)
    TRANSIENT       reduce using rule 182 (methodBody -> block .)
    VOLATILE        reduce using rule 182 (methodBody -> block .)
    STRICTFP        reduce using rule 182 (methodBody -> block .)
    AT              reduce using rule 182 (methodBody -> block .)
    VOID            reduce using rule 182 (methodBody -> block .)
    Identifier      reduce using rule 182 (methodBody -> block .)
    LESS            reduce using rule 182 (methodBody -> block .)
    INTERFACE       reduce using rule 182 (methodBody -> block .)
    CLASS           reduce using rule 182 (methodBody -> block .)
    ENUM            reduce using rule 182 (methodBody -> block .)
    BOOLEAN         reduce using rule 182 (methodBody -> block .)
    CHAR            reduce using rule 182 (methodBody -> block .)
    BYTE            reduce using rule 182 (methodBody -> block .)
    SHORT           reduce using rule 182 (methodBody -> block .)
    INT             reduce using rule 182 (methodBody -> block .)
    LONG            reduce using rule 182 (methodBody -> block .)
    FLOAT           reduce using rule 182 (methodBody -> block .)
    DOUBLE          reduce using rule 182 (methodBody -> block .)
    BLPAREN         reduce using rule 182 (methodBody -> block .)


state 879

    (112) voidMethodDeclaratorRest -> formalParameters empty expr_4 .

    BRPAREN         reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    SEMI            reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    STATIC          reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    PUBLIC          reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    PROTECTED       reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    PRIVATE         reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    ABSTRACT        reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    FINAL           reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    NATIVE          reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    SYNCHRONIZED    reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    TRANSIENT       reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    VOLATILE        reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    STRICTFP        reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    AT              reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    VOID            reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    Identifier      reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    LESS            reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    INTERFACE       reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    CLASS           reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    ENUM            reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    BOOLEAN         reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    CHAR            reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    BYTE            reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    SHORT           reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    INT             reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    LONG            reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    FLOAT           reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    DOUBLE          reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)
    BLPAREN         reduce using rule 112 (voidMethodDeclaratorRest -> formalParameters empty expr_4 .)


state 880

    (183) constructorBody -> BLPAREN expt_39 . expt_40 BRPAREN
    (184) constructorBody -> BLPAREN expt_39 . empty BRPAREN
    (516) expt_40 -> . blockStatement
    (517) expt_40 -> . expt_40 blockStatement
    (584) empty -> .
    (240) blockStatement -> . localVariableDeclarationStatement
    (241) blockStatement -> . classOrInterfaceDeclaration
    (242) blockStatement -> . statement
    (243) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (244) localVariableDeclarationStatement -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (248) statement -> . Identifier COLON statement
    (249) statement -> . statementExpression SEMI
    (250) statement -> . SEMI
    (251) statement -> . CONTINUE Identifier SEMI
    (252) statement -> . CONTINUE SEMI
    (253) statement -> . BREAK Identifier SEMI
    (254) statement -> . BREAK SEMI
    (255) statement -> . THROW expression SEMI
    (256) statement -> . RETURN expt_53 SEMI
    (257) statement -> . RETURN SEMI
    (258) statement -> . SYNCHRONIZED parExpression block
    (259) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (260) statement -> . TRY block expr_9
    (261) statement -> . DO statement WHILE parExpression SEMI
    (262) statement -> . WHILE parExpression statement
    (263) statement -> . FOR LPAREN forControl RPAREN statement
    (264) statement -> . IF parExpression statement ELSE statement
    (265) statement -> . IF parExpression statement
    (266) statement -> . ASSERT expression expt_51 SEMI
    (267) statement -> . ASSERT expression SEMI
    (268) statement -> . block
    (245) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (246) localVariableDeclaration -> . type variableDeclarators
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (296) statementExpression -> . expression
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN
    (247) variableModifiers -> . expt_50
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (534) expt_50 -> . variableModifier
    (535) expt_50 -> . expt_50 variableModifier
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (166) variableModifier -> . FINAL
    (167) variableModifier -> . annotation
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    BRPAREN         reduce using rule 584 (empty -> .)
    SEMI            shift and go to state 682
    Identifier      shift and go to state 666
    CONTINUE        shift and go to state 681
    BREAK           shift and go to state 678
    THROW           shift and go to state 686
    RETURN          shift and go to state 660
    SYNCHRONIZED    shift and go to state 661
    SWITCH          shift and go to state 672
    TRY             shift and go to state 665
    DO              shift and go to state 679
    WHILE           shift and go to state 671
    FOR             shift and go to state 664
    IF              shift and go to state 684
    ASSERT          shift and go to state 680
    BLPAREN         shift and go to state 612
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 662
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    conditionalAndExpression       shift and go to state 99
    blockStatement                 shift and go to state 656
    classOrInterfaceType           shift and go to state 164
    booleanLiteral                 shift and go to state 103
    classOrInterfaceDeclaration    shift and go to state 657
    relationalExpression           shift and go to state 107
    variableModifier               shift and go to state 658
    localVariableDeclarationStatement shift and go to state 659
    instanceOfExpression           shift and go to state 108
    inclusiveOrExpression          shift and go to state 113
    expt_40                        shift and go to state 927
    additiveExpression             shift and go to state 116
    classDeclaration               shift and go to state 31
    unaryExpressionNotPlusMinus    shift and go to state 120
    annotationTypeDeclaration      shift and go to state 36
    interfaceDeclaration           shift and go to state 24
    andExpression                  shift and go to state 121
    expt_50                        shift and go to state 667
    expression                     shift and go to state 668
    block                          shift and go to state 669
    equalityExpression             shift and go to state 123
    localVariableDeclaration       shift and go to state 670
    exclusiveOrExpression          shift and go to state 105
    primary                        shift and go to state 125
    literal                        shift and go to state 131
    statement                      shift and go to state 673
    type                           shift and go to state 674
    empty                          shift and go to state 928
    conditionalExpression          shift and go to state 264
    enumDeclaration                shift and go to state 27
    FloatingPointLiteral           shift and go to state 134
    primitiveType                  shift and go to state 677
    variableModifiers              shift and go to state 676
    multiplicativeExpression       shift and go to state 145
    normalInterfaceDeclaration     shift and go to state 18
    shiftExpression                shift and go to state 148
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    classOrInterfaceModifiers      shift and go to state 37
    integerLiteral                 shift and go to state 111
    expr_1                         shift and go to state 26
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    conditionalOrExpression        shift and go to state 124
    annotation                     shift and go to state 683
    castExpression                 shift and go to state 154
    classOrInterfaceModifier       shift and go to state 34
    statementExpression            shift and go to state 685

state 881

    (187) explicitConstructorInvocation -> primary . DOT expt_41 SUPER arguments SEMI
    (188) explicitConstructorInvocation -> primary . DOT empty SUPER arguments SEMI

    DOT             shift and go to state 929


state 882

    (189) explicitConstructorInvocation -> expt_41 . expr_6 arguments SEMI
    (415) expr_6 -> . THIS
    (416) expr_6 -> . SUPER

    THIS            shift and go to state 930
    SUPER           shift and go to state 931

    expr_6                         shift and go to state 932

state 883

    (185) constructorBody -> BLPAREN empty . expt_40 BRPAREN
    (186) constructorBody -> BLPAREN empty . empty BRPAREN
    (515) expt_39 -> empty .
    (190) explicitConstructorInvocation -> empty . expr_6 arguments SEMI
    (519) expt_41 -> empty .
    (516) expt_40 -> . blockStatement
    (517) expt_40 -> . expt_40 blockStatement
    (584) empty -> .
    (415) expr_6 -> . THIS
    (416) expr_6 -> . SUPER
    (240) blockStatement -> . localVariableDeclarationStatement
    (241) blockStatement -> . classOrInterfaceDeclaration
    (242) blockStatement -> . statement
    (243) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (244) localVariableDeclarationStatement -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (248) statement -> . Identifier COLON statement
    (249) statement -> . statementExpression SEMI
    (250) statement -> . SEMI
    (251) statement -> . CONTINUE Identifier SEMI
    (252) statement -> . CONTINUE SEMI
    (253) statement -> . BREAK Identifier SEMI
    (254) statement -> . BREAK SEMI
    (255) statement -> . THROW expression SEMI
    (256) statement -> . RETURN expt_53 SEMI
    (257) statement -> . RETURN SEMI
    (258) statement -> . SYNCHRONIZED parExpression block
    (259) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (260) statement -> . TRY block expr_9
    (261) statement -> . DO statement WHILE parExpression SEMI
    (262) statement -> . WHILE parExpression statement
    (263) statement -> . FOR LPAREN forControl RPAREN statement
    (264) statement -> . IF parExpression statement ELSE statement
    (265) statement -> . IF parExpression statement
    (266) statement -> . ASSERT expression expt_51 SEMI
    (267) statement -> . ASSERT expression SEMI
    (268) statement -> . block
    (245) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (246) localVariableDeclaration -> . type variableDeclarators
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (296) statementExpression -> . expression
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN
    (247) variableModifiers -> . expt_50
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (534) expt_50 -> . variableModifier
    (535) expt_50 -> . expt_50 variableModifier
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (166) variableModifier -> . FINAL
    (167) variableModifier -> . annotation
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

  ! reduce/reduce conflict for THIS resolved using rule 515 (expt_39 -> empty .)
  ! reduce/reduce conflict for SUPER resolved using rule 515 (expt_39 -> empty .)
  ! reduce/reduce conflict for BRPAREN resolved using rule 515 (expt_39 -> empty .)
  ! reduce/reduce conflict for CLASS resolved using rule 515 (expt_39 -> empty .)
  ! reduce/reduce conflict for ENUM resolved using rule 515 (expt_39 -> empty .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 515 (expt_39 -> empty .)
  ! reduce/reduce conflict for AT resolved using rule 515 (expt_39 -> empty .)
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for SUPER resolved as shift
  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for Identifier resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for THROW resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for SYNCHRONIZED resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ASSERT resolved as shift
  ! shift/reduce conflict for BLPAREN resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for ABSTRACT resolved as shift
  ! shift/reduce conflict for STATIC resolved as shift
  ! shift/reduce conflict for FINAL resolved as shift
  ! shift/reduce conflict for STRICTFP resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DASH resolved as shift
  ! shift/reduce conflict for OP_INC resolved as shift
  ! shift/reduce conflict for OP_DEC resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for TILDE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for CharacterLiteral resolved as shift
  ! shift/reduce conflict for StringLiteral resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for HEX_NUMBER resolved as shift
  ! shift/reduce conflict for LONG_NUMBER resolved as shift
  ! shift/reduce conflict for LONG_HEX_NUMBER resolved as shift
  ! shift/reduce conflict for NON_INTEGER_1 resolved as shift
  ! shift/reduce conflict for NON_INTEGER_2 resolved as shift
  ! shift/reduce conflict for NON_INTEGER_3 resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    BRPAREN         reduce using rule 515 (expt_39 -> empty .)
    THIS            shift and go to state 933
    SUPER           shift and go to state 937
    SEMI            shift and go to state 682
    Identifier      shift and go to state 666
    CONTINUE        shift and go to state 681
    BREAK           shift and go to state 678
    THROW           shift and go to state 686
    RETURN          shift and go to state 660
    SYNCHRONIZED    shift and go to state 661
    SWITCH          shift and go to state 672
    TRY             shift and go to state 665
    DO              shift and go to state 679
    WHILE           shift and go to state 671
    FOR             shift and go to state 664
    IF              shift and go to state 684
    ASSERT          shift and go to state 680
    BLPAREN         shift and go to state 612
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 662
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    LPAREN          shift and go to state 151
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

  ! SEMI            [ reduce using rule 515 (expt_39 -> empty .) ]
  ! Identifier      [ reduce using rule 515 (expt_39 -> empty .) ]
  ! CONTINUE        [ reduce using rule 515 (expt_39 -> empty .) ]
  ! BREAK           [ reduce using rule 515 (expt_39 -> empty .) ]
  ! THROW           [ reduce using rule 515 (expt_39 -> empty .) ]
  ! RETURN          [ reduce using rule 515 (expt_39 -> empty .) ]
  ! SYNCHRONIZED    [ reduce using rule 515 (expt_39 -> empty .) ]
  ! SWITCH          [ reduce using rule 515 (expt_39 -> empty .) ]
  ! TRY             [ reduce using rule 515 (expt_39 -> empty .) ]
  ! DO              [ reduce using rule 515 (expt_39 -> empty .) ]
  ! WHILE           [ reduce using rule 515 (expt_39 -> empty .) ]
  ! FOR             [ reduce using rule 515 (expt_39 -> empty .) ]
  ! IF              [ reduce using rule 515 (expt_39 -> empty .) ]
  ! ASSERT          [ reduce using rule 515 (expt_39 -> empty .) ]
  ! BLPAREN         [ reduce using rule 515 (expt_39 -> empty .) ]
  ! BOOLEAN         [ reduce using rule 515 (expt_39 -> empty .) ]
  ! CHAR            [ reduce using rule 515 (expt_39 -> empty .) ]
  ! BYTE            [ reduce using rule 515 (expt_39 -> empty .) ]
  ! SHORT           [ reduce using rule 515 (expt_39 -> empty .) ]
  ! INT             [ reduce using rule 515 (expt_39 -> empty .) ]
  ! LONG            [ reduce using rule 515 (expt_39 -> empty .) ]
  ! FLOAT           [ reduce using rule 515 (expt_39 -> empty .) ]
  ! DOUBLE          [ reduce using rule 515 (expt_39 -> empty .) ]
  ! PUBLIC          [ reduce using rule 515 (expt_39 -> empty .) ]
  ! PROTECTED       [ reduce using rule 515 (expt_39 -> empty .) ]
  ! PRIVATE         [ reduce using rule 515 (expt_39 -> empty .) ]
  ! ABSTRACT        [ reduce using rule 515 (expt_39 -> empty .) ]
  ! STATIC          [ reduce using rule 515 (expt_39 -> empty .) ]
  ! FINAL           [ reduce using rule 515 (expt_39 -> empty .) ]
  ! STRICTFP        [ reduce using rule 515 (expt_39 -> empty .) ]
  ! CLASS           [ reduce using rule 515 (expt_39 -> empty .) ]
  ! ENUM            [ reduce using rule 515 (expt_39 -> empty .) ]
  ! INTERFACE       [ reduce using rule 515 (expt_39 -> empty .) ]
  ! AT              [ reduce using rule 515 (expt_39 -> empty .) ]
  ! PLUS            [ reduce using rule 515 (expt_39 -> empty .) ]
  ! DASH            [ reduce using rule 515 (expt_39 -> empty .) ]
  ! OP_INC          [ reduce using rule 515 (expt_39 -> empty .) ]
  ! OP_DEC          [ reduce using rule 515 (expt_39 -> empty .) ]
  ! EXCLAMATION     [ reduce using rule 515 (expt_39 -> empty .) ]
  ! TILDE           [ reduce using rule 515 (expt_39 -> empty .) ]
  ! VOID            [ reduce using rule 515 (expt_39 -> empty .) ]
  ! NEW             [ reduce using rule 515 (expt_39 -> empty .) ]
  ! SUPER           [ reduce using rule 515 (expt_39 -> empty .) ]
  ! THIS            [ reduce using rule 515 (expt_39 -> empty .) ]
  ! LPAREN          [ reduce using rule 515 (expt_39 -> empty .) ]
  ! CharacterLiteral [ reduce using rule 515 (expt_39 -> empty .) ]
  ! StringLiteral   [ reduce using rule 515 (expt_39 -> empty .) ]
  ! NULL            [ reduce using rule 515 (expt_39 -> empty .) ]
  ! NUMBER          [ reduce using rule 515 (expt_39 -> empty .) ]
  ! HEX_NUMBER      [ reduce using rule 515 (expt_39 -> empty .) ]
  ! LONG_NUMBER     [ reduce using rule 515 (expt_39 -> empty .) ]
  ! LONG_HEX_NUMBER [ reduce using rule 515 (expt_39 -> empty .) ]
  ! NON_INTEGER_1   [ reduce using rule 515 (expt_39 -> empty .) ]
  ! NON_INTEGER_2   [ reduce using rule 515 (expt_39 -> empty .) ]
  ! NON_INTEGER_3   [ reduce using rule 515 (expt_39 -> empty .) ]
  ! TRUE            [ reduce using rule 515 (expt_39 -> empty .) ]
  ! FALSE           [ reduce using rule 515 (expt_39 -> empty .) ]
  ! THIS            [ reduce using rule 519 (expt_41 -> empty .) ]
  ! SUPER           [ reduce using rule 519 (expt_41 -> empty .) ]
  ! BRPAREN         [ reduce using rule 584 (empty -> .) ]
  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    conditionalAndExpression       shift and go to state 99
    blockStatement                 shift and go to state 656
    classOrInterfaceType           shift and go to state 164
    booleanLiteral                 shift and go to state 103
    classOrInterfaceDeclaration    shift and go to state 657
    relationalExpression           shift and go to state 107
    variableModifier               shift and go to state 658
    localVariableDeclarationStatement shift and go to state 659
    instanceOfExpression           shift and go to state 108
    inclusiveOrExpression          shift and go to state 113
    expt_40                        shift and go to state 934
    additiveExpression             shift and go to state 116
    classDeclaration               shift and go to state 31
    unaryExpressionNotPlusMinus    shift and go to state 120
    annotationTypeDeclaration      shift and go to state 36
    interfaceDeclaration           shift and go to state 24
    andExpression                  shift and go to state 121
    expt_50                        shift and go to state 667
    expression                     shift and go to state 668
    block                          shift and go to state 669
    equalityExpression             shift and go to state 123
    localVariableDeclaration       shift and go to state 670
    exclusiveOrExpression          shift and go to state 105
    primary                        shift and go to state 125
    literal                        shift and go to state 131
    statement                      shift and go to state 673
    type                           shift and go to state 674
    empty                          shift and go to state 935
    conditionalExpression          shift and go to state 264
    enumDeclaration                shift and go to state 27
    FloatingPointLiteral           shift and go to state 134
    primitiveType                  shift and go to state 677
    variableModifiers              shift and go to state 676
    multiplicativeExpression       shift and go to state 145
    normalInterfaceDeclaration     shift and go to state 18
    shiftExpression                shift and go to state 148
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    classOrInterfaceModifiers      shift and go to state 37
    expr_6                         shift and go to state 936
    integerLiteral                 shift and go to state 111
    expr_1                         shift and go to state 26
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    conditionalOrExpression        shift and go to state 124
    annotation                     shift and go to state 683
    castExpression                 shift and go to state 154
    classOrInterfaceModifier       shift and go to state 34
    statementExpression            shift and go to state 685

state 884

    (514) expt_39 -> explicitConstructorInvocation .

    SEMI            reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    Identifier      reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    CONTINUE        reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    BREAK           reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    THROW           reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    RETURN          reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    SYNCHRONIZED    reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    SWITCH          reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    TRY             reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    DO              reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    WHILE           reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    FOR             reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    IF              reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    ASSERT          reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    BLPAREN         reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    BOOLEAN         reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    CHAR            reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    BYTE            reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    SHORT           reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    INT             reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    LONG            reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    FLOAT           reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    DOUBLE          reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    PUBLIC          reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    PROTECTED       reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    PRIVATE         reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    ABSTRACT        reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    STATIC          reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    FINAL           reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    STRICTFP        reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    CLASS           reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    ENUM            reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    INTERFACE       reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    AT              reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    PLUS            reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    DASH            reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    OP_INC          reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    OP_DEC          reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    EXCLAMATION     reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    TILDE           reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    VOID            reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    NEW             reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    SUPER           reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    THIS            reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    LPAREN          reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    CharacterLiteral reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    StringLiteral   reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    NULL            reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    NUMBER          reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    HEX_NUMBER      reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    LONG_NUMBER     reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    LONG_HEX_NUMBER reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    NON_INTEGER_1   reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    NON_INTEGER_2   reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    NON_INTEGER_3   reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    TRUE            reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    FALSE           reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)
    BRPAREN         reduce using rule 514 (expt_39 -> explicitConstructorInvocation .)


state 885

    (508) expt_36 -> COMMA . qualifiedName
    (191) qualifiedName -> . Identifier expt_42
    (192) qualifiedName -> . Identifier empty

    Identifier      shift and go to state 10

    qualifiedName                  shift and go to state 938

state 886

    (173) qualifiedNameList -> qualifiedName expt_36 .
    (509) expt_36 -> expt_36 . COMMA qualifiedName

    BLPAREN         reduce using rule 173 (qualifiedNameList -> qualifiedName expt_36 .)
    SEMI            reduce using rule 173 (qualifiedNameList -> qualifiedName expt_36 .)
    COMMA           shift and go to state 939


state 887

    (174) qualifiedNameList -> qualifiedName empty .

    BLPAREN         reduce using rule 174 (qualifiedNameList -> qualifiedName empty .)
    SEMI            reduce using rule 174 (qualifiedNameList -> qualifiedName empty .)


state 888

    (179) formalParameterDeclsRest -> OP_ARRAY variableDeclaratorId .

    RPAREN          reduce using rule 179 (formalParameterDeclsRest -> OP_ARRAY variableDeclaratorId .)


state 889

    (512) expt_38 -> COMMA . formalParameterDecls
    (177) formalParameterDecls -> . variableModifiers type formalParameterDeclsRest
    (178) formalParameterDecls -> . type formalParameterDeclsRest
    (247) variableModifiers -> . expt_50
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (534) expt_50 -> . variableModifier
    (535) expt_50 -> . expt_50 variableModifier
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty
    (166) variableModifier -> . FINAL
    (167) variableModifier -> . annotation
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166
    FINAL           shift and go to state 736
    AT              shift and go to state 8

    variableModifiers              shift and go to state 765
    classOrInterfaceType           shift and go to state 164
    formalParameterDecls           shift and go to state 940
    primitiveType                  shift and go to state 165
    variableModifier               shift and go to state 658
    expt_50                        shift and go to state 667
    type                           shift and go to state 763
    annotation                     shift and go to state 734

state 890

    (180) formalParameterDeclsRest -> variableDeclaratorId expt_38 .

    RPAREN          reduce using rule 180 (formalParameterDeclsRest -> variableDeclaratorId expt_38 .)


state 891

    (181) formalParameterDeclsRest -> variableDeclaratorId empty .
    (513) expt_38 -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 181 (formalParameterDeclsRest -> variableDeclaratorId empty .)
    RPAREN          reduce using rule 181 (formalParameterDeclsRest -> variableDeclaratorId empty .)

  ! RPAREN          [ reduce using rule 513 (expt_38 -> empty .) ]


state 892

    (177) formalParameterDecls -> variableModifiers type formalParameterDeclsRest .

    RPAREN          reduce using rule 177 (formalParameterDecls -> variableModifiers type formalParameterDeclsRest .)


state 893

    (107) methodDeclaratorRest -> formalParameters expt_24 expt_25 . expr_4
    (411) expr_4 -> . methodBody
    (412) expr_4 -> . SEMI
    (182) methodBody -> . block
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN

    SEMI            shift and go to state 876
    BLPAREN         shift and go to state 612

    methodBody                     shift and go to state 875
    expr_4                         shift and go to state 941
    block                          shift and go to state 878

state 894

    (108) methodDeclaratorRest -> formalParameters expt_24 empty . expr_4
    (487) expt_25 -> empty .
    (411) expr_4 -> . methodBody
    (412) expr_4 -> . SEMI
    (182) methodBody -> . block
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN

  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for BLPAREN resolved as shift
    SEMI            shift and go to state 876
    BLPAREN         shift and go to state 612

  ! SEMI            [ reduce using rule 487 (expt_25 -> empty .) ]
  ! BLPAREN         [ reduce using rule 487 (expt_25 -> empty .) ]

    methodBody                     shift and go to state 875
    expr_4                         shift and go to state 942
    block                          shift and go to state 878

state 895

    (109) methodDeclaratorRest -> formalParameters empty expt_25 . expr_4
    (411) expr_4 -> . methodBody
    (412) expr_4 -> . SEMI
    (182) methodBody -> . block
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN

    SEMI            shift and go to state 876
    BLPAREN         shift and go to state 612

    methodBody                     shift and go to state 875
    expr_4                         shift and go to state 943
    block                          shift and go to state 878

state 896

    (110) methodDeclaratorRest -> formalParameters empty empty . expr_4
    (487) expt_25 -> empty .
    (411) expr_4 -> . methodBody
    (412) expr_4 -> . SEMI
    (182) methodBody -> . block
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN

  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for BLPAREN resolved as shift
    SEMI            shift and go to state 876
    BLPAREN         shift and go to state 612

  ! SEMI            [ reduce using rule 487 (expt_25 -> empty .) ]
  ! BLPAREN         [ reduce using rule 487 (expt_25 -> empty .) ]

    methodBody                     shift and go to state 875
    expr_4                         shift and go to state 944
    block                          shift and go to state 878

state 897

    (122) constantDeclarator -> Identifier constantDeclaratorRest .

    COMMA           reduce using rule 122 (constantDeclarator -> Identifier constantDeclaratorRest .)
    SEMI            reduce using rule 122 (constantDeclarator -> Identifier constantDeclaratorRest .)


state 898

    (493) expt_28 -> expt_28 COMMA constantDeclarator .

    COMMA           reduce using rule 493 (expt_28 -> expt_28 COMMA constantDeclarator .)
    SEMI            reduce using rule 493 (expt_28 -> expt_28 COMMA constantDeclarator .)


state 899

    (113) interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .

    BRPAREN         reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    SEMI            reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    PUBLIC          reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    PROTECTED       reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    PRIVATE         reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    STATIC          reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    ABSTRACT        reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    FINAL           reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    NATIVE          reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    SYNCHRONIZED    reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    TRANSIENT       reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    VOLATILE        reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    STRICTFP        reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    AT              reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    VOID            reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    LESS            reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    INTERFACE       reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    CLASS           reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    ENUM            reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    BOOLEAN         reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    CHAR            reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    BYTE            reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    SHORT           reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    INT             reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    LONG            reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    FLOAT           reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    DOUBLE          reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)
    Identifier      reduce using rule 113 (interfaceMethodDeclaratorRest -> formalParameters expt_24 expt_25 SEMI .)


state 900

    (114) interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .

    BRPAREN         reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    SEMI            reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    PUBLIC          reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    PROTECTED       reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    PRIVATE         reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    STATIC          reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    ABSTRACT        reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    FINAL           reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    NATIVE          reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    SYNCHRONIZED    reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    TRANSIENT       reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    VOLATILE        reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    STRICTFP        reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    AT              reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    VOID            reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    LESS            reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    INTERFACE       reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    CLASS           reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    ENUM            reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    BOOLEAN         reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    CHAR            reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    BYTE            reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    SHORT           reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    INT             reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    LONG            reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    FLOAT           reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    DOUBLE          reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)
    Identifier      reduce using rule 114 (interfaceMethodDeclaratorRest -> formalParameters expt_24 empty SEMI .)


state 901

    (115) interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .

    BRPAREN         reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    SEMI            reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    PUBLIC          reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    PROTECTED       reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    PRIVATE         reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    STATIC          reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    ABSTRACT        reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    FINAL           reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    NATIVE          reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    SYNCHRONIZED    reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    TRANSIENT       reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    VOLATILE        reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    STRICTFP        reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    AT              reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    VOID            reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    LESS            reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    INTERFACE       reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    CLASS           reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    ENUM            reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    BOOLEAN         reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    CHAR            reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    BYTE            reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    SHORT           reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    INT             reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    LONG            reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    FLOAT           reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    DOUBLE          reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)
    Identifier      reduce using rule 115 (interfaceMethodDeclaratorRest -> formalParameters empty expt_25 SEMI .)


state 902

    (116) interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .

    BRPAREN         reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    SEMI            reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    PUBLIC          reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    PROTECTED       reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    PRIVATE         reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    STATIC          reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    ABSTRACT        reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    FINAL           reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    NATIVE          reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    SYNCHRONIZED    reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    TRANSIENT       reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    VOLATILE        reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    STRICTFP        reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    AT              reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    VOID            reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    LESS            reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    INTERFACE       reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    CLASS           reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    ENUM            reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    BOOLEAN         reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    CHAR            reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    BYTE            reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    SHORT           reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    INT             reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    LONG            reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    FLOAT           reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    DOUBLE          reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)
    Identifier      reduce using rule 116 (interfaceMethodDeclaratorRest -> formalParameters empty empty SEMI .)


state 903

    (495) expt_29 -> expt_29 COMMA variableInitializer .

    COMMA           reduce using rule 495 (expt_29 -> expt_29 COMMA variableInitializer .)
    BRPAREN         reduce using rule 495 (expt_29 -> expt_29 COMMA variableInitializer .)


state 904

    (263) statement -> FOR LPAREN forControl RPAREN statement .

    BRPAREN         reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    SEMI            reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    Identifier      reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    CONTINUE        reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    BREAK           reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    THROW           reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    RETURN          reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    SYNCHRONIZED    reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    SWITCH          reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    TRY             reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    DO              reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    WHILE           reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    FOR             reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    IF              reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    ASSERT          reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    BLPAREN         reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    BOOLEAN         reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    CHAR            reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    BYTE            reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    SHORT           reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    INT             reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    LONG            reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    FLOAT           reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    DOUBLE          reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    PUBLIC          reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    PROTECTED       reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    PRIVATE         reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    ABSTRACT        reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    STATIC          reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    FINAL           reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    STRICTFP        reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    CLASS           reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    ENUM            reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    INTERFACE       reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    AT              reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    PLUS            reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    DASH            reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    OP_INC          reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    OP_DEC          reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    EXCLAMATION     reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    TILDE           reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    VOID            reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    NEW             reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    SUPER           reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    THIS            reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    LPAREN          reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    CharacterLiteral reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    StringLiteral   reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    NULL            reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    NUMBER          reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    HEX_NUMBER      reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    LONG_NUMBER     reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    LONG_HEX_NUMBER reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    NON_INTEGER_1   reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    NON_INTEGER_2   reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    NON_INTEGER_3   reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    TRUE            reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    FALSE           reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    CASE            reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    DEFAULT         reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)
    ELSE            reduce using rule 263 (statement -> FOR LPAREN forControl RPAREN statement .)


state 905

    (280) forControl -> expt_57 SEMI expt_58 . SEMI expt_59
    (281) forControl -> expt_57 SEMI expt_58 . SEMI empty

    SEMI            shift and go to state 945


state 906

    (546) expt_58 -> expression .

    SEMI            reduce using rule 546 (expt_58 -> expression .)


state 907

    (282) forControl -> expt_57 SEMI empty . SEMI expt_59
    (283) forControl -> expt_57 SEMI empty . SEMI empty
    (547) expt_58 -> empty .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 946

  ! SEMI            [ reduce using rule 547 (expt_58 -> empty .) ]


state 908

    (284) forControl -> empty SEMI expt_58 . SEMI expt_59
    (285) forControl -> empty SEMI expt_58 . SEMI empty

    SEMI            shift and go to state 947


state 909

    (286) forControl -> empty SEMI empty . SEMI expt_59
    (287) forControl -> empty SEMI empty . SEMI empty
    (547) expt_58 -> empty .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 948

  ! SEMI            [ reduce using rule 547 (expt_58 -> empty .) ]


state 910

    (291) enhancedForControl -> variableModifiers type Identifier . COLON expression
    (131) variableDeclaratorId -> Identifier . expt_24
    (132) variableDeclaratorId -> Identifier . empty
    (484) expt_24 -> . FLPAREN FRPAREN
    (485) expt_24 -> . expt_24 FLPAREN FRPAREN
    (584) empty -> .

    COLON           shift and go to state 949
    FLPAREN         shift and go to state 245
    EQUALS          reduce using rule 584 (empty -> .)
    COMMA           reduce using rule 584 (empty -> .)
    SEMI            reduce using rule 584 (empty -> .)

    empty                          shift and go to state 636
    expt_24                        shift and go to state 634

state 911

    (417) expr_9 -> catches FINALLY block .

    BRPAREN         reduce using rule 417 (expr_9 -> catches FINALLY block .)
    SEMI            reduce using rule 417 (expr_9 -> catches FINALLY block .)
    Identifier      reduce using rule 417 (expr_9 -> catches FINALLY block .)
    CONTINUE        reduce using rule 417 (expr_9 -> catches FINALLY block .)
    BREAK           reduce using rule 417 (expr_9 -> catches FINALLY block .)
    THROW           reduce using rule 417 (expr_9 -> catches FINALLY block .)
    RETURN          reduce using rule 417 (expr_9 -> catches FINALLY block .)
    SYNCHRONIZED    reduce using rule 417 (expr_9 -> catches FINALLY block .)
    SWITCH          reduce using rule 417 (expr_9 -> catches FINALLY block .)
    TRY             reduce using rule 417 (expr_9 -> catches FINALLY block .)
    DO              reduce using rule 417 (expr_9 -> catches FINALLY block .)
    WHILE           reduce using rule 417 (expr_9 -> catches FINALLY block .)
    FOR             reduce using rule 417 (expr_9 -> catches FINALLY block .)
    IF              reduce using rule 417 (expr_9 -> catches FINALLY block .)
    ASSERT          reduce using rule 417 (expr_9 -> catches FINALLY block .)
    BLPAREN         reduce using rule 417 (expr_9 -> catches FINALLY block .)
    BOOLEAN         reduce using rule 417 (expr_9 -> catches FINALLY block .)
    CHAR            reduce using rule 417 (expr_9 -> catches FINALLY block .)
    BYTE            reduce using rule 417 (expr_9 -> catches FINALLY block .)
    SHORT           reduce using rule 417 (expr_9 -> catches FINALLY block .)
    INT             reduce using rule 417 (expr_9 -> catches FINALLY block .)
    LONG            reduce using rule 417 (expr_9 -> catches FINALLY block .)
    FLOAT           reduce using rule 417 (expr_9 -> catches FINALLY block .)
    DOUBLE          reduce using rule 417 (expr_9 -> catches FINALLY block .)
    PUBLIC          reduce using rule 417 (expr_9 -> catches FINALLY block .)
    PROTECTED       reduce using rule 417 (expr_9 -> catches FINALLY block .)
    PRIVATE         reduce using rule 417 (expr_9 -> catches FINALLY block .)
    ABSTRACT        reduce using rule 417 (expr_9 -> catches FINALLY block .)
    STATIC          reduce using rule 417 (expr_9 -> catches FINALLY block .)
    FINAL           reduce using rule 417 (expr_9 -> catches FINALLY block .)
    STRICTFP        reduce using rule 417 (expr_9 -> catches FINALLY block .)
    CLASS           reduce using rule 417 (expr_9 -> catches FINALLY block .)
    ENUM            reduce using rule 417 (expr_9 -> catches FINALLY block .)
    INTERFACE       reduce using rule 417 (expr_9 -> catches FINALLY block .)
    AT              reduce using rule 417 (expr_9 -> catches FINALLY block .)
    PLUS            reduce using rule 417 (expr_9 -> catches FINALLY block .)
    DASH            reduce using rule 417 (expr_9 -> catches FINALLY block .)
    OP_INC          reduce using rule 417 (expr_9 -> catches FINALLY block .)
    OP_DEC          reduce using rule 417 (expr_9 -> catches FINALLY block .)
    EXCLAMATION     reduce using rule 417 (expr_9 -> catches FINALLY block .)
    TILDE           reduce using rule 417 (expr_9 -> catches FINALLY block .)
    VOID            reduce using rule 417 (expr_9 -> catches FINALLY block .)
    NEW             reduce using rule 417 (expr_9 -> catches FINALLY block .)
    SUPER           reduce using rule 417 (expr_9 -> catches FINALLY block .)
    THIS            reduce using rule 417 (expr_9 -> catches FINALLY block .)
    LPAREN          reduce using rule 417 (expr_9 -> catches FINALLY block .)
    CharacterLiteral reduce using rule 417 (expr_9 -> catches FINALLY block .)
    StringLiteral   reduce using rule 417 (expr_9 -> catches FINALLY block .)
    NULL            reduce using rule 417 (expr_9 -> catches FINALLY block .)
    NUMBER          reduce using rule 417 (expr_9 -> catches FINALLY block .)
    HEX_NUMBER      reduce using rule 417 (expr_9 -> catches FINALLY block .)
    LONG_NUMBER     reduce using rule 417 (expr_9 -> catches FINALLY block .)
    LONG_HEX_NUMBER reduce using rule 417 (expr_9 -> catches FINALLY block .)
    NON_INTEGER_1   reduce using rule 417 (expr_9 -> catches FINALLY block .)
    NON_INTEGER_2   reduce using rule 417 (expr_9 -> catches FINALLY block .)
    NON_INTEGER_3   reduce using rule 417 (expr_9 -> catches FINALLY block .)
    TRUE            reduce using rule 417 (expr_9 -> catches FINALLY block .)
    FALSE           reduce using rule 417 (expr_9 -> catches FINALLY block .)
    ELSE            reduce using rule 417 (expr_9 -> catches FINALLY block .)
    CASE            reduce using rule 417 (expr_9 -> catches FINALLY block .)
    DEFAULT         reduce using rule 417 (expr_9 -> catches FINALLY block .)


state 912

    (541) expt_55 -> expt_55 catchClause .

    CATCH           reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    FINALLY         reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    BRPAREN         reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    SEMI            reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    Identifier      reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    CONTINUE        reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    BREAK           reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    THROW           reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    RETURN          reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    SYNCHRONIZED    reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    SWITCH          reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    TRY             reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    DO              reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    WHILE           reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    FOR             reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    IF              reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    ASSERT          reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    BLPAREN         reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    BOOLEAN         reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    CHAR            reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    BYTE            reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    SHORT           reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    INT             reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    LONG            reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    FLOAT           reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    DOUBLE          reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    PUBLIC          reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    PROTECTED       reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    PRIVATE         reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    ABSTRACT        reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    STATIC          reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    FINAL           reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    STRICTFP        reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    CLASS           reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    ENUM            reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    INTERFACE       reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    AT              reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    PLUS            reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    DASH            reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    OP_INC          reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    OP_DEC          reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    EXCLAMATION     reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    TILDE           reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    VOID            reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    NEW             reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    SUPER           reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    THIS            reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    LPAREN          reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    CharacterLiteral reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    StringLiteral   reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    NULL            reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    NUMBER          reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    HEX_NUMBER      reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    LONG_NUMBER     reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    LONG_HEX_NUMBER reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    NON_INTEGER_1   reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    NON_INTEGER_2   reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    NON_INTEGER_3   reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    TRUE            reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    FALSE           reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    ELSE            reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    CASE            reduce using rule 541 (expt_55 -> expt_55 catchClause .)
    DEFAULT         reduce using rule 541 (expt_55 -> expt_55 catchClause .)


state 913

    (271) catchClause -> CATCH LPAREN formalParameter . RPAREN block

    RPAREN          shift and go to state 950


state 914

    (272) formalParameter -> variableModifiers . type variableDeclaratorId
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty

    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    Identifier      shift and go to state 166

    classOrInterfaceType           shift and go to state 164
    primitiveType                  shift and go to state 165
    type                           shift and go to state 951

state 915

    (259) statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .

    BRPAREN         reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    SEMI            reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    Identifier      reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    CONTINUE        reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    BREAK           reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    THROW           reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    RETURN          reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    SYNCHRONIZED    reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    SWITCH          reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    TRY             reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    DO              reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    WHILE           reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    FOR             reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    IF              reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    ASSERT          reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    BLPAREN         reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    BOOLEAN         reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    CHAR            reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    BYTE            reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    SHORT           reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    INT             reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    LONG            reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    FLOAT           reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    DOUBLE          reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    PUBLIC          reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    PROTECTED       reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    PRIVATE         reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    ABSTRACT        reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    STATIC          reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    FINAL           reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    STRICTFP        reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    CLASS           reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    ENUM            reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    INTERFACE       reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    AT              reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    PLUS            reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    DASH            reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    OP_INC          reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    OP_DEC          reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    EXCLAMATION     reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    TILDE           reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    VOID            reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    NEW             reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    SUPER           reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    THIS            reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    LPAREN          reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    CharacterLiteral reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    StringLiteral   reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    NULL            reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    NUMBER          reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    HEX_NUMBER      reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    LONG_NUMBER     reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    NON_INTEGER_1   reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    NON_INTEGER_2   reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    NON_INTEGER_3   reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    TRUE            reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    FALSE           reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    CASE            reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    DEFAULT         reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    ELSE            reduce using rule 259 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)


state 916

    (278) switchLabel -> CASE enumConstantName . COLON

    COLON           shift and go to state 952


state 917

    (149) enumConstantName -> Identifier .
    (360) primary -> Identifier . expt_42 identifierSuffix
    (361) primary -> Identifier . expt_42
    (362) primary -> Identifier . identifierSuffix
    (363) primary -> Identifier .
    (520) expt_42 -> . DOT Identifier
    (521) expt_42 -> . expt_42 DOT Identifier
    (372) identifierSuffix -> . suffixStatements DOT CLASS
    (373) identifierSuffix -> . suffixExprStatements
    (374) identifierSuffix -> . arguments
    (375) identifierSuffix -> . DOT CLASS
    (376) identifierSuffix -> . DOT explicitGenericInvocation
    (377) identifierSuffix -> . DOT THIS
    (378) identifierSuffix -> . DOT SUPER arguments
    (379) identifierSuffix -> . DOT NEW innerCreator
    (433) suffixStatements -> . FLPAREN FRPAREN
    (434) suffixStatements -> . suffixStatements FLPAREN FRPAREN
    (435) suffixExprStatements -> . FLPAREN expression FRPAREN
    (436) suffixExprStatements -> . suffixExprStatements FLPAREN expression FRPAREN
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

  ! reduce/reduce conflict for COLON resolved using rule 149 (enumConstantName -> Identifier .)
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    COLON           reduce using rule 149 (enumConstantName -> Identifier .)
    OP_INC          reduce using rule 363 (primary -> Identifier .)
    OP_DEC          reduce using rule 363 (primary -> Identifier .)
    MULT            reduce using rule 363 (primary -> Identifier .)
    SLASH           reduce using rule 363 (primary -> Identifier .)
    PERCENT         reduce using rule 363 (primary -> Identifier .)
    PLUS            reduce using rule 363 (primary -> Identifier .)
    DASH            reduce using rule 363 (primary -> Identifier .)
    OP_SHR          reduce using rule 363 (primary -> Identifier .)
    OP_SHL          reduce using rule 363 (primary -> Identifier .)
    OP_SHRR         reduce using rule 363 (primary -> Identifier .)
    OP_LE           reduce using rule 363 (primary -> Identifier .)
    OP_GE           reduce using rule 363 (primary -> Identifier .)
    LESS            reduce using rule 363 (primary -> Identifier .)
    MORE            reduce using rule 363 (primary -> Identifier .)
    INSTANCEOF      reduce using rule 363 (primary -> Identifier .)
    OP_EQ           reduce using rule 363 (primary -> Identifier .)
    OP_NE           reduce using rule 363 (primary -> Identifier .)
    AND             reduce using rule 363 (primary -> Identifier .)
    CARET           reduce using rule 363 (primary -> Identifier .)
    VERTICAL        reduce using rule 363 (primary -> Identifier .)
    OP_LAND         reduce using rule 363 (primary -> Identifier .)
    OP_LOR          reduce using rule 363 (primary -> Identifier .)
    QUES            reduce using rule 363 (primary -> Identifier .)
    EQUALS          reduce using rule 363 (primary -> Identifier .)
    ASS_ADD         reduce using rule 363 (primary -> Identifier .)
    ASS_SUB         reduce using rule 363 (primary -> Identifier .)
    ASS_MUL         reduce using rule 363 (primary -> Identifier .)
    ASS_DIV         reduce using rule 363 (primary -> Identifier .)
    ASS_AND         reduce using rule 363 (primary -> Identifier .)
    ASS_OR          reduce using rule 363 (primary -> Identifier .)
    ASS_XOR         reduce using rule 363 (primary -> Identifier .)
    ASS_MOD         reduce using rule 363 (primary -> Identifier .)
    ASS_SHL         reduce using rule 363 (primary -> Identifier .)
    ASS_SHRR        reduce using rule 363 (primary -> Identifier .)
    ASS_SHR         reduce using rule 363 (primary -> Identifier .)
    DOT             shift and go to state 205
    FLPAREN         shift and go to state 201
    LPAREN          shift and go to state 204

  ! FLPAREN         [ reduce using rule 363 (primary -> Identifier .) ]
  ! DOT             [ reduce using rule 363 (primary -> Identifier .) ]
  ! COLON           [ reduce using rule 363 (primary -> Identifier .) ]

    identifierSuffix               shift and go to state 217
    suffixStatements               shift and go to state 200
    suffixExprStatements           shift and go to state 202
    arguments                      shift and go to state 203
    expt_42                        shift and go to state 219

state 918

    (277) switchLabel -> CASE constantExpression . COLON

    COLON           shift and go to state 953


state 919

    (297) constantExpression -> expression .

    COLON           reduce using rule 297 (constantExpression -> expression .)


state 920

    (279) switchLabel -> DEFAULT COLON .

    CASE            reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    DEFAULT         reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    SEMI            reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    Identifier      reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    CONTINUE        reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    BREAK           reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    THROW           reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    RETURN          reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    SYNCHRONIZED    reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    SWITCH          reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    TRY             reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    DO              reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    WHILE           reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    FOR             reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    IF              reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    ASSERT          reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    BLPAREN         reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    BOOLEAN         reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    CHAR            reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    BYTE            reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    SHORT           reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    INT             reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    LONG            reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    FLOAT           reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    DOUBLE          reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    PUBLIC          reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    PROTECTED       reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    PRIVATE         reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    ABSTRACT        reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    STATIC          reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    FINAL           reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    STRICTFP        reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    CLASS           reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    ENUM            reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    INTERFACE       reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    AT              reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    PLUS            reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    DASH            reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    OP_INC          reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    OP_DEC          reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    EXCLAMATION     reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    TILDE           reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    VOID            reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    NEW             reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    SUPER           reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    THIS            reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    LPAREN          reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    CharacterLiteral reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    StringLiteral   reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    NULL            reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    NUMBER          reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    HEX_NUMBER      reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    LONG_NUMBER     reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    LONG_HEX_NUMBER reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    NON_INTEGER_1   reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    NON_INTEGER_2   reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    NON_INTEGER_3   reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    TRUE            reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    FALSE           reduce using rule 279 (switchLabel -> DEFAULT COLON .)
    BRPAREN         reduce using rule 279 (switchLabel -> DEFAULT COLON .)


state 921

    (275) switchBlockStatementGroup -> expr_10 expt_40 .
    (517) expt_40 -> expt_40 . blockStatement
    (240) blockStatement -> . localVariableDeclarationStatement
    (241) blockStatement -> . classOrInterfaceDeclaration
    (242) blockStatement -> . statement
    (243) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (244) localVariableDeclarationStatement -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (248) statement -> . Identifier COLON statement
    (249) statement -> . statementExpression SEMI
    (250) statement -> . SEMI
    (251) statement -> . CONTINUE Identifier SEMI
    (252) statement -> . CONTINUE SEMI
    (253) statement -> . BREAK Identifier SEMI
    (254) statement -> . BREAK SEMI
    (255) statement -> . THROW expression SEMI
    (256) statement -> . RETURN expt_53 SEMI
    (257) statement -> . RETURN SEMI
    (258) statement -> . SYNCHRONIZED parExpression block
    (259) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (260) statement -> . TRY block expr_9
    (261) statement -> . DO statement WHILE parExpression SEMI
    (262) statement -> . WHILE parExpression statement
    (263) statement -> . FOR LPAREN forControl RPAREN statement
    (264) statement -> . IF parExpression statement ELSE statement
    (265) statement -> . IF parExpression statement
    (266) statement -> . ASSERT expression expt_51 SEMI
    (267) statement -> . ASSERT expression SEMI
    (268) statement -> . block
    (245) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (246) localVariableDeclaration -> . type variableDeclarators
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (296) statementExpression -> . expression
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN
    (247) variableModifiers -> . expt_50
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (584) empty -> .
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (534) expt_50 -> . variableModifier
    (535) expt_50 -> . expt_50 variableModifier
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (166) variableModifier -> . FINAL
    (167) variableModifier -> . annotation
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    CASE            reduce using rule 275 (switchBlockStatementGroup -> expr_10 expt_40 .)
    DEFAULT         reduce using rule 275 (switchBlockStatementGroup -> expr_10 expt_40 .)
    BRPAREN         reduce using rule 275 (switchBlockStatementGroup -> expr_10 expt_40 .)
    SEMI            shift and go to state 682
    Identifier      shift and go to state 666
    CONTINUE        shift and go to state 681
    BREAK           shift and go to state 678
    THROW           shift and go to state 686
    RETURN          shift and go to state 660
    SYNCHRONIZED    shift and go to state 661
    SWITCH          shift and go to state 672
    TRY             shift and go to state 665
    DO              shift and go to state 679
    WHILE           shift and go to state 671
    FOR             shift and go to state 664
    IF              shift and go to state 684
    ASSERT          shift and go to state 680
    BLPAREN         shift and go to state 612
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 662
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    conditionalAndExpression       shift and go to state 99
    blockStatement                 shift and go to state 729
    classOrInterfaceType           shift and go to state 164
    booleanLiteral                 shift and go to state 103
    classOrInterfaceDeclaration    shift and go to state 657
    relationalExpression           shift and go to state 107
    variableModifier               shift and go to state 658
    localVariableDeclarationStatement shift and go to state 659
    instanceOfExpression           shift and go to state 108
    inclusiveOrExpression          shift and go to state 113
    additiveExpression             shift and go to state 116
    classDeclaration               shift and go to state 31
    unaryExpressionNotPlusMinus    shift and go to state 120
    annotationTypeDeclaration      shift and go to state 36
    interfaceDeclaration           shift and go to state 24
    andExpression                  shift and go to state 121
    expt_50                        shift and go to state 667
    expression                     shift and go to state 668
    block                          shift and go to state 669
    equalityExpression             shift and go to state 123
    localVariableDeclaration       shift and go to state 670
    exclusiveOrExpression          shift and go to state 105
    primary                        shift and go to state 125
    literal                        shift and go to state 131
    statement                      shift and go to state 673
    type                           shift and go to state 674
    empty                          shift and go to state 25
    conditionalExpression          shift and go to state 264
    enumDeclaration                shift and go to state 27
    FloatingPointLiteral           shift and go to state 134
    primitiveType                  shift and go to state 677
    variableModifiers              shift and go to state 676
    multiplicativeExpression       shift and go to state 145
    normalInterfaceDeclaration     shift and go to state 18
    shiftExpression                shift and go to state 148
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    classOrInterfaceModifiers      shift and go to state 37
    integerLiteral                 shift and go to state 111
    expr_1                         shift and go to state 26
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    conditionalOrExpression        shift and go to state 124
    annotation                     shift and go to state 683
    castExpression                 shift and go to state 154
    classOrInterfaceModifier       shift and go to state 34
    statementExpression            shift and go to state 685

state 922

    (276) switchBlockStatementGroup -> expr_10 empty .
    (20) classOrInterfaceModifiers -> empty .

    CASE            reduce using rule 276 (switchBlockStatementGroup -> expr_10 empty .)
    DEFAULT         reduce using rule 276 (switchBlockStatementGroup -> expr_10 empty .)
    BRPAREN         reduce using rule 276 (switchBlockStatementGroup -> expr_10 empty .)
    CLASS           reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    ENUM            reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    INTERFACE       reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    AT              reduce using rule 20 (classOrInterfaceModifiers -> empty .)


state 923

    (421) expr_10 -> expr_10 switchLabel .

    CASE            reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    DEFAULT         reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    SEMI            reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    Identifier      reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    CONTINUE        reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    BREAK           reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    THROW           reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    RETURN          reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    SYNCHRONIZED    reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    SWITCH          reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    TRY             reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    DO              reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    WHILE           reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    FOR             reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    IF              reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    ASSERT          reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    BLPAREN         reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    BOOLEAN         reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    CHAR            reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    BYTE            reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    SHORT           reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    INT             reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    LONG            reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    FLOAT           reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    DOUBLE          reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    PUBLIC          reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    PROTECTED       reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    PRIVATE         reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    ABSTRACT        reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    STATIC          reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    FINAL           reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    STRICTFP        reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    CLASS           reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    ENUM            reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    INTERFACE       reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    AT              reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    PLUS            reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    DASH            reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    OP_INC          reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    OP_DEC          reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    EXCLAMATION     reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    TILDE           reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    VOID            reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    NEW             reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    SUPER           reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    THIS            reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    LPAREN          reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    CharacterLiteral reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    StringLiteral   reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    NULL            reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    NUMBER          reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    HEX_NUMBER      reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    LONG_NUMBER     reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    LONG_HEX_NUMBER reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    NON_INTEGER_1   reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    NON_INTEGER_2   reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    NON_INTEGER_3   reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    TRUE            reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    FALSE           reduce using rule 421 (expr_10 -> expr_10 switchLabel .)
    BRPAREN         reduce using rule 421 (expr_10 -> expr_10 switchLabel .)


state 924

    (543) expt_56 -> expt_56 switchBlockStatementGroup .

    CASE            reduce using rule 543 (expt_56 -> expt_56 switchBlockStatementGroup .)
    DEFAULT         reduce using rule 543 (expt_56 -> expt_56 switchBlockStatementGroup .)
    BRPAREN         reduce using rule 543 (expt_56 -> expt_56 switchBlockStatementGroup .)


state 925

    (261) statement -> DO statement WHILE parExpression SEMI .

    BRPAREN         reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    SEMI            reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    Identifier      reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    CONTINUE        reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    BREAK           reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    THROW           reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    RETURN          reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    SYNCHRONIZED    reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    SWITCH          reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    TRY             reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    DO              reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    WHILE           reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    FOR             reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    IF              reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    ASSERT          reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    BLPAREN         reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    BOOLEAN         reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    CHAR            reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    BYTE            reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    SHORT           reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    INT             reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    LONG            reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    FLOAT           reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    DOUBLE          reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    PUBLIC          reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    PROTECTED       reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    PRIVATE         reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    ABSTRACT        reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    STATIC          reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    FINAL           reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    STRICTFP        reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    CLASS           reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    ENUM            reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    INTERFACE       reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    AT              reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    PLUS            reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    DASH            reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    OP_INC          reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    OP_DEC          reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    EXCLAMATION     reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    TILDE           reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    VOID            reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    NEW             reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    SUPER           reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    THIS            reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    LPAREN          reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    CharacterLiteral reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    StringLiteral   reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    NULL            reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    NUMBER          reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    HEX_NUMBER      reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    LONG_NUMBER     reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    LONG_HEX_NUMBER reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    NON_INTEGER_1   reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    NON_INTEGER_2   reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    NON_INTEGER_3   reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    TRUE            reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    FALSE           reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    CASE            reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    DEFAULT         reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)
    ELSE            reduce using rule 261 (statement -> DO statement WHILE parExpression SEMI .)


state 926

    (264) statement -> IF parExpression statement ELSE statement .

    BRPAREN         reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    SEMI            reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    Identifier      reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    CONTINUE        reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    BREAK           reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    THROW           reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    RETURN          reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    SYNCHRONIZED    reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    SWITCH          reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    TRY             reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    DO              reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    WHILE           reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    FOR             reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    IF              reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    ASSERT          reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    BLPAREN         reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    BOOLEAN         reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    CHAR            reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    BYTE            reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    SHORT           reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    INT             reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    LONG            reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    FLOAT           reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    DOUBLE          reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    PUBLIC          reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    PROTECTED       reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    PRIVATE         reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    ABSTRACT        reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    STATIC          reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    FINAL           reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    STRICTFP        reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    CLASS           reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    ENUM            reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    INTERFACE       reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    AT              reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    PLUS            reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    DASH            reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    OP_INC          reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    OP_DEC          reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    EXCLAMATION     reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    TILDE           reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    VOID            reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    NEW             reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    SUPER           reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    THIS            reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    LPAREN          reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    CharacterLiteral reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    StringLiteral   reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    NULL            reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    NUMBER          reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    HEX_NUMBER      reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    LONG_NUMBER     reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    LONG_HEX_NUMBER reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    NON_INTEGER_1   reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    NON_INTEGER_2   reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    NON_INTEGER_3   reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    TRUE            reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    FALSE           reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    CASE            reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    DEFAULT         reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)
    ELSE            reduce using rule 264 (statement -> IF parExpression statement ELSE statement .)


state 927

    (183) constructorBody -> BLPAREN expt_39 expt_40 . BRPAREN
    (517) expt_40 -> expt_40 . blockStatement
    (240) blockStatement -> . localVariableDeclarationStatement
    (241) blockStatement -> . classOrInterfaceDeclaration
    (242) blockStatement -> . statement
    (243) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (244) localVariableDeclarationStatement -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (248) statement -> . Identifier COLON statement
    (249) statement -> . statementExpression SEMI
    (250) statement -> . SEMI
    (251) statement -> . CONTINUE Identifier SEMI
    (252) statement -> . CONTINUE SEMI
    (253) statement -> . BREAK Identifier SEMI
    (254) statement -> . BREAK SEMI
    (255) statement -> . THROW expression SEMI
    (256) statement -> . RETURN expt_53 SEMI
    (257) statement -> . RETURN SEMI
    (258) statement -> . SYNCHRONIZED parExpression block
    (259) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (260) statement -> . TRY block expr_9
    (261) statement -> . DO statement WHILE parExpression SEMI
    (262) statement -> . WHILE parExpression statement
    (263) statement -> . FOR LPAREN forControl RPAREN statement
    (264) statement -> . IF parExpression statement ELSE statement
    (265) statement -> . IF parExpression statement
    (266) statement -> . ASSERT expression expt_51 SEMI
    (267) statement -> . ASSERT expression SEMI
    (268) statement -> . block
    (245) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (246) localVariableDeclaration -> . type variableDeclarators
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (296) statementExpression -> . expression
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN
    (247) variableModifiers -> . expt_50
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (584) empty -> .
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (534) expt_50 -> . variableModifier
    (535) expt_50 -> . expt_50 variableModifier
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (166) variableModifier -> . FINAL
    (167) variableModifier -> . annotation
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    BRPAREN         shift and go to state 954
    SEMI            shift and go to state 682
    Identifier      shift and go to state 666
    CONTINUE        shift and go to state 681
    BREAK           shift and go to state 678
    THROW           shift and go to state 686
    RETURN          shift and go to state 660
    SYNCHRONIZED    shift and go to state 661
    SWITCH          shift and go to state 672
    TRY             shift and go to state 665
    DO              shift and go to state 679
    WHILE           shift and go to state 671
    FOR             shift and go to state 664
    IF              shift and go to state 684
    ASSERT          shift and go to state 680
    BLPAREN         shift and go to state 612
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 662
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    conditionalAndExpression       shift and go to state 99
    blockStatement                 shift and go to state 729
    classOrInterfaceType           shift and go to state 164
    booleanLiteral                 shift and go to state 103
    classOrInterfaceDeclaration    shift and go to state 657
    relationalExpression           shift and go to state 107
    variableModifier               shift and go to state 658
    localVariableDeclarationStatement shift and go to state 659
    instanceOfExpression           shift and go to state 108
    inclusiveOrExpression          shift and go to state 113
    additiveExpression             shift and go to state 116
    classDeclaration               shift and go to state 31
    unaryExpressionNotPlusMinus    shift and go to state 120
    annotationTypeDeclaration      shift and go to state 36
    interfaceDeclaration           shift and go to state 24
    andExpression                  shift and go to state 121
    expt_50                        shift and go to state 667
    expression                     shift and go to state 668
    block                          shift and go to state 669
    equalityExpression             shift and go to state 123
    localVariableDeclaration       shift and go to state 670
    exclusiveOrExpression          shift and go to state 105
    primary                        shift and go to state 125
    literal                        shift and go to state 131
    statement                      shift and go to state 673
    type                           shift and go to state 674
    empty                          shift and go to state 25
    conditionalExpression          shift and go to state 264
    enumDeclaration                shift and go to state 27
    FloatingPointLiteral           shift and go to state 134
    primitiveType                  shift and go to state 677
    variableModifiers              shift and go to state 676
    multiplicativeExpression       shift and go to state 145
    normalInterfaceDeclaration     shift and go to state 18
    shiftExpression                shift and go to state 148
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    classOrInterfaceModifiers      shift and go to state 37
    integerLiteral                 shift and go to state 111
    expr_1                         shift and go to state 26
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    conditionalOrExpression        shift and go to state 124
    annotation                     shift and go to state 683
    castExpression                 shift and go to state 154
    classOrInterfaceModifier       shift and go to state 34
    statementExpression            shift and go to state 685

state 928

    (184) constructorBody -> BLPAREN expt_39 empty . BRPAREN
    (20) classOrInterfaceModifiers -> empty .

    BRPAREN         shift and go to state 955
    CLASS           reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    ENUM            reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    INTERFACE       reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    AT              reduce using rule 20 (classOrInterfaceModifiers -> empty .)


state 929

    (187) explicitConstructorInvocation -> primary DOT . expt_41 SUPER arguments SEMI
    (188) explicitConstructorInvocation -> primary DOT . empty SUPER arguments SEMI
    (518) expt_41 -> . nonWildcardTypeArguments
    (519) expt_41 -> . empty
    (584) empty -> .
    (391) nonWildcardTypeArguments -> . LESS typeList MORE

    SUPER           reduce using rule 584 (empty -> .)
    LESS            shift and go to state 238

    nonWildcardTypeArguments       shift and go to state 486
    expt_41                        shift and go to state 956
    empty                          shift and go to state 957

state 930

    (415) expr_6 -> THIS .

    LPAREN          reduce using rule 415 (expr_6 -> THIS .)


state 931

    (416) expr_6 -> SUPER .

    LPAREN          reduce using rule 416 (expr_6 -> SUPER .)


state 932

    (189) explicitConstructorInvocation -> expt_41 expr_6 . arguments SEMI
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

    LPAREN          shift and go to state 204

    arguments                      shift and go to state 958

state 933

    (415) expr_6 -> THIS .
    (367) primary -> THIS . expt_42 identifierSuffix
    (368) primary -> THIS . expt_42
    (369) primary -> THIS . identifierSuffix
    (370) primary -> THIS .
    (520) expt_42 -> . DOT Identifier
    (521) expt_42 -> . expt_42 DOT Identifier
    (372) identifierSuffix -> . suffixStatements DOT CLASS
    (373) identifierSuffix -> . suffixExprStatements
    (374) identifierSuffix -> . arguments
    (375) identifierSuffix -> . DOT CLASS
    (376) identifierSuffix -> . DOT explicitGenericInvocation
    (377) identifierSuffix -> . DOT THIS
    (378) identifierSuffix -> . DOT SUPER arguments
    (379) identifierSuffix -> . DOT NEW innerCreator
    (433) suffixStatements -> . FLPAREN FRPAREN
    (434) suffixStatements -> . suffixStatements FLPAREN FRPAREN
    (435) suffixExprStatements -> . FLPAREN expression FRPAREN
    (436) suffixExprStatements -> . suffixExprStatements FLPAREN expression FRPAREN
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    OP_INC          reduce using rule 370 (primary -> THIS .)
    OP_DEC          reduce using rule 370 (primary -> THIS .)
    MULT            reduce using rule 370 (primary -> THIS .)
    SLASH           reduce using rule 370 (primary -> THIS .)
    PERCENT         reduce using rule 370 (primary -> THIS .)
    PLUS            reduce using rule 370 (primary -> THIS .)
    DASH            reduce using rule 370 (primary -> THIS .)
    OP_SHR          reduce using rule 370 (primary -> THIS .)
    OP_SHL          reduce using rule 370 (primary -> THIS .)
    OP_SHRR         reduce using rule 370 (primary -> THIS .)
    OP_LE           reduce using rule 370 (primary -> THIS .)
    OP_GE           reduce using rule 370 (primary -> THIS .)
    LESS            reduce using rule 370 (primary -> THIS .)
    MORE            reduce using rule 370 (primary -> THIS .)
    INSTANCEOF      reduce using rule 370 (primary -> THIS .)
    OP_EQ           reduce using rule 370 (primary -> THIS .)
    OP_NE           reduce using rule 370 (primary -> THIS .)
    AND             reduce using rule 370 (primary -> THIS .)
    CARET           reduce using rule 370 (primary -> THIS .)
    VERTICAL        reduce using rule 370 (primary -> THIS .)
    OP_LAND         reduce using rule 370 (primary -> THIS .)
    OP_LOR          reduce using rule 370 (primary -> THIS .)
    QUES            reduce using rule 370 (primary -> THIS .)
    EQUALS          reduce using rule 370 (primary -> THIS .)
    ASS_ADD         reduce using rule 370 (primary -> THIS .)
    ASS_SUB         reduce using rule 370 (primary -> THIS .)
    ASS_MUL         reduce using rule 370 (primary -> THIS .)
    ASS_DIV         reduce using rule 370 (primary -> THIS .)
    ASS_AND         reduce using rule 370 (primary -> THIS .)
    ASS_OR          reduce using rule 370 (primary -> THIS .)
    ASS_XOR         reduce using rule 370 (primary -> THIS .)
    ASS_MOD         reduce using rule 370 (primary -> THIS .)
    ASS_SHL         reduce using rule 370 (primary -> THIS .)
    ASS_SHRR        reduce using rule 370 (primary -> THIS .)
    ASS_SHR         reduce using rule 370 (primary -> THIS .)
    SEMI            reduce using rule 370 (primary -> THIS .)
    DOT             shift and go to state 205
    FLPAREN         shift and go to state 201
    LPAREN          shift and go to state 204

  ! LPAREN          [ reduce using rule 415 (expr_6 -> THIS .) ]
  ! FLPAREN         [ reduce using rule 370 (primary -> THIS .) ]
  ! DOT             [ reduce using rule 370 (primary -> THIS .) ]

    identifierSuffix               shift and go to state 199
    suffixStatements               shift and go to state 200
    suffixExprStatements           shift and go to state 202
    arguments                      shift and go to state 203
    expt_42                        shift and go to state 206

state 934

    (185) constructorBody -> BLPAREN empty expt_40 . BRPAREN
    (517) expt_40 -> expt_40 . blockStatement
    (240) blockStatement -> . localVariableDeclarationStatement
    (241) blockStatement -> . classOrInterfaceDeclaration
    (242) blockStatement -> . statement
    (243) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (244) localVariableDeclarationStatement -> . SEMI
    (17) classOrInterfaceDeclaration -> . classOrInterfaceModifiers expr_1
    (18) classOrInterfaceDeclaration -> . expr_1
    (248) statement -> . Identifier COLON statement
    (249) statement -> . statementExpression SEMI
    (250) statement -> . SEMI
    (251) statement -> . CONTINUE Identifier SEMI
    (252) statement -> . CONTINUE SEMI
    (253) statement -> . BREAK Identifier SEMI
    (254) statement -> . BREAK SEMI
    (255) statement -> . THROW expression SEMI
    (256) statement -> . RETURN expt_53 SEMI
    (257) statement -> . RETURN SEMI
    (258) statement -> . SYNCHRONIZED parExpression block
    (259) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (260) statement -> . TRY block expr_9
    (261) statement -> . DO statement WHILE parExpression SEMI
    (262) statement -> . WHILE parExpression statement
    (263) statement -> . FOR LPAREN forControl RPAREN statement
    (264) statement -> . IF parExpression statement ELSE statement
    (265) statement -> . IF parExpression statement
    (266) statement -> . ASSERT expression expt_51 SEMI
    (267) statement -> . ASSERT expression SEMI
    (268) statement -> . block
    (245) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (246) localVariableDeclaration -> . type variableDeclarators
    (19) classOrInterfaceModifiers -> . expt_5
    (20) classOrInterfaceModifiers -> . empty
    (405) expr_1 -> . classDeclaration
    (406) expr_1 -> . interfaceDeclaration
    (296) statementExpression -> . expression
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN
    (247) variableModifiers -> . expt_50
    (150) type -> . primitiveType expt_24
    (151) type -> . primitiveType empty
    (152) type -> . classOrInterfaceType expt_24
    (153) type -> . classOrInterfaceType empty
    (449) expt_5 -> . classOrInterfaceModifier
    (450) expt_5 -> . expt_5 classOrInterfaceModifier
    (584) empty -> .
    (31) classDeclaration -> . normalClassDeclaration
    (32) classDeclaration -> . enumDeclaration
    (69) interfaceDeclaration -> . normalInterfaceDeclaration
    (70) interfaceDeclaration -> . annotationTypeDeclaration
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (534) expt_50 -> . variableModifier
    (535) expt_50 -> . expt_50 variableModifier
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (154) classOrInterfaceType -> . Identifier expt_32 expt_33
    (155) classOrInterfaceType -> . Identifier expt_32 empty
    (156) classOrInterfaceType -> . Identifier empty expt_33
    (157) classOrInterfaceType -> . Identifier empty empty
    (21) classOrInterfaceModifier -> . annotation
    (22) classOrInterfaceModifier -> . PUBLIC
    (23) classOrInterfaceModifier -> . PROTECTED
    (24) classOrInterfaceModifier -> . PRIVATE
    (25) classOrInterfaceModifier -> . ABSTRACT
    (26) classOrInterfaceModifier -> . STATIC
    (27) classOrInterfaceModifier -> . FINAL
    (28) classOrInterfaceModifier -> . STRICTFP
    (33) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 expt_9 classBody
    (34) normalClassDeclaration -> . CLASS Identifier typeParameters expt_8 empty classBody
    (35) normalClassDeclaration -> . CLASS Identifier typeParameters empty expt_9 classBody
    (36) normalClassDeclaration -> . CLASS Identifier typeParameters empty empty classBody
    (37) normalClassDeclaration -> . CLASS Identifier empty expt_8 expt_9 classBody
    (38) normalClassDeclaration -> . CLASS Identifier empty expt_8 empty classBody
    (39) normalClassDeclaration -> . CLASS Identifier empty empty expt_9 classBody
    (40) normalClassDeclaration -> . CLASS Identifier empty empty empty classBody
    (47) enumDeclaration -> . ENUM Identifier expt_9 enumBody
    (48) enumDeclaration -> . ENUM Identifier empty enumBody
    (71) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters expt_21 interfaceBody
    (72) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters empty interfaceBody
    (73) normalInterfaceDeclaration -> . INTERFACE Identifier empty expt_21 interfaceBody
    (74) normalInterfaceDeclaration -> . INTERFACE Identifier empty empty interfaceBody
    (219) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (166) variableModifier -> . FINAL
    (167) variableModifier -> . annotation
    (203) annotation -> . AT annotationName LPAREN elementValuePairs RPAREN
    (204) annotation -> . AT annotationName LPAREN elementValue RPAREN
    (205) annotation -> . AT annotationName LPAREN RPAREN
    (206) annotation -> . AT annotationName
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for AT resolved as shift
    BRPAREN         shift and go to state 959
    SEMI            shift and go to state 682
    Identifier      shift and go to state 666
    CONTINUE        shift and go to state 681
    BREAK           shift and go to state 678
    THROW           shift and go to state 686
    RETURN          shift and go to state 660
    SYNCHRONIZED    shift and go to state 661
    SWITCH          shift and go to state 672
    TRY             shift and go to state 665
    DO              shift and go to state 679
    WHILE           shift and go to state 671
    FOR             shift and go to state 664
    IF              shift and go to state 684
    ASSERT          shift and go to state 680
    BLPAREN         shift and go to state 612
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    PUBLIC          shift and go to state 40
    PROTECTED       shift and go to state 16
    PRIVATE         shift and go to state 22
    ABSTRACT        shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 662
    STRICTFP        shift and go to state 23
    CLASS           shift and go to state 35
    ENUM            shift and go to state 29
    INTERFACE       shift and go to state 39
    AT              shift and go to state 55
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

  ! CLASS           [ reduce using rule 584 (empty -> .) ]
  ! ENUM            [ reduce using rule 584 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 584 (empty -> .) ]
  ! AT              [ reduce using rule 584 (empty -> .) ]

    conditionalAndExpression       shift and go to state 99
    blockStatement                 shift and go to state 729
    classOrInterfaceType           shift and go to state 164
    booleanLiteral                 shift and go to state 103
    classOrInterfaceDeclaration    shift and go to state 657
    relationalExpression           shift and go to state 107
    variableModifier               shift and go to state 658
    localVariableDeclarationStatement shift and go to state 659
    instanceOfExpression           shift and go to state 108
    inclusiveOrExpression          shift and go to state 113
    additiveExpression             shift and go to state 116
    classDeclaration               shift and go to state 31
    unaryExpressionNotPlusMinus    shift and go to state 120
    annotationTypeDeclaration      shift and go to state 36
    interfaceDeclaration           shift and go to state 24
    andExpression                  shift and go to state 121
    expt_50                        shift and go to state 667
    expression                     shift and go to state 668
    block                          shift and go to state 669
    equalityExpression             shift and go to state 123
    localVariableDeclaration       shift and go to state 670
    exclusiveOrExpression          shift and go to state 105
    primary                        shift and go to state 125
    literal                        shift and go to state 131
    statement                      shift and go to state 673
    type                           shift and go to state 674
    empty                          shift and go to state 25
    conditionalExpression          shift and go to state 264
    enumDeclaration                shift and go to state 27
    FloatingPointLiteral           shift and go to state 134
    primitiveType                  shift and go to state 677
    variableModifiers              shift and go to state 676
    multiplicativeExpression       shift and go to state 145
    normalInterfaceDeclaration     shift and go to state 18
    shiftExpression                shift and go to state 148
    normalClassDeclaration         shift and go to state 20
    expt_5                         shift and go to state 21
    classOrInterfaceModifiers      shift and go to state 37
    integerLiteral                 shift and go to state 111
    expr_1                         shift and go to state 26
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    conditionalOrExpression        shift and go to state 124
    annotation                     shift and go to state 683
    castExpression                 shift and go to state 154
    classOrInterfaceModifier       shift and go to state 34
    statementExpression            shift and go to state 685

state 935

    (186) constructorBody -> BLPAREN empty empty . BRPAREN
    (20) classOrInterfaceModifiers -> empty .

    BRPAREN         shift and go to state 960
    CLASS           reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    ENUM            reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    INTERFACE       reduce using rule 20 (classOrInterfaceModifiers -> empty .)
    AT              reduce using rule 20 (classOrInterfaceModifiers -> empty .)


state 936

    (190) explicitConstructorInvocation -> empty expr_6 . arguments SEMI
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

    LPAREN          shift and go to state 204

    arguments                      shift and go to state 961

state 937

    (416) expr_6 -> SUPER .
    (366) primary -> SUPER . superSuffix
    (398) superSuffix -> . DOT Identifier expt_18
    (399) superSuffix -> . DOT Identifier empty
    (400) superSuffix -> . arguments
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    DOT             shift and go to state 271
    LPAREN          shift and go to state 204

  ! LPAREN          [ reduce using rule 416 (expr_6 -> SUPER .) ]

    superSuffix                    shift and go to state 270
    arguments                      shift and go to state 272

state 938

    (508) expt_36 -> COMMA qualifiedName .

    COMMA           reduce using rule 508 (expt_36 -> COMMA qualifiedName .)
    BLPAREN         reduce using rule 508 (expt_36 -> COMMA qualifiedName .)
    SEMI            reduce using rule 508 (expt_36 -> COMMA qualifiedName .)


state 939

    (509) expt_36 -> expt_36 COMMA . qualifiedName
    (191) qualifiedName -> . Identifier expt_42
    (192) qualifiedName -> . Identifier empty

    Identifier      shift and go to state 10

    qualifiedName                  shift and go to state 962

state 940

    (512) expt_38 -> COMMA formalParameterDecls .

    RPAREN          reduce using rule 512 (expt_38 -> COMMA formalParameterDecls .)


state 941

    (107) methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .

    BRPAREN         reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    SEMI            reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    STATIC          reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    PUBLIC          reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    PROTECTED       reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    PRIVATE         reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    ABSTRACT        reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    FINAL           reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    NATIVE          reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    SYNCHRONIZED    reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    TRANSIENT       reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    VOLATILE        reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    STRICTFP        reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    AT              reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    VOID            reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    Identifier      reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    LESS            reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    INTERFACE       reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    CLASS           reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    ENUM            reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    BOOLEAN         reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    CHAR            reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    BYTE            reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    SHORT           reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    INT             reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    LONG            reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    FLOAT           reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    DOUBLE          reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)
    BLPAREN         reduce using rule 107 (methodDeclaratorRest -> formalParameters expt_24 expt_25 expr_4 .)


state 942

    (108) methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .

    BRPAREN         reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    SEMI            reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    STATIC          reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    PUBLIC          reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    PROTECTED       reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    PRIVATE         reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    ABSTRACT        reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    FINAL           reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    NATIVE          reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    SYNCHRONIZED    reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    TRANSIENT       reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    VOLATILE        reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    STRICTFP        reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    AT              reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    VOID            reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    Identifier      reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    LESS            reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    INTERFACE       reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    CLASS           reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    ENUM            reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    BOOLEAN         reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    CHAR            reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    BYTE            reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    SHORT           reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    INT             reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    LONG            reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    FLOAT           reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    DOUBLE          reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)
    BLPAREN         reduce using rule 108 (methodDeclaratorRest -> formalParameters expt_24 empty expr_4 .)


state 943

    (109) methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .

    BRPAREN         reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    SEMI            reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    STATIC          reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    PUBLIC          reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    PROTECTED       reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    PRIVATE         reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    ABSTRACT        reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    FINAL           reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    NATIVE          reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    SYNCHRONIZED    reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    TRANSIENT       reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    VOLATILE        reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    STRICTFP        reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    AT              reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    VOID            reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    Identifier      reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    LESS            reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    INTERFACE       reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    CLASS           reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    ENUM            reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    BOOLEAN         reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    CHAR            reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    BYTE            reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    SHORT           reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    INT             reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    LONG            reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    FLOAT           reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    DOUBLE          reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)
    BLPAREN         reduce using rule 109 (methodDeclaratorRest -> formalParameters empty expt_25 expr_4 .)


state 944

    (110) methodDeclaratorRest -> formalParameters empty empty expr_4 .

    BRPAREN         reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    SEMI            reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    STATIC          reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    PUBLIC          reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    PROTECTED       reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    PRIVATE         reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    ABSTRACT        reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    FINAL           reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    NATIVE          reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    SYNCHRONIZED    reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    TRANSIENT       reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    VOLATILE        reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    STRICTFP        reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    AT              reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    VOID            reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    Identifier      reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    LESS            reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    INTERFACE       reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    CLASS           reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    ENUM            reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    BOOLEAN         reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    CHAR            reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    BYTE            reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    SHORT           reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    INT             reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    LONG            reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    FLOAT           reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    DOUBLE          reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)
    BLPAREN         reduce using rule 110 (methodDeclaratorRest -> formalParameters empty empty expr_4 .)


state 945

    (280) forControl -> expt_57 SEMI expt_58 SEMI . expt_59
    (281) forControl -> expt_57 SEMI expt_58 SEMI . empty
    (548) expt_59 -> . forUpdate
    (549) expt_59 -> . empty
    (584) empty -> .
    (292) forUpdate -> . expressionList
    (294) expressionList -> . expression expt_60
    (295) expressionList -> . expression
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    RPAREN          reduce using rule 584 (empty -> .)
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    conditionalExpression          shift and go to state 264
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    expressionList                 shift and go to state 964
    integerLiteral                 shift and go to state 111
    empty                          shift and go to state 965
    additiveExpression             shift and go to state 116
    forUpdate                      shift and go to state 966
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    expt_59                        shift and go to state 963
    andExpression                  shift and go to state 121
    expression                     shift and go to state 347

state 946

    (282) forControl -> expt_57 SEMI empty SEMI . expt_59
    (283) forControl -> expt_57 SEMI empty SEMI . empty
    (548) expt_59 -> . forUpdate
    (549) expt_59 -> . empty
    (584) empty -> .
    (292) forUpdate -> . expressionList
    (294) expressionList -> . expression expt_60
    (295) expressionList -> . expression
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    RPAREN          reduce using rule 584 (empty -> .)
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    conditionalExpression          shift and go to state 264
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    expressionList                 shift and go to state 964
    integerLiteral                 shift and go to state 111
    empty                          shift and go to state 968
    additiveExpression             shift and go to state 116
    forUpdate                      shift and go to state 966
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    expt_59                        shift and go to state 967
    andExpression                  shift and go to state 121
    expression                     shift and go to state 347

state 947

    (284) forControl -> empty SEMI expt_58 SEMI . expt_59
    (285) forControl -> empty SEMI expt_58 SEMI . empty
    (548) expt_59 -> . forUpdate
    (549) expt_59 -> . empty
    (584) empty -> .
    (292) forUpdate -> . expressionList
    (294) expressionList -> . expression expt_60
    (295) expressionList -> . expression
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    RPAREN          reduce using rule 584 (empty -> .)
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    conditionalExpression          shift and go to state 264
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    expressionList                 shift and go to state 964
    integerLiteral                 shift and go to state 111
    empty                          shift and go to state 970
    additiveExpression             shift and go to state 116
    forUpdate                      shift and go to state 966
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    expt_59                        shift and go to state 969
    andExpression                  shift and go to state 121
    expression                     shift and go to state 347

state 948

    (286) forControl -> empty SEMI empty SEMI . expt_59
    (287) forControl -> empty SEMI empty SEMI . empty
    (548) expt_59 -> . forUpdate
    (549) expt_59 -> . empty
    (584) empty -> .
    (292) forUpdate -> . expressionList
    (294) expressionList -> . expression expt_60
    (295) expressionList -> . expression
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    RPAREN          reduce using rule 584 (empty -> .)
    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    conditionalExpression          shift and go to state 264
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    expressionList                 shift and go to state 964
    integerLiteral                 shift and go to state 111
    empty                          shift and go to state 972
    additiveExpression             shift and go to state 116
    forUpdate                      shift and go to state 966
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    expt_59                        shift and go to state 971
    andExpression                  shift and go to state 121
    expression                     shift and go to state 347

state 949

    (291) enhancedForControl -> variableModifiers type Identifier COLON . expression
    (298) expression -> . conditionalExpression assignmentOperator expression
    (299) expression -> . conditionalExpression
    (312) conditionalExpression -> . conditionalOrExpression QUES expression COLON expression
    (313) conditionalExpression -> . conditionalOrExpression
    (314) conditionalOrExpression -> . conditionalAndExpression expt_63
    (315) conditionalOrExpression -> . conditionalAndExpression
    (316) conditionalAndExpression -> . inclusiveOrExpression expt_64
    (317) conditionalAndExpression -> . inclusiveOrExpression
    (318) inclusiveOrExpression -> . exclusiveOrExpression expt_65
    (319) inclusiveOrExpression -> . exclusiveOrExpression
    (320) exclusiveOrExpression -> . andExpression expt_66
    (321) exclusiveOrExpression -> . andExpression
    (322) andExpression -> . equalityExpression expt_67
    (323) andExpression -> . equalityExpression
    (324) equalityExpression -> . instanceOfExpression expt_68
    (325) equalityExpression -> . instanceOfExpression
    (326) instanceOfExpression -> . relationalExpression INSTANCEOF type
    (327) instanceOfExpression -> . relationalExpression
    (328) relationalExpression -> . shiftExpression expt_70
    (329) relationalExpression -> . shiftExpression
    (334) shiftExpression -> . additiveExpression expt_71
    (335) shiftExpression -> . additiveExpression
    (339) additiveExpression -> . multiplicativeExpression expt_72
    (340) additiveExpression -> . multiplicativeExpression
    (341) multiplicativeExpression -> . unaryExpression expt_73
    (342) multiplicativeExpression -> . unaryExpression
    (343) unaryExpression -> . PLUS unaryExpression
    (344) unaryExpression -> . DASH unaryExpression
    (345) unaryExpression -> . OP_INC unaryExpression
    (346) unaryExpression -> . OP_DEC unaryExpression
    (347) unaryExpression -> . unaryExpressionNotPlusMinus
    (348) unaryExpressionNotPlusMinus -> . primary expt_74 expr_14
    (349) unaryExpressionNotPlusMinus -> . primary expr_14
    (350) unaryExpressionNotPlusMinus -> . primary expt_74
    (351) unaryExpressionNotPlusMinus -> . primary
    (352) unaryExpressionNotPlusMinus -> . castExpression
    (353) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (354) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (357) primary -> . VOID DOT CLASS
    (358) primary -> . primitiveType expt_24 DOT CLASS
    (359) primary -> . primitiveType DOT CLASS
    (360) primary -> . Identifier expt_42 identifierSuffix
    (361) primary -> . Identifier expt_42
    (362) primary -> . Identifier identifierSuffix
    (363) primary -> . Identifier
    (364) primary -> . NEW creator
    (365) primary -> . literal
    (366) primary -> . SUPER superSuffix
    (367) primary -> . THIS expt_42 identifierSuffix
    (368) primary -> . THIS expt_42
    (369) primary -> . THIS identifierSuffix
    (370) primary -> . THIS
    (371) primary -> . parExpression
    (355) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (356) castExpression -> . LPAREN expr_15 RPAREN unaryExpressionNotPlusMinus
    (158) primitiveType -> . BOOLEAN
    (159) primitiveType -> . CHAR
    (160) primitiveType -> . BYTE
    (161) primitiveType -> . SHORT
    (162) primitiveType -> . INT
    (163) primitiveType -> . LONG
    (164) primitiveType -> . FLOAT
    (165) primitiveType -> . DOUBLE
    (193) literal -> . integerLiteral
    (194) literal -> . FloatingPointLiteral
    (195) literal -> . CharacterLiteral
    (196) literal -> . StringLiteral
    (197) literal -> . booleanLiteral
    (198) literal -> . NULL
    (293) parExpression -> . LPAREN expression RPAREN
    (580) integerLiteral -> . NUMBER
    (581) integerLiteral -> . HEX_NUMBER
    (582) integerLiteral -> . LONG_NUMBER
    (583) integerLiteral -> . LONG_HEX_NUMBER
    (577) FloatingPointLiteral -> . NON_INTEGER_1
    (578) FloatingPointLiteral -> . NON_INTEGER_2
    (579) FloatingPointLiteral -> . NON_INTEGER_3
    (199) booleanLiteral -> . TRUE
    (200) booleanLiteral -> . FALSE

    PLUS            shift and go to state 104
    DASH            shift and go to state 106
    OP_INC          shift and go to state 127
    OP_DEC          shift and go to state 129
    EXCLAMATION     shift and go to state 97
    TILDE           shift and go to state 132
    VOID            shift and go to state 98
    Identifier      shift and go to state 186
    NEW             shift and go to state 130
    SUPER           shift and go to state 156
    THIS            shift and go to state 109
    LPAREN          shift and go to state 151
    BOOLEAN         shift and go to state 139
    CHAR            shift and go to state 126
    BYTE            shift and go to state 135
    SHORT           shift and go to state 112
    INT             shift and go to state 119
    LONG            shift and go to state 102
    FLOAT           shift and go to state 155
    DOUBLE          shift and go to state 110
    CharacterLiteral shift and go to state 118
    StringLiteral   shift and go to state 137
    NULL            shift and go to state 147
    NUMBER          shift and go to state 146
    HEX_NUMBER      shift and go to state 141
    LONG_NUMBER     shift and go to state 114
    LONG_HEX_NUMBER shift and go to state 128
    NON_INTEGER_1   shift and go to state 144
    NON_INTEGER_2   shift and go to state 142
    NON_INTEGER_3   shift and go to state 143
    TRUE            shift and go to state 100
    FALSE           shift and go to state 136

    equalityExpression             shift and go to state 123
    inclusiveOrExpression          shift and go to state 113
    multiplicativeExpression       shift and go to state 145
    exclusiveOrExpression          shift and go to state 105
    conditionalAndExpression       shift and go to state 99
    shiftExpression                shift and go to state 148
    booleanLiteral                 shift and go to state 103
    literal                        shift and go to state 131
    integerLiteral                 shift and go to state 111
    additiveExpression             shift and go to state 116
    conditionalExpression          shift and go to state 264
    unaryExpression                shift and go to state 149
    parExpression                  shift and go to state 150
    FloatingPointLiteral           shift and go to state 134
    primary                        shift and go to state 125
    relationalExpression           shift and go to state 107
    conditionalOrExpression        shift and go to state 124
    instanceOfExpression           shift and go to state 108
    castExpression                 shift and go to state 154
    unaryExpressionNotPlusMinus    shift and go to state 120
    primitiveType                  shift and go to state 138
    andExpression                  shift and go to state 121
    expression                     shift and go to state 973

state 950

    (271) catchClause -> CATCH LPAREN formalParameter RPAREN . block
    (238) block -> . BLPAREN expt_40 BRPAREN
    (239) block -> . BLPAREN empty BRPAREN

    BLPAREN         shift and go to state 612

    block                          shift and go to state 974

state 951

    (272) formalParameter -> variableModifiers type . variableDeclaratorId
    (131) variableDeclaratorId -> . Identifier expt_24
    (132) variableDeclaratorId -> . Identifier empty

    Identifier      shift and go to state 704

    variableDeclaratorId           shift and go to state 975

state 952

    (278) switchLabel -> CASE enumConstantName COLON .

    CASE            reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    DEFAULT         reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    SEMI            reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    Identifier      reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    CONTINUE        reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    BREAK           reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    THROW           reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    RETURN          reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    SYNCHRONIZED    reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    SWITCH          reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    TRY             reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    DO              reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    WHILE           reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    FOR             reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    IF              reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    ASSERT          reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    BLPAREN         reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    BOOLEAN         reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    CHAR            reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    BYTE            reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    SHORT           reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    INT             reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    LONG            reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    FLOAT           reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    DOUBLE          reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    PUBLIC          reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    PROTECTED       reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    PRIVATE         reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    ABSTRACT        reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    STATIC          reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    FINAL           reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    STRICTFP        reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    CLASS           reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    ENUM            reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    INTERFACE       reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    AT              reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    PLUS            reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    DASH            reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    OP_INC          reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    OP_DEC          reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    EXCLAMATION     reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    TILDE           reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    VOID            reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    NEW             reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    SUPER           reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    THIS            reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    LPAREN          reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    CharacterLiteral reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    StringLiteral   reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    NULL            reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    NUMBER          reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    HEX_NUMBER      reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    LONG_NUMBER     reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    LONG_HEX_NUMBER reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    NON_INTEGER_1   reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    NON_INTEGER_2   reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    NON_INTEGER_3   reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    TRUE            reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    FALSE           reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)
    BRPAREN         reduce using rule 278 (switchLabel -> CASE enumConstantName COLON .)


state 953

    (277) switchLabel -> CASE constantExpression COLON .

    CASE            reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    DEFAULT         reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    SEMI            reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    Identifier      reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    CONTINUE        reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    BREAK           reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    THROW           reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    RETURN          reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    SYNCHRONIZED    reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    SWITCH          reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    TRY             reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    DO              reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    WHILE           reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    FOR             reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    IF              reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    ASSERT          reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    BLPAREN         reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    BOOLEAN         reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    CHAR            reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    BYTE            reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    SHORT           reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    INT             reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    LONG            reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    FLOAT           reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    DOUBLE          reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    PUBLIC          reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    PROTECTED       reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    PRIVATE         reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    ABSTRACT        reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    STATIC          reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    FINAL           reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    STRICTFP        reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    CLASS           reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    ENUM            reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    INTERFACE       reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    AT              reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    PLUS            reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    DASH            reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    OP_INC          reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    OP_DEC          reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    EXCLAMATION     reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    TILDE           reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    VOID            reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    NEW             reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    SUPER           reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    THIS            reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    LPAREN          reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    CharacterLiteral reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    StringLiteral   reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    NULL            reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    NUMBER          reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    HEX_NUMBER      reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    LONG_NUMBER     reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    LONG_HEX_NUMBER reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    NON_INTEGER_1   reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    NON_INTEGER_2   reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    NON_INTEGER_3   reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    TRUE            reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    FALSE           reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)
    BRPAREN         reduce using rule 277 (switchLabel -> CASE constantExpression COLON .)


state 954

    (183) constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .

    BRPAREN         reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    SEMI            reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    STATIC          reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    PUBLIC          reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    PROTECTED       reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    PRIVATE         reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    ABSTRACT        reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    FINAL           reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    NATIVE          reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    SYNCHRONIZED    reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    TRANSIENT       reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    VOLATILE        reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    STRICTFP        reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    AT              reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    VOID            reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    Identifier      reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    LESS            reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    INTERFACE       reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    CLASS           reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    ENUM            reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    BOOLEAN         reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    CHAR            reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    BYTE            reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    SHORT           reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    INT             reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    LONG            reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    FLOAT           reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    DOUBLE          reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)
    BLPAREN         reduce using rule 183 (constructorBody -> BLPAREN expt_39 expt_40 BRPAREN .)


state 955

    (184) constructorBody -> BLPAREN expt_39 empty BRPAREN .

    BRPAREN         reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    SEMI            reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    STATIC          reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    PUBLIC          reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    PROTECTED       reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    PRIVATE         reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    ABSTRACT        reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    FINAL           reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    NATIVE          reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    SYNCHRONIZED    reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    TRANSIENT       reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    VOLATILE        reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    STRICTFP        reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    AT              reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    VOID            reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    Identifier      reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    LESS            reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    INTERFACE       reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    CLASS           reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    ENUM            reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    BOOLEAN         reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    CHAR            reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    BYTE            reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    SHORT           reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    INT             reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    LONG            reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    FLOAT           reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    DOUBLE          reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)
    BLPAREN         reduce using rule 184 (constructorBody -> BLPAREN expt_39 empty BRPAREN .)


state 956

    (187) explicitConstructorInvocation -> primary DOT expt_41 . SUPER arguments SEMI

    SUPER           shift and go to state 976


state 957

    (188) explicitConstructorInvocation -> primary DOT empty . SUPER arguments SEMI
    (519) expt_41 -> empty .

  ! shift/reduce conflict for SUPER resolved as shift
    SUPER           shift and go to state 977

  ! SUPER           [ reduce using rule 519 (expt_41 -> empty .) ]


state 958

    (189) explicitConstructorInvocation -> expt_41 expr_6 arguments . SEMI

    SEMI            shift and go to state 978


state 959

    (185) constructorBody -> BLPAREN empty expt_40 BRPAREN .

    BRPAREN         reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    SEMI            reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    STATIC          reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    PUBLIC          reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    PROTECTED       reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    PRIVATE         reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    ABSTRACT        reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    FINAL           reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    NATIVE          reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    SYNCHRONIZED    reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    TRANSIENT       reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    VOLATILE        reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    STRICTFP        reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    AT              reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    VOID            reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    Identifier      reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    LESS            reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    INTERFACE       reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    CLASS           reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    ENUM            reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    BOOLEAN         reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    CHAR            reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    BYTE            reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    SHORT           reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    INT             reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    LONG            reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    FLOAT           reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    DOUBLE          reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)
    BLPAREN         reduce using rule 185 (constructorBody -> BLPAREN empty expt_40 BRPAREN .)


state 960

    (186) constructorBody -> BLPAREN empty empty BRPAREN .

    BRPAREN         reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    SEMI            reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    STATIC          reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    PUBLIC          reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    PROTECTED       reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    PRIVATE         reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    ABSTRACT        reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    FINAL           reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    NATIVE          reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    SYNCHRONIZED    reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    TRANSIENT       reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    VOLATILE        reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    STRICTFP        reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    AT              reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    VOID            reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    Identifier      reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    LESS            reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    INTERFACE       reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    CLASS           reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    ENUM            reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    BOOLEAN         reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    CHAR            reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    BYTE            reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    SHORT           reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    INT             reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    LONG            reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    FLOAT           reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    DOUBLE          reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)
    BLPAREN         reduce using rule 186 (constructorBody -> BLPAREN empty empty BRPAREN .)


state 961

    (190) explicitConstructorInvocation -> empty expr_6 arguments . SEMI

    SEMI            shift and go to state 979


state 962

    (509) expt_36 -> expt_36 COMMA qualifiedName .

    COMMA           reduce using rule 509 (expt_36 -> expt_36 COMMA qualifiedName .)
    BLPAREN         reduce using rule 509 (expt_36 -> expt_36 COMMA qualifiedName .)
    SEMI            reduce using rule 509 (expt_36 -> expt_36 COMMA qualifiedName .)


state 963

    (280) forControl -> expt_57 SEMI expt_58 SEMI expt_59 .

    RPAREN          reduce using rule 280 (forControl -> expt_57 SEMI expt_58 SEMI expt_59 .)


state 964

    (292) forUpdate -> expressionList .

    RPAREN          reduce using rule 292 (forUpdate -> expressionList .)


state 965

    (281) forControl -> expt_57 SEMI expt_58 SEMI empty .
    (549) expt_59 -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 281 (forControl -> expt_57 SEMI expt_58 SEMI empty .)
    RPAREN          reduce using rule 281 (forControl -> expt_57 SEMI expt_58 SEMI empty .)

  ! RPAREN          [ reduce using rule 549 (expt_59 -> empty .) ]


state 966

    (548) expt_59 -> forUpdate .

    RPAREN          reduce using rule 548 (expt_59 -> forUpdate .)


state 967

    (282) forControl -> expt_57 SEMI empty SEMI expt_59 .

    RPAREN          reduce using rule 282 (forControl -> expt_57 SEMI empty SEMI expt_59 .)


state 968

    (283) forControl -> expt_57 SEMI empty SEMI empty .
    (549) expt_59 -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 283 (forControl -> expt_57 SEMI empty SEMI empty .)
    RPAREN          reduce using rule 283 (forControl -> expt_57 SEMI empty SEMI empty .)

  ! RPAREN          [ reduce using rule 549 (expt_59 -> empty .) ]


state 969

    (284) forControl -> empty SEMI expt_58 SEMI expt_59 .

    RPAREN          reduce using rule 284 (forControl -> empty SEMI expt_58 SEMI expt_59 .)


state 970

    (285) forControl -> empty SEMI expt_58 SEMI empty .
    (549) expt_59 -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 285 (forControl -> empty SEMI expt_58 SEMI empty .)
    RPAREN          reduce using rule 285 (forControl -> empty SEMI expt_58 SEMI empty .)

  ! RPAREN          [ reduce using rule 549 (expt_59 -> empty .) ]


state 971

    (286) forControl -> empty SEMI empty SEMI expt_59 .

    RPAREN          reduce using rule 286 (forControl -> empty SEMI empty SEMI expt_59 .)


state 972

    (287) forControl -> empty SEMI empty SEMI empty .
    (549) expt_59 -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 287 (forControl -> empty SEMI empty SEMI empty .)
    RPAREN          reduce using rule 287 (forControl -> empty SEMI empty SEMI empty .)

  ! RPAREN          [ reduce using rule 549 (expt_59 -> empty .) ]


state 973

    (291) enhancedForControl -> variableModifiers type Identifier COLON expression .

    RPAREN          reduce using rule 291 (enhancedForControl -> variableModifiers type Identifier COLON expression .)


state 974

    (271) catchClause -> CATCH LPAREN formalParameter RPAREN block .

    CATCH           reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    FINALLY         reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    BRPAREN         reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    SEMI            reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    Identifier      reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    CONTINUE        reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    BREAK           reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    THROW           reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    RETURN          reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    SYNCHRONIZED    reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    SWITCH          reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    TRY             reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    DO              reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    WHILE           reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    FOR             reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    IF              reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    ASSERT          reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    BLPAREN         reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    BOOLEAN         reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    CHAR            reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    BYTE            reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    SHORT           reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    INT             reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    LONG            reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    FLOAT           reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    DOUBLE          reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    PUBLIC          reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    PROTECTED       reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    PRIVATE         reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    ABSTRACT        reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    STATIC          reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    FINAL           reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    STRICTFP        reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    CLASS           reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    ENUM            reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    INTERFACE       reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    AT              reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    PLUS            reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    DASH            reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    OP_INC          reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    OP_DEC          reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    EXCLAMATION     reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    TILDE           reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    VOID            reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    NEW             reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    SUPER           reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    THIS            reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    LPAREN          reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    CharacterLiteral reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    StringLiteral   reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    NULL            reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    NUMBER          reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    HEX_NUMBER      reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    LONG_NUMBER     reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    LONG_HEX_NUMBER reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    NON_INTEGER_1   reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    NON_INTEGER_2   reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    NON_INTEGER_3   reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    TRUE            reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    FALSE           reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    ELSE            reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    CASE            reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    DEFAULT         reduce using rule 271 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)


state 975

    (272) formalParameter -> variableModifiers type variableDeclaratorId .

    RPAREN          reduce using rule 272 (formalParameter -> variableModifiers type variableDeclaratorId .)


state 976

    (187) explicitConstructorInvocation -> primary DOT expt_41 SUPER . arguments SEMI
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

    LPAREN          shift and go to state 204

    arguments                      shift and go to state 980

state 977

    (188) explicitConstructorInvocation -> primary DOT empty SUPER . arguments SEMI
    (401) arguments -> . LPAREN expressionList RPAREN
    (402) arguments -> . LPAREN RPAREN

    LPAREN          shift and go to state 204

    arguments                      shift and go to state 981

state 978

    (189) explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .

    SEMI            reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    Identifier      reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    CONTINUE        reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    BREAK           reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    THROW           reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    RETURN          reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    SYNCHRONIZED    reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    SWITCH          reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    TRY             reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    DO              reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    WHILE           reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    FOR             reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    IF              reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    ASSERT          reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    BLPAREN         reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    BOOLEAN         reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    CHAR            reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    BYTE            reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    SHORT           reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    INT             reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    LONG            reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    FLOAT           reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    DOUBLE          reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    PUBLIC          reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    PROTECTED       reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    PRIVATE         reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    ABSTRACT        reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    STATIC          reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    FINAL           reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    STRICTFP        reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    CLASS           reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    ENUM            reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    INTERFACE       reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    AT              reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    PLUS            reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    DASH            reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    OP_INC          reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    OP_DEC          reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    EXCLAMATION     reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    TILDE           reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    VOID            reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    NEW             reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    SUPER           reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    THIS            reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    LPAREN          reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    CharacterLiteral reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    StringLiteral   reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    NULL            reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    NUMBER          reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    HEX_NUMBER      reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    LONG_NUMBER     reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    LONG_HEX_NUMBER reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    NON_INTEGER_1   reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    NON_INTEGER_2   reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    NON_INTEGER_3   reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    TRUE            reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    FALSE           reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)
    BRPAREN         reduce using rule 189 (explicitConstructorInvocation -> expt_41 expr_6 arguments SEMI .)


state 979

    (190) explicitConstructorInvocation -> empty expr_6 arguments SEMI .

    SEMI            reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    Identifier      reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    CONTINUE        reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    BREAK           reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    THROW           reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    RETURN          reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    SYNCHRONIZED    reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    SWITCH          reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    TRY             reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    DO              reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    WHILE           reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    FOR             reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    IF              reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    ASSERT          reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    BLPAREN         reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    BOOLEAN         reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    CHAR            reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    BYTE            reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    SHORT           reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    INT             reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    LONG            reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    FLOAT           reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    DOUBLE          reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    PUBLIC          reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    PROTECTED       reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    PRIVATE         reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    ABSTRACT        reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    STATIC          reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    FINAL           reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    STRICTFP        reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    CLASS           reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    ENUM            reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    INTERFACE       reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    AT              reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    PLUS            reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    DASH            reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    OP_INC          reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    OP_DEC          reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    EXCLAMATION     reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    TILDE           reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    VOID            reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    NEW             reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    SUPER           reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    THIS            reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    LPAREN          reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    CharacterLiteral reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    StringLiteral   reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    NULL            reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    NUMBER          reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    HEX_NUMBER      reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    LONG_NUMBER     reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    LONG_HEX_NUMBER reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    NON_INTEGER_1   reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    NON_INTEGER_2   reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    NON_INTEGER_3   reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    TRUE            reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    FALSE           reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)
    BRPAREN         reduce using rule 190 (explicitConstructorInvocation -> empty expr_6 arguments SEMI .)


state 980

    (187) explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments . SEMI

    SEMI            shift and go to state 982


state 981

    (188) explicitConstructorInvocation -> primary DOT empty SUPER arguments . SEMI

    SEMI            shift and go to state 983


state 982

    (187) explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .

    SEMI            reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    Identifier      reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    CONTINUE        reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    BREAK           reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    THROW           reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    RETURN          reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    SYNCHRONIZED    reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    SWITCH          reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    TRY             reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    DO              reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    WHILE           reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    FOR             reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    IF              reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    ASSERT          reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    BLPAREN         reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    BOOLEAN         reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    CHAR            reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    BYTE            reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    SHORT           reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    INT             reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    LONG            reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    FLOAT           reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    DOUBLE          reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    PUBLIC          reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    PROTECTED       reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    PRIVATE         reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    ABSTRACT        reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    STATIC          reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    FINAL           reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    STRICTFP        reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    CLASS           reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    ENUM            reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    INTERFACE       reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    AT              reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    PLUS            reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    DASH            reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    OP_INC          reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    OP_DEC          reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    EXCLAMATION     reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    TILDE           reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    VOID            reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    NEW             reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    SUPER           reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    THIS            reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    LPAREN          reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    CharacterLiteral reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    StringLiteral   reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    NULL            reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    NUMBER          reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    HEX_NUMBER      reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    LONG_NUMBER     reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    LONG_HEX_NUMBER reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    NON_INTEGER_1   reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    NON_INTEGER_2   reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    NON_INTEGER_3   reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    TRUE            reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    FALSE           reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)
    BRPAREN         reduce using rule 187 (explicitConstructorInvocation -> primary DOT expt_41 SUPER arguments SEMI .)


state 983

    (188) explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .

    SEMI            reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    Identifier      reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    CONTINUE        reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    BREAK           reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    THROW           reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    RETURN          reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    SYNCHRONIZED    reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    SWITCH          reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    TRY             reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    DO              reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    WHILE           reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    FOR             reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    IF              reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    ASSERT          reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    BLPAREN         reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    BOOLEAN         reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    CHAR            reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    BYTE            reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    SHORT           reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    INT             reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    LONG            reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    FLOAT           reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    DOUBLE          reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    PUBLIC          reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    PROTECTED       reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    PRIVATE         reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    ABSTRACT        reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    STATIC          reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    FINAL           reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    STRICTFP        reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    CLASS           reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    ENUM            reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    INTERFACE       reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    AT              reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    PLUS            reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    DASH            reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    OP_INC          reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    OP_DEC          reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    EXCLAMATION     reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    TILDE           reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    VOID            reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    NEW             reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    SUPER           reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    THIS            reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    LPAREN          reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    CharacterLiteral reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    StringLiteral   reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    NULL            reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    NUMBER          reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    HEX_NUMBER      reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    LONG_NUMBER     reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    LONG_HEX_NUMBER reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    NON_INTEGER_1   reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    NON_INTEGER_2   reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    NON_INTEGER_3   reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    TRUE            reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    FALSE           reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)
    BRPAREN         reduce using rule 188 (explicitConstructorInvocation -> primary DOT empty SUPER arguments SEMI .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AT in state 0 resolved as shift
WARNING: shift/reduce conflict for AT in state 6 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 6 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 6 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 6 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 7 resolved as shift
WARNING: shift/reduce conflict for DOT in state 10 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 12 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 12 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 12 resolved as shift
WARNING: shift/reduce conflict for AT in state 12 resolved as shift
WARNING: shift/reduce conflict for Identifier in state 13 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 14 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 14 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 14 resolved as shift
WARNING: shift/reduce conflict for AT in state 14 resolved as shift
WARNING: shift/reduce conflict for AT in state 21 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 28 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 28 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 28 resolved as shift
WARNING: shift/reduce conflict for AT in state 28 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 41 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 41 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 41 resolved as shift
WARNING: shift/reduce conflict for AT in state 41 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 42 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 42 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 42 resolved as shift
WARNING: shift/reduce conflict for AT in state 42 resolved as shift
WARNING: shift/reduce conflict for DOT in state 48 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 52 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 52 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 52 resolved as shift
WARNING: shift/reduce conflict for AT in state 52 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 57 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 61 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 61 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 61 resolved as shift
WARNING: shift/reduce conflict for AT in state 61 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 64 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 64 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 64 resolved as shift
WARNING: shift/reduce conflict for AT in state 64 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 66 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 66 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 66 resolved as shift
WARNING: shift/reduce conflict for AT in state 66 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 72 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 72 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 72 resolved as shift
WARNING: shift/reduce conflict for AT in state 72 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 74 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 74 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 74 resolved as shift
WARNING: shift/reduce conflict for AT in state 74 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 86 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 89 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 90 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 90 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 90 resolved as shift
WARNING: shift/reduce conflict for AT in state 90 resolved as shift
WARNING: shift/reduce conflict for DOT in state 109 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 109 resolved as shift
WARNING: shift/reduce conflict for DOT in state 117 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 117 resolved as shift
WARNING: shift/reduce conflict for Identifier in state 169 resolved as shift
WARNING: shift/reduce conflict for AT in state 172 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 182 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 184 resolved as shift
WARNING: shift/reduce conflict for DOT in state 186 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 186 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 202 resolved as shift
WARNING: shift/reduce conflict for DOT in state 206 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 206 resolved as shift
WARNING: shift/reduce conflict for DOT in state 219 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 219 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 224 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 264 resolved as shift
WARNING: shift/reduce conflict for ASS_ADD in state 264 resolved as shift
WARNING: shift/reduce conflict for ASS_SUB in state 264 resolved as shift
WARNING: shift/reduce conflict for ASS_MUL in state 264 resolved as shift
WARNING: shift/reduce conflict for ASS_DIV in state 264 resolved as shift
WARNING: shift/reduce conflict for ASS_AND in state 264 resolved as shift
WARNING: shift/reduce conflict for ASS_OR in state 264 resolved as shift
WARNING: shift/reduce conflict for ASS_XOR in state 264 resolved as shift
WARNING: shift/reduce conflict for ASS_MOD in state 264 resolved as shift
WARNING: shift/reduce conflict for ASS_SHL in state 264 resolved as shift
WARNING: shift/reduce conflict for ASS_SHRR in state 264 resolved as shift
WARNING: shift/reduce conflict for ASS_SHR in state 264 resolved as shift
WARNING: shift/reduce conflict for DOT in state 266 resolved as shift
WARNING: shift/reduce conflict for LESS in state 266 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 266 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 267 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 268 resolved as shift
WARNING: shift/reduce conflict for DOT in state 282 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 286 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 291 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 292 resolved as shift
WARNING: shift/reduce conflict for AT in state 299 resolved as shift
WARNING: shift/reduce conflict for AT in state 302 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 318 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 321 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 323 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 325 resolved as shift
WARNING: shift/reduce conflict for AT in state 327 resolved as shift
WARNING: shift/reduce conflict for BRPAREN in state 369 resolved as shift
WARNING: shift/reduce conflict for BRPAREN in state 371 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 372 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 429 resolved as shift
WARNING: shift/reduce conflict for Identifier in state 430 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 433 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 436 resolved as shift
WARNING: shift/reduce conflict for AT in state 439 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 443 resolved as shift
WARNING: shift/reduce conflict for AT in state 471 resolved as shift
WARNING: shift/reduce conflict for Identifier in state 487 resolved as shift
WARNING: shift/reduce conflict for Identifier in state 533 resolved as shift
WARNING: shift/reduce conflict for AT in state 538 resolved as shift
WARNING: shift/reduce conflict for BRPAREN in state 541 resolved as shift
WARNING: shift/reduce conflict for BRPAREN in state 543 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 548 resolved as shift
WARNING: shift/reduce conflict for AT in state 552 resolved as shift
WARNING: shift/reduce conflict for BRPAREN in state 554 resolved as shift
WARNING: shift/reduce conflict for BRPAREN in state 556 resolved as shift
WARNING: shift/reduce conflict for AT in state 607 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 612 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 612 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 612 resolved as shift
WARNING: shift/reduce conflict for AT in state 612 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 660 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 663 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 663 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 663 resolved as shift
WARNING: shift/reduce conflict for AT in state 663 resolved as shift
WARNING: shift/reduce conflict for DOT in state 666 resolved as shift
WARNING: shift/reduce conflict for LESS in state 666 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 666 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 717 resolved as shift
WARNING: shift/reduce conflict for BRPAREN in state 722 resolved as shift
WARNING: shift/reduce conflict for DOT in state 745 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 745 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 748 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 760 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 764 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 775 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 800 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 818 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 821 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 821 resolved as shift
WARNING: shift/reduce conflict for VOID in state 823 resolved as shift
WARNING: shift/reduce conflict for Identifier in state 823 resolved as shift
WARNING: shift/reduce conflict for NEW in state 823 resolved as shift
WARNING: shift/reduce conflict for SUPER in state 823 resolved as shift
WARNING: shift/reduce conflict for THIS in state 823 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 823 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 823 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 823 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 823 resolved as shift
WARNING: shift/reduce conflict for INT in state 823 resolved as shift
WARNING: shift/reduce conflict for LONG in state 823 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 823 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 823 resolved as shift
WARNING: shift/reduce conflict for CharacterLiteral in state 823 resolved as shift
WARNING: shift/reduce conflict for StringLiteral in state 823 resolved as shift
WARNING: shift/reduce conflict for NULL in state 823 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 823 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 823 resolved as shift
WARNING: shift/reduce conflict for HEX_NUMBER in state 823 resolved as shift
WARNING: shift/reduce conflict for LONG_NUMBER in state 823 resolved as shift
WARNING: shift/reduce conflict for LONG_HEX_NUMBER in state 823 resolved as shift
WARNING: shift/reduce conflict for NON_INTEGER_1 in state 823 resolved as shift
WARNING: shift/reduce conflict for NON_INTEGER_2 in state 823 resolved as shift
WARNING: shift/reduce conflict for NON_INTEGER_3 in state 823 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 823 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 823 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 844 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 846 resolved as shift
WARNING: shift/reduce conflict for CASE in state 867 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 867 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 867 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 867 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 867 resolved as shift
WARNING: shift/reduce conflict for AT in state 867 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 880 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 880 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 880 resolved as shift
WARNING: shift/reduce conflict for AT in state 880 resolved as shift
WARNING: shift/reduce conflict for THIS in state 883 resolved as shift
WARNING: shift/reduce conflict for SUPER in state 883 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 883 resolved as shift
WARNING: shift/reduce conflict for Identifier in state 883 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 883 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 883 resolved as shift
WARNING: shift/reduce conflict for THROW in state 883 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 883 resolved as shift
WARNING: shift/reduce conflict for SYNCHRONIZED in state 883 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 883 resolved as shift
WARNING: shift/reduce conflict for TRY in state 883 resolved as shift
WARNING: shift/reduce conflict for DO in state 883 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 883 resolved as shift
WARNING: shift/reduce conflict for FOR in state 883 resolved as shift
WARNING: shift/reduce conflict for IF in state 883 resolved as shift
WARNING: shift/reduce conflict for ASSERT in state 883 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 883 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 883 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 883 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 883 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 883 resolved as shift
WARNING: shift/reduce conflict for INT in state 883 resolved as shift
WARNING: shift/reduce conflict for LONG in state 883 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 883 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 883 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 883 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 883 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 883 resolved as shift
WARNING: shift/reduce conflict for ABSTRACT in state 883 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 883 resolved as shift
WARNING: shift/reduce conflict for FINAL in state 883 resolved as shift
WARNING: shift/reduce conflict for STRICTFP in state 883 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 883 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 883 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 883 resolved as shift
WARNING: shift/reduce conflict for AT in state 883 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 883 resolved as shift
WARNING: shift/reduce conflict for DASH in state 883 resolved as shift
WARNING: shift/reduce conflict for OP_INC in state 883 resolved as shift
WARNING: shift/reduce conflict for OP_DEC in state 883 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 883 resolved as shift
WARNING: shift/reduce conflict for TILDE in state 883 resolved as shift
WARNING: shift/reduce conflict for VOID in state 883 resolved as shift
WARNING: shift/reduce conflict for NEW in state 883 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 883 resolved as shift
WARNING: shift/reduce conflict for CharacterLiteral in state 883 resolved as shift
WARNING: shift/reduce conflict for StringLiteral in state 883 resolved as shift
WARNING: shift/reduce conflict for NULL in state 883 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 883 resolved as shift
WARNING: shift/reduce conflict for HEX_NUMBER in state 883 resolved as shift
WARNING: shift/reduce conflict for LONG_NUMBER in state 883 resolved as shift
WARNING: shift/reduce conflict for LONG_HEX_NUMBER in state 883 resolved as shift
WARNING: shift/reduce conflict for NON_INTEGER_1 in state 883 resolved as shift
WARNING: shift/reduce conflict for NON_INTEGER_2 in state 883 resolved as shift
WARNING: shift/reduce conflict for NON_INTEGER_3 in state 883 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 883 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 883 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 894 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 894 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 896 resolved as shift
WARNING: shift/reduce conflict for BLPAREN in state 896 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 907 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 909 resolved as shift
WARNING: shift/reduce conflict for DOT in state 917 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 917 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 921 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 921 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 921 resolved as shift
WARNING: shift/reduce conflict for AT in state 921 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 927 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 927 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 927 resolved as shift
WARNING: shift/reduce conflict for AT in state 927 resolved as shift
WARNING: shift/reduce conflict for DOT in state 933 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 933 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 933 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 934 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 934 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 934 resolved as shift
WARNING: shift/reduce conflict for AT in state 934 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 937 resolved as shift
WARNING: shift/reduce conflict for SUPER in state 957 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (expt_2 -> empty)
WARNING: rejected rule (empty -> <empty>) in state 7
WARNING: reduce/reduce conflict in state 33 resolved using rule (classOrInterfaceModifier -> annotation)
WARNING: rejected rule (annotations -> annotations annotation) in state 33
WARNING: reduce/reduce conflict in state 266 resolved using rule (primary -> Identifier)
WARNING: rejected rule (empty -> <empty>) in state 266
WARNING: reduce/reduce conflict in state 282 resolved using rule (expt_32 -> empty)
WARNING: rejected rule (empty -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 291 resolved using rule (enumConstant -> Identifier)
WARNING: rejected rule (empty -> <empty>) in state 291
WARNING: reduce/reduce conflict in state 292 resolved using rule (expt_13 -> empty)
WARNING: rejected rule (empty -> <empty>) in state 292
WARNING: reduce/reduce conflict in state 315 resolved using rule (typeParameter -> Identifier empty)
WARNING: rejected rule (expt_11 -> empty) in state 315
WARNING: reduce/reduce conflict in state 433 resolved using rule (enumConstant -> expt_17 Identifier)
WARNING: rejected rule (empty -> <empty>) in state 433
WARNING: reduce/reduce conflict in state 436 resolved using rule (expt_14 -> empty)
WARNING: rejected rule (empty -> <empty>) in state 436
WARNING: reduce/reduce conflict in state 443 resolved using rule (expt_14 -> empty)
WARNING: rejected rule (empty -> <empty>) in state 443
WARNING: reduce/reduce conflict in state 506 resolved using rule (selector -> DOT Identifier empty)
WARNING: rejected rule (expt_18 -> empty) in state 506
WARNING: reduce/reduce conflict in state 521 resolved using rule (superSuffix -> DOT Identifier empty)
WARNING: rejected rule (expt_18 -> empty) in state 521
WARNING: reduce/reduce conflict in state 529 resolved using rule (typeArgument -> QUES empty)
WARNING: rejected rule (expt_35 -> empty) in state 529
WARNING: reduce/reduce conflict in state 558 resolved using rule (annotationTypeElementRest -> normalInterfaceDeclaration empty)
WARNING: rejected rule (expt_48 -> empty) in state 558
WARNING: reduce/reduce conflict in state 561 resolved using rule (annotationTypeElementRest -> normalClassDeclaration empty)
WARNING: rejected rule (expt_48 -> empty) in state 561
WARNING: reduce/reduce conflict in state 569 resolved using rule (annotationTypeElementRest -> enumDeclaration empty)
WARNING: rejected rule (expt_48 -> empty) in state 569
WARNING: reduce/reduce conflict in state 572 resolved using rule (annotationTypeElementRest -> annotationTypeDeclaration empty)
WARNING: rejected rule (expt_48 -> empty) in state 572
WARNING: reduce/reduce conflict in state 633 resolved using rule (variableDeclarator -> variableDeclaratorId empty)
WARNING: rejected rule (expt_27 -> empty) in state 633
WARNING: reduce/reduce conflict in state 662 resolved using rule (classOrInterfaceModifier -> FINAL)
WARNING: rejected rule (variableModifier -> FINAL) in state 662
WARNING: reduce/reduce conflict in state 666 resolved using rule (primary -> Identifier)
WARNING: rejected rule (empty -> <empty>) in state 666
WARNING: reduce/reduce conflict in state 682 resolved using rule (localVariableDeclarationStatement -> SEMI)
WARNING: rejected rule (statement -> SEMI) in state 682
WARNING: reduce/reduce conflict in state 683 resolved using rule (classOrInterfaceModifier -> annotation)
WARNING: rejected rule (variableModifier -> annotation) in state 683
WARNING: reduce/reduce conflict in state 772 resolved using rule (annotationMethodRest -> Identifier LPAREN RPAREN empty)
WARNING: rejected rule (expt_49 -> empty) in state 772
WARNING: reduce/reduce conflict in state 883 resolved using rule (expt_39 -> empty)
WARNING: rejected rule (expt_41 -> empty) in state 883
WARNING: reduce/reduce conflict in state 883 resolved using rule (expt_39 -> empty)
WARNING: rejected rule (empty -> <empty>) in state 883
WARNING: reduce/reduce conflict in state 891 resolved using rule (formalParameterDeclsRest -> variableDeclaratorId empty)
WARNING: rejected rule (expt_38 -> empty) in state 891
WARNING: reduce/reduce conflict in state 917 resolved using rule (enumConstantName -> Identifier)
WARNING: rejected rule (primary -> Identifier) in state 917
WARNING: reduce/reduce conflict in state 965 resolved using rule (forControl -> expt_57 SEMI expt_58 SEMI empty)
WARNING: rejected rule (expt_59 -> empty) in state 965
WARNING: reduce/reduce conflict in state 968 resolved using rule (forControl -> expt_57 SEMI empty SEMI empty)
WARNING: rejected rule (expt_59 -> empty) in state 968
WARNING: reduce/reduce conflict in state 970 resolved using rule (forControl -> empty SEMI expt_58 SEMI empty)
WARNING: rejected rule (expt_59 -> empty) in state 970
WARNING: reduce/reduce conflict in state 972 resolved using rule (forControl -> empty SEMI empty SEMI empty)
WARNING: rejected rule (expt_59 -> empty) in state 972
WARNING: Rule (expt_11 -> empty) is never reduced
WARNING: Rule (expt_35 -> empty) is never reduced
WARNING: Rule (expt_48 -> empty) is never reduced
WARNING: Rule (expt_27 -> empty) is never reduced
WARNING: Rule (expt_49 -> empty) is never reduced
WARNING: Rule (expt_41 -> empty) is never reduced
WARNING: Rule (expt_38 -> empty) is never reduced
WARNING: Rule (expt_59 -> empty) is never reduced
